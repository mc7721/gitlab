{
    "id": "10469fbc7583a81c01a2f2ef061621ab",
    "name": "GitLab API",
    "description": null,
    "auth": null,
    "events": null,
    "variables": [],
    "order": [],
    "folders_order": [],
    "folders": [],
    "requests": [
        {
            "id": "5700d11922e4c4619c2c11ff4bab3cb9",
            "name": "List groups",
            "url": "http:\/\/gitlab.com\/api\/v3\/groups",
            "description": "Get a list of groups. (As user: my groups, as admin: all groups)",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "10469fbc7583a81c01a2f2ef061621ab",
            "rawModeData": ""
        },
        {
            "id": "a7bb1b0968c1a65442442c102fb31494",
            "name": "",
            "url": "http:\/\/gitlab.com\/api\/v3\/groups\/{id}\/projects",
            "description": "",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "parameters",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "10469fbc7583a81c01a2f2ef061621ab",
            "rawModeData": ""
        },
        {
            "id": "c96b66354c85118d56573c1284a0ee4d",
            "name": "List a group's projects",
            "url": "http:\/\/gitlab.com\/api\/v3\/groups\/{id}\/projects",
            "description": "Get a list of projects in this group.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "archived",
                    "description": "if passed, limit by archived status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "visibility",
                    "description": "if passed, limit by visibility `public`, `internal`, `private`",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "order_by",
                    "description": "Return requests ordered by `id`, `name`, `path`, `created_at`, `updated_at` or `last_activity_at` fields. Default is `created_at",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort",
                    "description": "Return requests sorted in `asc` or `desc` order. Default is `desc`",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "search",
                    "description": "Return list of authorized projects according to a search criteria",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ci_enabled_first",
                    "description": "Return projects ordered by ci_enabled flag. Projects with enabled GitLab CI go first",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "10469fbc7583a81c01a2f2ef061621ab",
            "rawModeData": ""
        },
        {
            "id": "a9b5291aeac55272b3bc90f65d4cd8f8",
            "name": "List projects",
            "url": "http:\/\/gitlab.com\/api\/v3\/projects",
            "description": "Get a list of projects for which the authenticated user is a member.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "archived",
                    "description": "if passed, limit by archived status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "visibility",
                    "description": "if passed, limit by visibility `public`, `internal`, `private`",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "order_by",
                    "description": "Return requests ordered by `id`, `name`, `path`, `created_at`, `updated_at` or `last_activity_at` fields. Default is `created_at",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort",
                    "description": "Return requests sorted in `asc` or `desc` order. Default is `desc`",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "search",
                    "description": "Return list of authorized projects according to a search criteria",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "simple",
                    "description": "Return only the ID, URL, name, and path of each project",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "10469fbc7583a81c01a2f2ef061621ab",
            "rawModeData": ""
        },
        {
            "id": "42f63f9925279ff02b8abaa401149cfe",
            "name": "",
            "url": "http:\/\/gitlab.com\/api\/v3\/projects\/{id}",
            "description": "",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "parameters",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "10469fbc7583a81c01a2f2ef061621ab",
            "rawModeData": ""
        },
        {
            "id": "c53660e9831a75c92610be548ee581e2",
            "name": "Get single project",
            "url": "http:\/\/gitlab.com\/api\/v3\/projects\/{id}",
            "description": "Get a specific project, identified by project ID or NAMESPACE\/PROJECT_NAME, which is owned by the authenticated user. If using namespaced projects call make sure that the NAMESPACE\/PROJECT_NAME is URL-encoded, eg. \/api\/v3\/projects\/diaspora%2Fdiaspora (where \/ is represented by %2F).",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "10469fbc7583a81c01a2f2ef061621ab",
            "rawModeData": ""
        },
        {
            "id": "c645cbb2fe5f97bca92f8dfc0020541a",
            "name": "",
            "url": "http:\/\/gitlab.com\/api\/v3\/projects\/{id}\/repository\/branches",
            "description": "",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "parameters",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "10469fbc7583a81c01a2f2ef061621ab",
            "rawModeData": ""
        },
        {
            "id": "8f123e7bed9bda93db54756957e45e44",
            "name": "List branches",
            "url": "http:\/\/gitlab.com\/api\/v3\/projects\/{id}\/repository\/branches",
            "description": "Lists all branches of a project.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "10469fbc7583a81c01a2f2ef061621ab",
            "rawModeData": ""
        },
        {
            "id": "ca6e82fd861b0a2847e30c37068a73e5",
            "name": "",
            "url": "http:\/\/gitlab.com\/api\/v3\/projects\/{id}\/repository\/tags",
            "description": "",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "parameters",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "10469fbc7583a81c01a2f2ef061621ab",
            "rawModeData": ""
        },
        {
            "id": "e9b1277c08fe6bcb8294fcfd4949795f",
            "name": "List project repository tags",
            "url": "http:\/\/gitlab.com\/api\/v3\/projects\/{id}\/repository\/tags",
            "description": "Get a list of repository tags from a project, sorted by name in reverse alphabetical order.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "10469fbc7583a81c01a2f2ef061621ab",
            "rawModeData": ""
        },
        {
            "id": "e43c5fb70b8baa36c926f80ec7b49952",
            "name": "",
            "url": "http:\/\/gitlab.com\/api\/v3\/projects\/{id}\/merge_requests",
            "description": "",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "parameters",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "10469fbc7583a81c01a2f2ef061621ab",
            "rawModeData": ""
        },
        {
            "id": "95e3f0543e21395f6dd5d4b6cd70aa09",
            "name": "List merge requests",
            "url": "http:\/\/gitlab.com\/api\/v3\/projects\/{id}\/merge_requests",
            "description": "Get all merge requests for this project. The state parameter can be used to get only merge requests with a given state (`opened`, `closed`, or `merged`) or all of them (`all`). The pagination parameters `page` and `per_page` can be used to restrict the list of merge requests.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "iid",
                    "description": "Return the request having the given `iid`",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "state",
                    "description": "Return `all` requests or just those that are `merged`, `opened` or `closed`",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "order_by",
                    "description": "Return requests ordered by `id`, `name`, `path`, `created_at`, `updated_at` or `last_activity_at` fields. Default is `created_at",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort",
                    "description": "Return requests sorted in `asc` or `desc` order. Default is `desc`",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "10469fbc7583a81c01a2f2ef061621ab",
            "rawModeData": ""
        },
        {
            "id": "a2770c5d41e611691e1767b6e835c9e7",
            "name": "Create MR",
            "url": "http:\/\/gitlab.com\/api\/v3\/projects\/{id}\/merge_requests",
            "description": "Creates a new merge request.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "source_branch",
                    "description": "The source branch",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "target_branch",
                    "description": "The target branch",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "assignee_id",
                    "description": "Assignee user ID",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "title",
                    "description": "Title of MR",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "description",
                    "description": "Description of MR",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "target_project_id",
                    "description": "The target project (numeric id)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "labels",
                    "description": "Labels for MR as a comma-separated list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "milestone_id",
                    "description": "Milestone ID",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "10469fbc7583a81c01a2f2ef061621ab",
            "rawModeData": ""
        },
        {
            "id": "f22340e4e87a9028500d90c2c6c03fdb",
            "name": "",
            "url": "http:\/\/gitlab.com\/api\/v3\/projects\/{id}\/merge_requests\/{merge_request_id}",
            "description": "",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "parameters",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "10469fbc7583a81c01a2f2ef061621ab",
            "rawModeData": ""
        },
        {
            "id": "494c6ff5bc38fd97590f53660a5358be",
            "name": "Update MR",
            "url": "http:\/\/gitlab.com\/api\/v3\/projects\/{id}\/merge_requests\/{merge_request_id}",
            "description": "Updates an existing merge request. You can change the target branch, title, or even close the MR.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "target_branch",
                    "description": "The target branch",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "assignee_id",
                    "description": "Assignee user ID",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "title",
                    "description": "Title of MR",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "description",
                    "description": "Description of MR",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "state_event",
                    "description": "New state (close|reopen|merge)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "labels",
                    "description": "Labels for MR as a comma-separated list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "milestone_id",
                    "description": "Milestone ID",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "10469fbc7583a81c01a2f2ef061621ab",
            "rawModeData": ""
        },
        {
            "id": "b23d973fa68bc6f56a12d9e7a8967644",
            "name": "",
            "url": "http:\/\/gitlab.com\/api\/v3\/projects\/{id}\/merge_requests\/{merge_request_id}\/merge",
            "description": "",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "parameters",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "10469fbc7583a81c01a2f2ef061621ab",
            "rawModeData": ""
        },
        {
            "id": "0632ce1e1e23b11be5039dff46a9f4db",
            "name": "Accept MR",
            "url": "http:\/\/gitlab.com\/api\/v3\/projects\/{id}\/merge_requests\/{merge_request_id}\/merge",
            "description": "Merge changes submitted with MR using this API. If the merge succeeds you'll get a 200 OK. If it has some conflicts and can not be merged - you'll get a 405 and the error message 'Branch cannot be merged' If merge request is already merged or closed - you'll get a 406 and the error message 'Method Not Allowed' If the sha parameter is passed and does not match the HEAD of the source - you'll get a 409 and the error message 'SHA does not match HEAD of source branch' If you don't have permissions t",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "10469fbc7583a81c01a2f2ef061621ab",
            "rawModeData": ""
        },
        {
            "id": "33145e1192111c755c15fbd0e1e6ea8f",
            "name": "",
            "url": "http:\/\/gitlab.com\/api\/v3\/projects\/{id}\/snippets",
            "description": "",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "parameters",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "10469fbc7583a81c01a2f2ef061621ab",
            "rawModeData": ""
        },
        {
            "id": "30d01dfa5fe0d9356002652aefe93a40",
            "name": "List snippets",
            "url": "http:\/\/gitlab.com\/api\/v3\/projects\/{id}\/snippets",
            "description": "Lists all snippets of a project.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "10469fbc7583a81c01a2f2ef061621ab",
            "rawModeData": ""
        },
        {
            "id": "8defa6cb7e609cf7e0f6a3c94d4cf5ec",
            "name": "Create Snippet",
            "url": "http:\/\/gitlab.com\/api\/v3\/projects\/{id}\/snippets",
            "description": "Creates a new project snippet. The user must have permission to create new snippets.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "title",
                    "description": "Title of MR",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "file_name",
                    "description": "The name of a snippet file",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "code",
                    "description": "The content of a snippet",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "visibility_level",
                    "description": "The snippet's visibility",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "10469fbc7583a81c01a2f2ef061621ab",
            "rawModeData": ""
        },
        {
            "id": "82446437ebb8b2f3efafb1b8f98b8e20",
            "name": "",
            "url": "http:\/\/gitlab.com\/api\/v3\/projects\/{id}\/snippets\/{snippet_id}",
            "description": "",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "parameters",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "10469fbc7583a81c01a2f2ef061621ab",
            "rawModeData": ""
        },
        {
            "id": "84cf60bd0c9add5def6db5deb184125f",
            "name": "Single Snippet",
            "url": "http:\/\/gitlab.com\/api\/v3\/projects\/{id}\/snippets\/{snippet_id}",
            "description": "Get a single project snippet.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "10469fbc7583a81c01a2f2ef061621ab",
            "rawModeData": ""
        },
        {
            "id": "f9e08ce639218febe530e81d551d1613",
            "name": "Single Snippet",
            "url": "http:\/\/gitlab.com\/api\/v3\/projects\/{id}\/snippets\/{snippet_id}",
            "description": "Get a single project snippet.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "title",
                    "description": "Title of MR",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "file_name",
                    "description": "The name of a snippet file",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "code",
                    "description": "The content of a snippet",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "visibility_level",
                    "description": "The snippet's visibility",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "10469fbc7583a81c01a2f2ef061621ab",
            "rawModeData": ""
        },
        {
            "id": "e51f7417333d693c9a63fdf19ce7bc0f",
            "name": "Delete Snippet",
            "url": "http:\/\/gitlab.com\/api\/v3\/projects\/{id}\/snippets\/{snippet_id}",
            "description": "Deletes an existing project snippet.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "10469fbc7583a81c01a2f2ef061621ab",
            "rawModeData": ""
        },
        {
            "id": "8a7ecb8283083df0fc2060e02d4da0e0",
            "name": "",
            "url": "http:\/\/gitlab.com\/api\/v3\/projects\/{id}\/snippets\/{snippet_id}\/raw",
            "description": "",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "parameters",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "10469fbc7583a81c01a2f2ef061621ab",
            "rawModeData": ""
        },
        {
            "id": "190d1e5bf3bb0f40d7a2543ade4dcc98",
            "name": "Snippet content",
            "url": "http:\/\/gitlab.com\/api\/v3\/projects\/{id}\/snippets\/{snippet_id}\/raw",
            "description": "Returns the raw project snippet as plain text.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "10469fbc7583a81c01a2f2ef061621ab",
            "rawModeData": ""
        }
    ]
}