{
    "openapi": "3.0.0",
    "info": {
        "version": "",
        "title": "Gitlab",
        "description": "The platform for modern developers\nGitLab unifies issues, code review, CI and CD into a single UI",
        "termsOfService": ""
    },
    "servers": [
        "httpsgitlab.com\/api"
    ],
    "paths": {
        "\/application\/settings": {
            "get": {
                "summary": "Get Application Settings",
                "description": "Get the current application settings",
                "operationId": "GetV3ApplicationSettings",
                "deprecated": 0,
                "parameters": []
            },
            "put": {
                "summary": "Put Application Settings",
                "description": "Modify application settings",
                "operationId": "PutV3ApplicationSettings",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "default_branch_protection",
                        "in": "formData",
                        "description": "Determine if developers can push to master"
                    },
                    {
                        "name": "default_project_visibility",
                        "in": "formData",
                        "description": "The default project visibility"
                    },
                    {
                        "name": "default_snippet_visibility",
                        "in": "formData",
                        "description": "The default snippet visibility"
                    },
                    {
                        "name": "default_group_visibility",
                        "in": "formData",
                        "description": "The default group visibility"
                    },
                    {
                        "name": "restricted_visibility_levels",
                        "in": "formData",
                        "description": "Selected levels cannot be used by non-admin users for projects or snippets. If the public level is restricted, user profiles are only visible to logged in users."
                    },
                    {
                        "name": "import_sources",
                        "in": "formData",
                        "description": "Enabled sources for code import during project creation. OmniAuth must be configured for GitHub, Bitbucket, and GitLab.com"
                    },
                    {
                        "name": "disabled_oauth_sign_in_sources",
                        "in": "formData",
                        "description": "Disable certain OAuth sign-in sources"
                    },
                    {
                        "name": "enabled_git_access_protocol",
                        "in": "formData",
                        "description": "Allow only the selected protocols to be used for Git access."
                    },
                    {
                        "name": "gravatar_enabled",
                        "in": "formData",
                        "description": "Flag indicating if the Gravatar service is enabled"
                    },
                    {
                        "name": "default_projects_limit",
                        "in": "formData",
                        "description": "The maximum number of personal projects"
                    },
                    {
                        "name": "max_attachment_size",
                        "in": "formData",
                        "description": "Maximum attachment size in MB"
                    },
                    {
                        "name": "session_expire_delay",
                        "in": "formData",
                        "description": "Session duration in minutes. GitLab restart is required to apply changes."
                    },
                    {
                        "name": "user_oauth_applications",
                        "in": "formData",
                        "description": "Allow users to register any application to use GitLab as an OAuth provider"
                    },
                    {
                        "name": "user_default_external",
                        "in": "formData",
                        "description": "Newly registered users will by default be external"
                    },
                    {
                        "name": "signup_enabled",
                        "in": "formData",
                        "description": "Flag indicating if sign up is enabled"
                    },
                    {
                        "name": "send_user_confirmation_email",
                        "in": "formData",
                        "description": "Send confirmation email on sign-up"
                    },
                    {
                        "name": "domain_whitelist",
                        "in": "formData",
                        "description": "ONLY users with e-mail addresses that match these domain(s) will be able to sign-up. Wildcards allowed. Use separate lines for multiple entries. Ex: domain.com, *.domain.com"
                    },
                    {
                        "name": "domain_blacklist_enabled",
                        "in": "formData",
                        "description": "Enable domain blacklist for sign ups"
                    },
                    {
                        "name": "domain_blacklist",
                        "in": "formData",
                        "description": "Users with e-mail addresses that match these domain(s) will NOT be able to sign-up. Wildcards allowed. Use separate lines for multiple entries. Ex: domain.com, *.domain.com"
                    },
                    {
                        "name": "after_sign_up_text",
                        "in": "formData",
                        "description": "Text shown after sign up"
                    },
                    {
                        "name": "signin_enabled",
                        "in": "formData",
                        "description": "Flag indicating if sign in is enabled"
                    },
                    {
                        "name": "require_two_factor_authentication",
                        "in": "formData",
                        "description": "Require all users to setup Two-factor authentication"
                    },
                    {
                        "name": "two_factor_grace_period",
                        "in": "formData",
                        "description": "Amount of time (in hours) that users are allowed to skip forced configuration of two-factor authentication"
                    },
                    {
                        "name": "home_page_url",
                        "in": "formData",
                        "description": "We will redirect non-logged in users to this page"
                    },
                    {
                        "name": "after_sign_out_path",
                        "in": "formData",
                        "description": "We will redirect users to this page after they sign out"
                    },
                    {
                        "name": "sign_in_text",
                        "in": "formData",
                        "description": "The sign in text of the GitLab application"
                    },
                    {
                        "name": "help_page_text",
                        "in": "formData",
                        "description": "Custom text displayed on the help page"
                    },
                    {
                        "name": "shared_runners_enabled",
                        "in": "formData",
                        "description": "Enable shared runners for new projects"
                    },
                    {
                        "name": "shared_runners_text",
                        "in": "formData",
                        "description": "Shared runners text "
                    },
                    {
                        "name": "max_artifacts_size",
                        "in": "formData",
                        "description": "Set the maximum file size each build's artifacts can have"
                    },
                    {
                        "name": "container_registry_token_expire_delay",
                        "in": "formData",
                        "description": "Authorization token duration (minutes)"
                    },
                    {
                        "name": "metrics_enabled",
                        "in": "formData",
                        "description": "Enable the InfluxDB metrics"
                    },
                    {
                        "name": "metrics_host",
                        "in": "formData",
                        "description": "The InfluxDB host"
                    },
                    {
                        "name": "metrics_port",
                        "in": "formData",
                        "description": "The UDP port to use for connecting to InfluxDB"
                    },
                    {
                        "name": "metrics_pool_size",
                        "in": "formData",
                        "description": "The amount of InfluxDB connections to open"
                    },
                    {
                        "name": "metrics_timeout",
                        "in": "formData",
                        "description": "The amount of seconds after which an InfluxDB connection will time out"
                    },
                    {
                        "name": "metrics_method_call_threshold",
                        "in": "formData",
                        "description": "A method call is only tracked when it takes longer to complete than the given amount of milliseconds."
                    },
                    {
                        "name": "metrics_sample_interval",
                        "in": "formData",
                        "description": "The sampling interval in seconds"
                    },
                    {
                        "name": "metrics_packet_size",
                        "in": "formData",
                        "description": "The amount of points to store in a single UDP packet"
                    },
                    {
                        "name": "sidekiq_throttling_enabled",
                        "in": "formData",
                        "description": "Enable Sidekiq Job Throttling"
                    },
                    {
                        "name": "sidekiq_throttling_queus",
                        "in": "formData",
                        "description": "Choose which queues you wish to throttle"
                    },
                    {
                        "name": "sidekiq_throttling_factor",
                        "in": "formData",
                        "description": "The factor by which the queues should be throttled. A value between 0.0 and 1.0, exclusive."
                    },
                    {
                        "name": "recaptcha_enabled",
                        "in": "formData",
                        "description": "Helps prevent bots from creating accounts"
                    },
                    {
                        "name": "recaptcha_site_key",
                        "in": "formData",
                        "description": "Generate site key at http:\/\/www.google.com\/recaptcha"
                    },
                    {
                        "name": "recaptcha_private_key",
                        "in": "formData",
                        "description": "Generate private key at http:\/\/www.google.com\/recaptcha"
                    },
                    {
                        "name": "akismet_enabled",
                        "in": "formData",
                        "description": "Helps prevent bots from creating issues"
                    },
                    {
                        "name": "akismet_api_key",
                        "in": "formData",
                        "description": "Generate API key at http:\/\/www.akismet.com"
                    },
                    {
                        "name": "admin_notification_email",
                        "in": "formData",
                        "description": "Abuse reports will be sent to this address if it is set. Abuse reports are always available in the admin area."
                    },
                    {
                        "name": "sentry_enabled",
                        "in": "formData",
                        "description": "Sentry is an error reporting and logging tool which is currently not shipped with GitLab, get it here: https:\/\/getsentry.com"
                    },
                    {
                        "name": "sentry_dsn",
                        "in": "formData",
                        "description": "Sentry Data Source Name"
                    },
                    {
                        "name": "repository_storage",
                        "in": "formData",
                        "description": "Storage paths for new projects"
                    },
                    {
                        "name": "repository_checks_enabled",
                        "in": "formData",
                        "description": "GitLab will periodically run 'git fsck' in all project and wiki repositories to look for silent disk corruption issues."
                    },
                    {
                        "name": "koding_enabled",
                        "in": "formData",
                        "description": "Enable Koding"
                    },
                    {
                        "name": "koding_url",
                        "in": "formData",
                        "description": "The Koding team URL"
                    },
                    {
                        "name": "plantuml_enabled",
                        "in": "formData",
                        "description": "Enable PlantUML"
                    },
                    {
                        "name": "plantuml_url",
                        "in": "formData",
                        "description": "The PlantUML server URL"
                    },
                    {
                        "name": "version_check_enabled",
                        "in": "formData",
                        "description": "Let GitLab inform you when an update is available."
                    },
                    {
                        "name": "email_author_in_body",
                        "in": "formData",
                        "description": "Some email servers do not support overriding the email sender name. Enable this option to include the name of the author of the issue, merge request or comment in the email body instead."
                    },
                    {
                        "name": "html_emails_enabled",
                        "in": "formData",
                        "description": "By default GitLab sends emails in HTML and plain text formats so mail clients can choose what format to use. Disable this option if you only want to send emails in plain text format."
                    },
                    {
                        "name": "housekeeping_enabled",
                        "in": "formData",
                        "description": "Enable automatic repository housekeeping (git repack, git gc)"
                    },
                    {
                        "name": "housekeeping_bitmaps_enabled",
                        "in": "formData",
                        "description": "Creating pack file bitmaps makes housekeeping take a little longer but bitmaps should accelerate 'git clone' performance."
                    },
                    {
                        "name": "housekeeping_incremental_repack_period",
                        "in": "formData",
                        "description": "Number of Git pushes after which an incremental 'git repack' is run."
                    },
                    {
                        "name": "housekeeping_full_repack_period",
                        "in": "formData",
                        "description": "Number of Git pushes after which a full 'git repack' is run."
                    },
                    {
                        "name": "housekeeping_gc_period",
                        "in": "formData",
                        "description": "Number of Git pushes after which 'git gc' is run."
                    }
                ]
            }
        },
        "\/ci\/lint": {
            "post": {
                "summary": "Add Ci Lint",
                "description": "Validation of .gitlab-ci.yml content",
                "operationId": "PostV3CiLint",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "content",
                        "in": "formData",
                        "description": "Content of .gitlab-ci.yml"
                    }
                ]
            }
        },
        "\/deploy_keys": {
            "get": {
                "summary": "Get Deploy Keys",
                "description": "Get deploy keys",
                "operationId": "GetV3DeployKeys",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/dockerfiles": {
            "get": {
                "summary": "Get Dockerfiles",
                "description": "This feature was introduced in GitLab 8.15. This endpoint is deprecated and will be removed in GitLab 9.0.",
                "operationId": "GetV3Dockerfiles",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/dockerfiles\/{name}": {
            "get": {
                "summary": "Get Dockerfiles Name",
                "description": "This feature was introduced in GitLab 8.15. This endpoint is deprecated and will be removed in GitLab 9.0.",
                "operationId": "GetV3DockerfilesName",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the template"
                    }
                ]
            }
        },
        "\/gitignores": {
            "get": {
                "summary": "Get Gitignores",
                "description": "This feature was introduced in GitLab 8.8. This endpoint is deprecated and will be removed in GitLab 9.0.",
                "operationId": "GetV3Gitignores",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/gitignores\/{name}": {
            "get": {
                "summary": "Get Gitignores Name",
                "description": "This feature was introduced in GitLab 8.8. This endpoint is deprecated and will be removed in GitLab 9.0.",
                "operationId": "GetV3GitignoresName",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the template"
                    }
                ]
            }
        },
        "\/gitlab_ci_ymls": {
            "get": {
                "summary": "Get Gitlab Ci Ymls",
                "description": "This feature was introduced in GitLab 8.9. This endpoint is deprecated and will be removed in GitLab 9.0.",
                "operationId": "GetV3GitlabCiYmls",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/gitlab_ci_ymls\/{name}": {
            "get": {
                "summary": "Get Gitlab Ci Ymls Name",
                "description": "This feature was introduced in GitLab 8.9. This endpoint is deprecated and will be removed in GitLab 9.0.",
                "operationId": "GetV3GitlabCiYmlsName",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the template"
                    }
                ]
            }
        },
        "\/groups": {
            "get": {
                "summary": "Get Groups",
                "description": "Get a groups list",
                "operationId": "GetV3Groups",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "statistics",
                        "in": "query",
                        "description": "Include project statistics"
                    },
                    {
                        "name": "skip_groups",
                        "in": "formData",
                        "description": "Array of group ids to exclude from list"
                    },
                    {
                        "name": "all_available",
                        "in": "query",
                        "description": "Show all group that you have access to"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search for a specific group"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by name or path"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort by asc (ascending) or desc (descending)"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            },
            "post": {
                "summary": "Add Groups",
                "description": "Create a group. Available only for users who can create groups.",
                "operationId": "PostV3Groups",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "The name of the group"
                    },
                    {
                        "name": "path",
                        "in": "formData",
                        "description": "The path of the group"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "The description of the group"
                    },
                    {
                        "name": "visibility_level",
                        "in": "formData",
                        "description": "The visibility level of the group"
                    },
                    {
                        "name": "lfs_enabled",
                        "in": "formData",
                        "description": "Enable\/disable LFS for the projects in this group"
                    },
                    {
                        "name": "request_access_enabled",
                        "in": "formData",
                        "description": "Allow users to request member access"
                    }
                ]
            }
        },
        "\/groups\/owned": {
            "get": {
                "summary": "Get Groups Owned",
                "description": "Get list of owned groups for authenticated user",
                "operationId": "GetV3GroupsOwned",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    },
                    {
                        "name": "statistics",
                        "in": "query",
                        "description": "Include project statistics"
                    }
                ]
            }
        },
        "\/groups\/{id}": {
            "delete": {
                "summary": "Delete Groups",
                "description": "Remove a group.",
                "operationId": "DeleteV3GroupsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            },
            "get": {
                "summary": "Get Groups",
                "description": "Get a single group, with containing projects.",
                "operationId": "GetV3GroupsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            },
            "put": {
                "summary": "Put Groups",
                "description": "Update a group. Available only for users who can administrate groups.",
                "operationId": "PutV3GroupsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "The name of the group"
                    },
                    {
                        "name": "path",
                        "in": "formData",
                        "description": "The path of the group"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "The description of the group"
                    },
                    {
                        "name": "visibility_level",
                        "in": "formData",
                        "description": "The visibility level of the group"
                    },
                    {
                        "name": "lfs_enabled",
                        "in": "formData",
                        "description": "Enable\/disable LFS for the projects in this group"
                    },
                    {
                        "name": "request_access_enabled",
                        "in": "formData",
                        "description": "Allow users to request member access"
                    }
                ]
            }
        },
        "\/groups\/{id}\/access_requests": {
            "get": {
                "summary": "Get Groups  Access Requests",
                "description": "This feature was introduced in GitLab 8.11.",
                "operationId": "GetV3GroupsIdAccessRequests",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            },
            "post": {
                "summary": "Add Groups  Access Requests",
                "description": "This feature was introduced in GitLab 8.11.",
                "operationId": "PostV3GroupsIdAccessRequests",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/groups\/{id}\/access_requests\/{user_id}": {
            "delete": {
                "summary": "Delete Groups  Access Requests User",
                "description": "This feature was introduced in GitLab 8.11.",
                "operationId": "DeleteV3GroupsIdAccessRequestsUserId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The user ID of the access requester"
                    }
                ]
            }
        },
        "\/groups\/{id}\/access_requests\/{user_id}\/approve": {
            "put": {
                "summary": "Put Groups  Access Requests User  Approve",
                "description": "This feature was introduced in GitLab 8.11.",
                "operationId": "PutV3GroupsIdAccessRequestsUserIdApprove",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The user ID of the access requester"
                    },
                    {
                        "name": "access_level",
                        "in": "formData",
                        "description": "A valid access level (defaults: `30`, developer access level)"
                    }
                ]
            }
        },
        "\/groups\/{id}\/issues": {
            "get": {
                "summary": "Get Groups  Issues",
                "description": "Get a list of group issues",
                "operationId": "GetV3GroupsIdIssues",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "Return opened, closed, or all issues"
                    },
                    {
                        "name": "labels",
                        "in": "query",
                        "description": "Comma-separated list of label names"
                    },
                    {
                        "name": "milestone",
                        "in": "query",
                        "description": "Return issues for a specific milestone"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by name or path"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort by asc (ascending) or desc (descending)"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            }
        },
        "\/groups\/{id}\/members": {
            "get": {
                "summary": "Get Groups  Members",
                "description": "Gets a list of group or project members viewable by the authenticated user.",
                "operationId": "GetV3GroupsIdMembers",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "A query string to search for members"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            },
            "post": {
                "summary": "Add Groups  Members",
                "description": "Adds a member to a group or project.",
                "operationId": "PostV3GroupsIdMembers",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "user_id",
                        "in": "formData",
                        "description": "The user ID of the new member"
                    },
                    {
                        "name": "access_level",
                        "in": "formData",
                        "description": "A valid access level (defaults: `30`, developer access level)"
                    },
                    {
                        "name": "expires_at",
                        "in": "formData",
                        "description": "Date string in the format YEAR-MONTH-DAY"
                    }
                ]
            }
        },
        "\/groups\/{id}\/members\/{user_id}": {
            "delete": {
                "summary": "Delete Groups  Members User",
                "description": "Removes a user from a group or project.",
                "operationId": "DeleteV3GroupsIdMembersUserId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The user ID of the access requester"
                    }
                ]
            },
            "get": {
                "summary": "Get Groups  Members User",
                "description": "Gets a member of a group or project.",
                "operationId": "GetV3GroupsIdMembersUserId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The user ID of the access requester"
                    }
                ]
            },
            "put": {
                "summary": "Put Groups  Members User",
                "description": "Updates a member of a group or project.",
                "operationId": "PutV3GroupsIdMembersUserId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The user ID of the access requester"
                    },
                    {
                        "name": "access_level",
                        "in": "formData",
                        "description": "A valid access level (defaults: `30`, developer access level)"
                    },
                    {
                        "name": "expires_at",
                        "in": "formData",
                        "description": "Date string in the format YEAR-MONTH-DAY"
                    }
                ]
            }
        },
        "\/groups\/{id}\/notification_settings": {
            "get": {
                "summary": "Get Groups  Notification Settings",
                "description": "This feature was introduced in GitLab 8.12",
                "operationId": "GetV3GroupsIdNotificationSettings",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            },
            "put": {
                "summary": "Put Groups  Notification Settings",
                "description": "This feature was introduced in GitLab 8.12",
                "operationId": "PutV3GroupsIdNotificationSettings",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "level",
                        "in": "formData",
                        "description": "The group notification level"
                    },
                    {
                        "name": "new_note",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    },
                    {
                        "name": "new_issue",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    },
                    {
                        "name": "reopen_issue",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    },
                    {
                        "name": "close_issue",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    },
                    {
                        "name": "reassign_issue",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    },
                    {
                        "name": "new_merge_request",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    },
                    {
                        "name": "reopen_merge_request",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    },
                    {
                        "name": "close_merge_request",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    },
                    {
                        "name": "reassign_merge_request",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    },
                    {
                        "name": "merge_merge_request",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    },
                    {
                        "name": "failed_pipeline",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    },
                    {
                        "name": "success_pipeline",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    }
                ]
            }
        },
        "\/groups\/{id}\/projects": {
            "get": {
                "summary": "Get Groups  Projects",
                "description": "Get a list of projects in this group.",
                "operationId": "GetV3GroupsIdProjects",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "archived",
                        "in": "query",
                        "description": "Limit by archived status"
                    },
                    {
                        "name": "visibility",
                        "in": "query",
                        "description": "Limit by visibility"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search for a specific group"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by name or path"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort by asc (ascending) or desc (descending)"
                    },
                    {
                        "name": "simple",
                        "in": "query",
                        "description": "Return only the ID, URL, name, and path of each project"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            }
        },
        "\/groups\/{id}\/projects\/{project_id}": {
            "post": {
                "summary": "Add Groups  Projects Project",
                "description": "Transfer a project to the group namespace. Available only for admin.",
                "operationId": "PostV3GroupsIdProjectsProjectId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "The ID or path of the project"
                    }
                ]
            }
        },
        "\/hooks": {
            "get": {
                "summary": "Get Hooks",
                "description": "Get the list of system hooks",
                "operationId": "GetV3Hooks",
                "deprecated": 0,
                "parameters": []
            },
            "post": {
                "summary": "Add Hooks",
                "description": "Create a new system hook",
                "operationId": "PostV3Hooks",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "url",
                        "in": "formData",
                        "description": "The URL to send the request to"
                    },
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "The token used to validate payloads"
                    },
                    {
                        "name": "push_events",
                        "in": "formData",
                        "description": "Trigger hook on push events"
                    },
                    {
                        "name": "tag_push_events",
                        "in": "formData",
                        "description": "Trigger hook on tag push events"
                    },
                    {
                        "name": "enable_ssl_verification",
                        "in": "formData",
                        "description": "Do SSL verification when triggering the hook"
                    }
                ]
            }
        },
        "\/hooks\/{id}": {
            "delete": {
                "summary": "Delete Hooks",
                "description": "Delete a hook",
                "operationId": "DeleteV3HooksId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            },
            "get": {
                "summary": "Get Hooks",
                "description": "Test a hook",
                "operationId": "GetV3HooksId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/internal\/allowed": {
            "post": {
                "summary": "Add Internal Allowed",
                "description": "Post internal allowed",
                "operationId": "PostV3InternalAllowed",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/internal\/broadcast_message": {
            "get": {
                "summary": "Get Internal Broadcast Message",
                "description": "Get internal broadcast message",
                "operationId": "GetV3InternalBroadcastMessage",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/internal\/check": {
            "get": {
                "summary": "Get Internal Check",
                "description": "Get internal check",
                "operationId": "GetV3InternalCheck",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/internal\/discover": {
            "get": {
                "summary": "Get Internal Discover",
                "description": "Get internal discover",
                "operationId": "GetV3InternalDiscover",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/internal\/lfs_authenticate": {
            "post": {
                "summary": "Add Internal Lfs Authenticate",
                "description": "Post internal lfs authenticate",
                "operationId": "PostV3InternalLfsAuthenticate",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/internal\/merge_request_urls": {
            "get": {
                "summary": "Get Internal Merge Request Urls",
                "description": "Get internal merge request urls",
                "operationId": "GetV3InternalMergeRequestUrls",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/internal\/two_factor_recovery_codes": {
            "post": {
                "summary": "Add Internal Two Factor Recovery Codes",
                "description": "Post internal two factor recovery codes",
                "operationId": "PostV3InternalTwoFactorRecoveryCodes",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/issues": {
            "get": {
                "summary": "Get Issues",
                "description": "Get currently authenticated user's issues",
                "operationId": "GetV3Issues",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "state",
                        "in": "query",
                        "description": "Return opened, closed, or all issues"
                    },
                    {
                        "name": "labels",
                        "in": "query",
                        "description": "Comma-separated list of label names"
                    },
                    {
                        "name": "milestone",
                        "in": "query",
                        "description": "Return issues for a specific milestone"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by name or path"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort by asc (ascending) or desc (descending)"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            }
        },
        "\/keys\/{id}": {
            "get": {
                "summary": "Get Keys",
                "description": "Get single ssh key by id. Only available to admin users",
                "operationId": "GetV3KeysId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/licenses": {
            "get": {
                "summary": "Get Licenses",
                "description": "This feature was introduced in GitLab 8.7. This endpoint is deprecated and will be removed in GitLab 9.0.",
                "operationId": "GetV3Licenses",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "popular",
                        "in": "query",
                        "description": "If passed, returns only popular licenses"
                    }
                ]
            }
        },
        "\/licenses\/{name}": {
            "get": {
                "summary": "Get Licenses Name",
                "description": "This feature was introduced in GitLab 8.7. This endpoint is deprecated and will be removed in GitLab 9.0.",
                "operationId": "GetV3LicensesName",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the template"
                    }
                ]
            }
        },
        "\/namespaces": {
            "get": {
                "summary": "Get Namespaces",
                "description": "Get a namespaces list",
                "operationId": "GetV3Namespaces",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search for a specific group"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            }
        },
        "\/notification_settings": {
            "get": {
                "summary": "Get Notification Settings",
                "description": "This feature was introduced in GitLab 8.12",
                "operationId": "GetV3NotificationSettings",
                "deprecated": 0,
                "parameters": []
            },
            "put": {
                "summary": "Put Notification Settings",
                "description": "This feature was introduced in GitLab 8.12",
                "operationId": "PutV3NotificationSettings",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "level",
                        "in": "formData",
                        "description": "The group notification level"
                    },
                    {
                        "name": "notification_email",
                        "in": "formData",
                        "description": "The email address to send notifications"
                    },
                    {
                        "name": "new_note",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    },
                    {
                        "name": "new_issue",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    },
                    {
                        "name": "reopen_issue",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    },
                    {
                        "name": "close_issue",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    },
                    {
                        "name": "reassign_issue",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    },
                    {
                        "name": "new_merge_request",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    },
                    {
                        "name": "reopen_merge_request",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    },
                    {
                        "name": "close_merge_request",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    },
                    {
                        "name": "reassign_merge_request",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    },
                    {
                        "name": "merge_merge_request",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    },
                    {
                        "name": "failed_pipeline",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    },
                    {
                        "name": "success_pipeline",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    }
                ]
            }
        },
        "\/projects": {
            "get": {
                "summary": "Get Projects",
                "description": "Get a projects list for authenticated user",
                "operationId": "GetV3Projects",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by name or path"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort by asc (ascending) or desc (descending)"
                    },
                    {
                        "name": "archived",
                        "in": "query",
                        "description": "Limit by archived status"
                    },
                    {
                        "name": "visibility",
                        "in": "query",
                        "description": "Limit by visibility"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search for a specific group"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    },
                    {
                        "name": "simple",
                        "in": "query",
                        "description": "Return only the ID, URL, name, and path of each project"
                    }
                ]
            },
            "post": {
                "summary": "Add Projects",
                "description": "Create new project",
                "operationId": "PostV3Projects",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "The name of the group"
                    },
                    {
                        "name": "path",
                        "in": "formData",
                        "description": "The path of the group"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "The description of the group"
                    },
                    {
                        "name": "issues_enabled",
                        "in": "formData",
                        "description": "Flag indication if the issue tracker is enabled"
                    },
                    {
                        "name": "merge_requests_enabled",
                        "in": "formData",
                        "description": "Flag indication if merge requests are enabled"
                    },
                    {
                        "name": "wiki_enabled",
                        "in": "formData",
                        "description": "Flag indication if the wiki is enabled"
                    },
                    {
                        "name": "builds_enabled",
                        "in": "formData",
                        "description": "Flag indication if builds are enabled"
                    },
                    {
                        "name": "snippets_enabled",
                        "in": "formData",
                        "description": "Flag indication if snippets are enabled"
                    },
                    {
                        "name": "shared_runners_enabled",
                        "in": "formData",
                        "description": "Enable shared runners for new projects"
                    },
                    {
                        "name": "container_registry_enabled",
                        "in": "formData",
                        "description": "Flag indication if the container registry is enabled for that project"
                    },
                    {
                        "name": "lfs_enabled",
                        "in": "formData",
                        "description": "Enable\/disable LFS for the projects in this group"
                    },
                    {
                        "name": "public",
                        "in": "formData",
                        "description": "Create a public project. The same as visibility_level = 20."
                    },
                    {
                        "name": "visibility_level",
                        "in": "formData",
                        "description": "The visibility level of the group"
                    },
                    {
                        "name": "public_builds",
                        "in": "formData",
                        "description": "Perform public builds"
                    },
                    {
                        "name": "request_access_enabled",
                        "in": "formData",
                        "description": "Allow users to request member access"
                    },
                    {
                        "name": "only_allow_merge_if_build_succeeds",
                        "in": "formData",
                        "description": "Only allow to merge if builds succeed"
                    },
                    {
                        "name": "only_allow_merge_if_all_discussions_are_resolved",
                        "in": "formData",
                        "description": "Only allow to merge if all discussions are resolved"
                    },
                    {
                        "name": "namespace_id",
                        "in": "formData",
                        "description": "Namespace ID for the new project. Default to the user namespace."
                    },
                    {
                        "name": "import_url",
                        "in": "formData",
                        "description": "URL from which the project is imported"
                    }
                ]
            }
        },
        "\/projects\/all": {
            "get": {
                "summary": "Get Projects All",
                "description": "Get all projects for admin user",
                "operationId": "GetV3ProjectsAll",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by name or path"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort by asc (ascending) or desc (descending)"
                    },
                    {
                        "name": "archived",
                        "in": "query",
                        "description": "Limit by archived status"
                    },
                    {
                        "name": "visibility",
                        "in": "query",
                        "description": "Limit by visibility"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search for a specific group"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    },
                    {
                        "name": "simple",
                        "in": "query",
                        "description": "Return only the ID, URL, name, and path of each project"
                    },
                    {
                        "name": "statistics",
                        "in": "query",
                        "description": "Include project statistics"
                    }
                ]
            }
        },
        "\/projects\/fork\/{id}": {
            "post": {
                "summary": "Add Projects Fork",
                "description": "Fork new project for the current user or provided namespace.",
                "operationId": "PostV3ProjectsForkId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "namespace",
                        "in": "formData",
                        "description": "The ID or name of the namespace that the project will be forked into"
                    }
                ]
            }
        },
        "\/projects\/owned": {
            "get": {
                "summary": "Get Projects Owned",
                "description": "Get an owned projects list for authenticated user",
                "operationId": "GetV3ProjectsOwned",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by name or path"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort by asc (ascending) or desc (descending)"
                    },
                    {
                        "name": "archived",
                        "in": "query",
                        "description": "Limit by archived status"
                    },
                    {
                        "name": "visibility",
                        "in": "query",
                        "description": "Limit by visibility"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search for a specific group"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    },
                    {
                        "name": "simple",
                        "in": "query",
                        "description": "Return only the ID, URL, name, and path of each project"
                    },
                    {
                        "name": "statistics",
                        "in": "query",
                        "description": "Include project statistics"
                    }
                ]
            }
        },
        "\/projects\/search\/{query}": {
            "get": {
                "summary": "Get Projects Search Query",
                "description": "Search for projects the current user has access to",
                "operationId": "GetV3ProjectsSearchQuery",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "query",
                        "in": "path",
                        "description": "The project name to be searched"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by name or path"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort by asc (ascending) or desc (descending)"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            }
        },
        "\/projects\/starred": {
            "get": {
                "summary": "Get Projects Starred",
                "description": "Gets starred project for the authenticated user",
                "operationId": "GetV3ProjectsStarred",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by name or path"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort by asc (ascending) or desc (descending)"
                    },
                    {
                        "name": "archived",
                        "in": "query",
                        "description": "Limit by archived status"
                    },
                    {
                        "name": "visibility",
                        "in": "query",
                        "description": "Limit by visibility"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search for a specific group"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    },
                    {
                        "name": "simple",
                        "in": "query",
                        "description": "Return only the ID, URL, name, and path of each project"
                    }
                ]
            }
        },
        "\/projects\/user\/{user_id}": {
            "post": {
                "summary": "Add Projects User User",
                "description": "Create new project for a specified user. Only available to admin users.",
                "operationId": "PostV3ProjectsUserUserId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "The name of the group"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The user ID of the access requester"
                    },
                    {
                        "name": "default_branch",
                        "in": "formData",
                        "description": "The default branch of the project"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "The description of the group"
                    },
                    {
                        "name": "issues_enabled",
                        "in": "formData",
                        "description": "Flag indication if the issue tracker is enabled"
                    },
                    {
                        "name": "merge_requests_enabled",
                        "in": "formData",
                        "description": "Flag indication if merge requests are enabled"
                    },
                    {
                        "name": "wiki_enabled",
                        "in": "formData",
                        "description": "Flag indication if the wiki is enabled"
                    },
                    {
                        "name": "builds_enabled",
                        "in": "formData",
                        "description": "Flag indication if builds are enabled"
                    },
                    {
                        "name": "snippets_enabled",
                        "in": "formData",
                        "description": "Flag indication if snippets are enabled"
                    },
                    {
                        "name": "shared_runners_enabled",
                        "in": "formData",
                        "description": "Enable shared runners for new projects"
                    },
                    {
                        "name": "container_registry_enabled",
                        "in": "formData",
                        "description": "Flag indication if the container registry is enabled for that project"
                    },
                    {
                        "name": "lfs_enabled",
                        "in": "formData",
                        "description": "Enable\/disable LFS for the projects in this group"
                    },
                    {
                        "name": "public",
                        "in": "formData",
                        "description": "Create a public project. The same as visibility_level = 20."
                    },
                    {
                        "name": "visibility_level",
                        "in": "formData",
                        "description": "The visibility level of the group"
                    },
                    {
                        "name": "public_builds",
                        "in": "formData",
                        "description": "Perform public builds"
                    },
                    {
                        "name": "request_access_enabled",
                        "in": "formData",
                        "description": "Allow users to request member access"
                    },
                    {
                        "name": "only_allow_merge_if_build_succeeds",
                        "in": "formData",
                        "description": "Only allow to merge if builds succeed"
                    },
                    {
                        "name": "only_allow_merge_if_all_discussions_are_resolved",
                        "in": "formData",
                        "description": "Only allow to merge if all discussions are resolved"
                    },
                    {
                        "name": "namespace_id",
                        "in": "formData",
                        "description": "Namespace ID for the new project. Default to the user namespace."
                    },
                    {
                        "name": "import_url",
                        "in": "formData",
                        "description": "URL from which the project is imported"
                    }
                ]
            }
        },
        "\/projects\/visible": {
            "get": {
                "summary": "Get Projects Visible",
                "description": "Get a list of visible projects for authenticated user",
                "operationId": "GetV3ProjectsVisible",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by name or path"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort by asc (ascending) or desc (descending)"
                    },
                    {
                        "name": "archived",
                        "in": "query",
                        "description": "Limit by archived status"
                    },
                    {
                        "name": "visibility",
                        "in": "query",
                        "description": "Limit by visibility"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search for a specific group"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    },
                    {
                        "name": "simple",
                        "in": "query",
                        "description": "Return only the ID, URL, name, and path of each project"
                    }
                ]
            }
        },
        "\/projects\/{id}": {
            "delete": {
                "summary": "Delete Projects",
                "description": "Remove a project",
                "operationId": "DeleteV3ProjectsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            },
            "get": {
                "summary": "Get Projects",
                "description": "Get a single project",
                "operationId": "GetV3ProjectsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            },
            "put": {
                "summary": "Put Projects",
                "description": "Update an existing project",
                "operationId": "PutV3ProjectsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "The name of the group"
                    },
                    {
                        "name": "default_branch",
                        "in": "formData",
                        "description": "The default branch of the project"
                    },
                    {
                        "name": "path",
                        "in": "formData",
                        "description": "The path of the group"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "The description of the group"
                    },
                    {
                        "name": "issues_enabled",
                        "in": "formData",
                        "description": "Flag indication if the issue tracker is enabled"
                    },
                    {
                        "name": "merge_requests_enabled",
                        "in": "formData",
                        "description": "Flag indication if merge requests are enabled"
                    },
                    {
                        "name": "wiki_enabled",
                        "in": "formData",
                        "description": "Flag indication if the wiki is enabled"
                    },
                    {
                        "name": "builds_enabled",
                        "in": "formData",
                        "description": "Flag indication if builds are enabled"
                    },
                    {
                        "name": "snippets_enabled",
                        "in": "formData",
                        "description": "Flag indication if snippets are enabled"
                    },
                    {
                        "name": "shared_runners_enabled",
                        "in": "formData",
                        "description": "Enable shared runners for new projects"
                    },
                    {
                        "name": "container_registry_enabled",
                        "in": "formData",
                        "description": "Flag indication if the container registry is enabled for that project"
                    },
                    {
                        "name": "lfs_enabled",
                        "in": "formData",
                        "description": "Enable\/disable LFS for the projects in this group"
                    },
                    {
                        "name": "public",
                        "in": "formData",
                        "description": "Create a public project. The same as visibility_level = 20."
                    },
                    {
                        "name": "visibility_level",
                        "in": "formData",
                        "description": "The visibility level of the group"
                    },
                    {
                        "name": "public_builds",
                        "in": "formData",
                        "description": "Perform public builds"
                    },
                    {
                        "name": "request_access_enabled",
                        "in": "formData",
                        "description": "Allow users to request member access"
                    },
                    {
                        "name": "only_allow_merge_if_build_succeeds",
                        "in": "formData",
                        "description": "Only allow to merge if builds succeed"
                    },
                    {
                        "name": "only_allow_merge_if_all_discussions_are_resolved",
                        "in": "formData",
                        "description": "Only allow to merge if all discussions are resolved"
                    }
                ]
            }
        },
        "\/projects\/{id}\/(ref\/{ref}\/)trigger\/builds": {
            "post": {
                "summary": "Add Projects  (ref Ref )trigger Builds",
                "description": "Post projects  (ref ref )trigger builds",
                "operationId": "PostV3ProjectsId(refRef)triggerBuilds",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The commit sha or name of a branch or tag"
                    },
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "The token used to validate payloads"
                    }
                ]
            }
        },
        "\/projects\/{id}\/access_requests": {
            "get": {
                "summary": "Get Projects  Access Requests",
                "description": "This feature was introduced in GitLab 8.11.",
                "operationId": "GetV3ProjectsIdAccessRequests",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Access Requests",
                "description": "This feature was introduced in GitLab 8.11.",
                "operationId": "PostV3ProjectsIdAccessRequests",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/access_requests\/{user_id}": {
            "delete": {
                "summary": "Delete Projects  Access Requests User",
                "description": "This feature was introduced in GitLab 8.11.",
                "operationId": "DeleteV3ProjectsIdAccessRequestsUserId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The user ID of the access requester"
                    }
                ]
            }
        },
        "\/projects\/{id}\/access_requests\/{user_id}\/approve": {
            "put": {
                "summary": "Put Projects  Access Requests User  Approve",
                "description": "This feature was introduced in GitLab 8.11.",
                "operationId": "PutV3ProjectsIdAccessRequestsUserIdApprove",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The user ID of the access requester"
                    },
                    {
                        "name": "access_level",
                        "in": "formData",
                        "description": "A valid access level (defaults: `30`, developer access level)"
                    }
                ]
            }
        },
        "\/projects\/{id}\/archive": {
            "post": {
                "summary": "Add Projects  Archive",
                "description": "Post projects  archive",
                "operationId": "PostV3ProjectsIdArchive",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/boards": {
            "get": {
                "summary": "Get Projects  Boards",
                "description": "This feature was introduced in 8.13",
                "operationId": "GetV3ProjectsIdBoards",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/boards\/{board_id}\/lists": {
            "get": {
                "summary": "Get Projects  Boards Board  Lists",
                "description": "Does not include `backlog` and `done` lists. This feature was introduced in 8.13",
                "operationId": "GetV3ProjectsIdBoardsBoardIdLists",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "board_id",
                        "in": "path",
                        "description": "The ID of a board"
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Boards Board  Lists",
                "description": "This feature was introduced in 8.13",
                "operationId": "PostV3ProjectsIdBoardsBoardIdLists",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "board_id",
                        "in": "path",
                        "description": "The ID of a board"
                    },
                    {
                        "name": "label_id",
                        "in": "formData",
                        "description": "The ID of an existing label"
                    }
                ]
            }
        },
        "\/projects\/{id}\/boards\/{board_id}\/lists\/{list_id}": {
            "delete": {
                "summary": "Delete Projects  Boards Board  Lists List",
                "description": "Delete projects  boards board  lists list",
                "operationId": "DeleteV3ProjectsIdBoardsBoardIdListsListId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "board_id",
                        "in": "path",
                        "description": "The ID of a board"
                    },
                    {
                        "name": "list_id",
                        "in": "path",
                        "description": "The ID of a board list"
                    }
                ]
            },
            "get": {
                "summary": "Get Projects  Boards Board  Lists List",
                "description": "Get projects  boards board  lists list",
                "operationId": "GetV3ProjectsIdBoardsBoardIdListsListId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "board_id",
                        "in": "path",
                        "description": "The ID of a board"
                    },
                    {
                        "name": "list_id",
                        "in": "path",
                        "description": "The ID of a board list"
                    }
                ]
            },
            "put": {
                "summary": "Put Projects  Boards Board  Lists List",
                "description": "Put projects  boards board  lists list",
                "operationId": "PutV3ProjectsIdBoardsBoardIdListsListId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "board_id",
                        "in": "path",
                        "description": "The ID of a board"
                    },
                    {
                        "name": "list_id",
                        "in": "path",
                        "description": "The ID of a board list"
                    },
                    {
                        "name": "position",
                        "in": "formData",
                        "description": "The position of the list"
                    }
                ]
            }
        },
        "\/projects\/{id}\/builds": {
            "get": {
                "summary": "Get Projects  Builds",
                "description": "Get a project builds",
                "operationId": "GetV3ProjectsIdBuilds",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "description": "The scope of builds to show"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            }
        },
        "\/projects\/{id}\/builds\/artifacts\/{ref_name}\/download": {
            "get": {
                "summary": "Get Projects  Builds Artifacts Ref Name Download",
                "description": "Get projects  builds artifacts ref name download",
                "operationId": "GetV3ProjectsIdBuildsArtifactsRefNameDownload",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "ref_name",
                        "in": "path",
                        "description": "The ref from repository"
                    },
                    {
                        "name": "job",
                        "in": "query",
                        "description": "The name for the build"
                    }
                ]
            }
        },
        "\/projects\/{id}\/builds\/{build_id}": {
            "get": {
                "summary": "Get Projects  Builds Build",
                "description": "Get a specific build of a project",
                "operationId": "GetV3ProjectsIdBuildsBuildId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "build_id",
                        "in": "path",
                        "description": "The ID of a build"
                    }
                ]
            }
        },
        "\/projects\/{id}\/builds\/{build_id}\/artifacts": {
            "get": {
                "summary": "Get Projects  Builds Build  Artifacts",
                "description": "This feature was introduced in GitLab 8.5",
                "operationId": "GetV3ProjectsIdBuildsBuildIdArtifacts",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "build_id",
                        "in": "path",
                        "description": "The ID of a build"
                    }
                ]
            }
        },
        "\/projects\/{id}\/builds\/{build_id}\/artifacts\/keep": {
            "post": {
                "summary": "Add Projects  Builds Build  Artifacts Keep",
                "description": "Keep the artifacts to prevent them from being deleted",
                "operationId": "PostV3ProjectsIdBuildsBuildIdArtifactsKeep",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "build_id",
                        "in": "path",
                        "description": "The ID of a build"
                    }
                ]
            }
        },
        "\/projects\/{id}\/builds\/{build_id}\/cancel": {
            "post": {
                "summary": "Add Projects  Builds Build  Cancel",
                "description": "Cancel a specific build of a project",
                "operationId": "PostV3ProjectsIdBuildsBuildIdCancel",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "build_id",
                        "in": "path",
                        "description": "The ID of a build"
                    }
                ]
            }
        },
        "\/projects\/{id}\/builds\/{build_id}\/erase": {
            "post": {
                "summary": "Add Projects  Builds Build  Erase",
                "description": "Erase build (remove artifacts and build trace)",
                "operationId": "PostV3ProjectsIdBuildsBuildIdErase",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "build_id",
                        "in": "path",
                        "description": "The ID of a build"
                    }
                ]
            }
        },
        "\/projects\/{id}\/builds\/{build_id}\/play": {
            "post": {
                "summary": "Add Projects  Builds Build  Play",
                "description": "This feature was added in GitLab 8.11",
                "operationId": "PostV3ProjectsIdBuildsBuildIdPlay",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "build_id",
                        "in": "path",
                        "description": "The ID of a build"
                    }
                ]
            }
        },
        "\/projects\/{id}\/builds\/{build_id}\/retry": {
            "post": {
                "summary": "Add Projects  Builds Build  Retry",
                "description": "Retry a specific build of a project",
                "operationId": "PostV3ProjectsIdBuildsBuildIdRetry",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "build_id",
                        "in": "path",
                        "description": "The ID of a build"
                    }
                ]
            }
        },
        "\/projects\/{id}\/builds\/{build_id}\/trace": {
            "get": {
                "summary": "Get Projects  Builds Build  Trace",
                "description": "Get a trace of a specific build of a project",
                "operationId": "GetV3ProjectsIdBuildsBuildIdTrace",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "build_id",
                        "in": "path",
                        "description": "The ID of a build"
                    }
                ]
            }
        },
        "\/projects\/{id}\/deploy_keys": {
            "get": {
                "summary": "Get Projects  Deploy Keys",
                "description": "Get a specific project's deploy keys",
                "operationId": "GetV3ProjectsIdDeployKeys",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Deploy Keys",
                "description": "Add new deploy key to currently authenticated user",
                "operationId": "PostV3ProjectsIdDeployKeys",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "key",
                        "in": "formData",
                        "description": "The new deploy key"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "The name of the deploy key"
                    }
                ]
            }
        },
        "\/projects\/{id}\/deploy_keys\/{key_id}": {
            "delete": {
                "summary": "Delete Projects  Deploy Keys Key",
                "description": "Delete projects  deploy keys key",
                "operationId": "DeleteV3ProjectsIdDeployKeysKeyId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "key_id",
                        "in": "path",
                        "description": "The ID of the deploy key"
                    }
                ]
            },
            "get": {
                "summary": "Get Projects  Deploy Keys Key",
                "description": "Get projects  deploy keys key",
                "operationId": "GetV3ProjectsIdDeployKeysKeyId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "key_id",
                        "in": "path",
                        "description": "The ID of the deploy key"
                    }
                ]
            }
        },
        "\/projects\/{id}\/deploy_keys\/{key_id}\/disable": {
            "delete": {
                "summary": "Delete Projects  Deploy Keys Key  Disable",
                "description": "Delete projects  deploy keys key  disable",
                "operationId": "DeleteV3ProjectsIdDeployKeysKeyIdDisable",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "key_id",
                        "in": "path",
                        "description": "The ID of the deploy key"
                    }
                ]
            }
        },
        "\/projects\/{id}\/deploy_keys\/{key_id}\/enable": {
            "post": {
                "summary": "Add Projects  Deploy Keys Key  Enable",
                "description": "Post projects  deploy keys key  enable",
                "operationId": "PostV3ProjectsIdDeployKeysKeyIdEnable",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "key_id",
                        "in": "path",
                        "description": "The ID of the deploy key"
                    }
                ]
            }
        },
        "\/projects\/{id}\/deployments": {
            "get": {
                "summary": "Get Projects  Deployments",
                "description": "This feature was introduced in GitLab 8.11.",
                "operationId": "GetV3ProjectsIdDeployments",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            }
        },
        "\/projects\/{id}\/deployments\/{deployment_id}": {
            "get": {
                "summary": "Get Projects  Deployments Deployment",
                "description": "This feature was introduced in GitLab 8.11.",
                "operationId": "GetV3ProjectsIdDeploymentsDeploymentId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "deployment_id",
                        "in": "path",
                        "description": "The deployment ID"
                    }
                ]
            }
        },
        "\/projects\/{id}\/environments": {
            "get": {
                "summary": "Get Projects  Environments",
                "description": "This feature was introduced in GitLab 8.11.",
                "operationId": "GetV3ProjectsIdEnvironments",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Environments",
                "description": "This feature was introduced in GitLab 8.11.",
                "operationId": "PostV3ProjectsIdEnvironments",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "The name of the group"
                    },
                    {
                        "name": "external_url",
                        "in": "formData",
                        "description": "URL on which this deployment is viewable"
                    },
                    {
                        "name": "slug",
                        "in": "formData",
                        "description": ""
                    }
                ]
            }
        },
        "\/projects\/{id}\/environments\/{environment_id}": {
            "delete": {
                "summary": "Delete Projects  Environments Environment",
                "description": "This feature was introduced in GitLab 8.11.",
                "operationId": "DeleteV3ProjectsIdEnvironmentsEnvironmentId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "environment_id",
                        "in": "path",
                        "description": "The environment ID"
                    }
                ]
            },
            "put": {
                "summary": "Put Projects  Environments Environment",
                "description": "This feature was introduced in GitLab 8.11.",
                "operationId": "PutV3ProjectsIdEnvironmentsEnvironmentId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "environment_id",
                        "in": "path",
                        "description": "The environment ID"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "The name of the group"
                    },
                    {
                        "name": "external_url",
                        "in": "formData",
                        "description": "URL on which this deployment is viewable"
                    },
                    {
                        "name": "slug",
                        "in": "formData",
                        "description": ""
                    }
                ]
            }
        },
        "\/projects\/{id}\/events": {
            "get": {
                "summary": "Get Projects  Events",
                "description": "Get events for a single project",
                "operationId": "GetV3ProjectsIdEvents",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            }
        },
        "\/projects\/{id}\/fork": {
            "delete": {
                "summary": "Delete Projects  Fork",
                "description": "Remove a forked_from relationship",
                "operationId": "DeleteV3ProjectsIdFork",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/fork\/{forked_from_id}": {
            "post": {
                "summary": "Add Projects  Fork Forked From",
                "description": "Mark this project as forked from another",
                "operationId": "PostV3ProjectsIdForkForkedFromId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "forked_from_id",
                        "in": "path",
                        "description": "The ID of the project it was forked from"
                    }
                ]
            }
        },
        "\/projects\/{id}\/hooks": {
            "get": {
                "summary": "Get Projects  Hooks",
                "description": "Get projects  hooks",
                "operationId": "GetV3ProjectsIdHooks",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Hooks",
                "description": "Post projects  hooks",
                "operationId": "PostV3ProjectsIdHooks",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "url",
                        "in": "formData",
                        "description": "The URL to send the request to"
                    },
                    {
                        "name": "push_events",
                        "in": "formData",
                        "description": "Trigger hook on push events"
                    },
                    {
                        "name": "issues_events",
                        "in": "formData",
                        "description": "Trigger hook on issues events"
                    },
                    {
                        "name": "merge_requests_events",
                        "in": "formData",
                        "description": "Trigger hook on merge request events"
                    },
                    {
                        "name": "tag_push_events",
                        "in": "formData",
                        "description": "Trigger hook on tag push events"
                    },
                    {
                        "name": "note_events",
                        "in": "formData",
                        "description": "Trigger hook on note(comment) events"
                    },
                    {
                        "name": "build_events",
                        "in": "formData",
                        "description": "Trigger hook on build events"
                    },
                    {
                        "name": "pipeline_events",
                        "in": "formData",
                        "description": "Trigger hook on pipeline events"
                    },
                    {
                        "name": "wiki_page_events",
                        "in": "formData",
                        "description": "Trigger hook on wiki events"
                    },
                    {
                        "name": "enable_ssl_verification",
                        "in": "formData",
                        "description": "Do SSL verification when triggering the hook"
                    },
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "The token used to validate payloads"
                    }
                ]
            }
        },
        "\/projects\/{id}\/hooks\/{hook_id}": {
            "delete": {
                "summary": "Delete Projects  Hooks Hook",
                "description": "Delete projects  hooks hook",
                "operationId": "DeleteV3ProjectsIdHooksHookId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "hook_id",
                        "in": "path",
                        "description": "The ID of the hook to delete"
                    }
                ]
            },
            "get": {
                "summary": "Get Projects  Hooks Hook",
                "description": "Get projects  hooks hook",
                "operationId": "GetV3ProjectsIdHooksHookId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "hook_id",
                        "in": "path",
                        "description": "The ID of the hook to delete"
                    }
                ]
            },
            "put": {
                "summary": "Put Projects  Hooks Hook",
                "description": "Update an existing project hook",
                "operationId": "PutV3ProjectsIdHooksHookId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "hook_id",
                        "in": "path",
                        "description": "The ID of the hook to delete"
                    },
                    {
                        "name": "url",
                        "in": "formData",
                        "description": "The URL to send the request to"
                    },
                    {
                        "name": "push_events",
                        "in": "formData",
                        "description": "Trigger hook on push events"
                    },
                    {
                        "name": "issues_events",
                        "in": "formData",
                        "description": "Trigger hook on issues events"
                    },
                    {
                        "name": "merge_requests_events",
                        "in": "formData",
                        "description": "Trigger hook on merge request events"
                    },
                    {
                        "name": "tag_push_events",
                        "in": "formData",
                        "description": "Trigger hook on tag push events"
                    },
                    {
                        "name": "note_events",
                        "in": "formData",
                        "description": "Trigger hook on note(comment) events"
                    },
                    {
                        "name": "build_events",
                        "in": "formData",
                        "description": "Trigger hook on build events"
                    },
                    {
                        "name": "pipeline_events",
                        "in": "formData",
                        "description": "Trigger hook on pipeline events"
                    },
                    {
                        "name": "wiki_page_events",
                        "in": "formData",
                        "description": "Trigger hook on wiki events"
                    },
                    {
                        "name": "enable_ssl_verification",
                        "in": "formData",
                        "description": "Do SSL verification when triggering the hook"
                    },
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "The token used to validate payloads"
                    }
                ]
            }
        },
        "\/projects\/{id}\/issues": {
            "get": {
                "summary": "Get Projects  Issues",
                "description": "Get a list of project issues",
                "operationId": "GetV3ProjectsIdIssues",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "Return opened, closed, or all issues"
                    },
                    {
                        "name": "iid",
                        "in": "query",
                        "description": "Return the issue having the given `iid`"
                    },
                    {
                        "name": "labels",
                        "in": "query",
                        "description": "Comma-separated list of label names"
                    },
                    {
                        "name": "milestone",
                        "in": "query",
                        "description": "Return issues for a specific milestone"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by name or path"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort by asc (ascending) or desc (descending)"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Issues",
                "description": "Create a new project issue",
                "operationId": "PostV3ProjectsIdIssues",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "The name of the deploy key"
                    },
                    {
                        "name": "created_at",
                        "in": "formData",
                        "description": "Date time when the issue was created. Available only for admins and project owners."
                    },
                    {
                        "name": "merge_request_for_resolving_discussions",
                        "in": "formData",
                        "description": "The IID of a merge request for which to resolve discussions"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "The description of the group"
                    },
                    {
                        "name": "assignee_id",
                        "in": "formData",
                        "description": "The ID of a user to assign issue"
                    },
                    {
                        "name": "milestone_id",
                        "in": "formData",
                        "description": "The ID of a milestone to assign issue"
                    },
                    {
                        "name": "labels",
                        "in": "formData",
                        "description": "Comma-separated list of label names"
                    },
                    {
                        "name": "due_date",
                        "in": "formData",
                        "description": "Date time string in the format YEAR-MONTH-DAY"
                    },
                    {
                        "name": "confidential",
                        "in": "formData",
                        "description": "Boolean parameter if the issue should be confidential"
                    }
                ]
            }
        },
        "\/projects\/{id}\/issues\/{issue_id}": {
            "delete": {
                "summary": "Delete Projects  Issues Issue",
                "description": "Delete projects  issues issue",
                "operationId": "DeleteV3ProjectsIdIssuesIssueId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "issue_id",
                        "in": "path",
                        "description": "The ID of a project issue"
                    }
                ]
            },
            "get": {
                "summary": "Get Projects  Issues Issue",
                "description": "Get a single project issue",
                "operationId": "GetV3ProjectsIdIssuesIssueId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "issue_id",
                        "in": "path",
                        "description": "The ID of a project issue"
                    }
                ]
            },
            "put": {
                "summary": "Put Projects  Issues Issue",
                "description": "Put projects  issues issue",
                "operationId": "PutV3ProjectsIdIssuesIssueId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "issue_id",
                        "in": "path",
                        "description": "The ID of a project issue"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "The name of the deploy key"
                    },
                    {
                        "name": "updated_at",
                        "in": "formData",
                        "description": "Date time when the issue was updated. Available only for admins and project owners."
                    },
                    {
                        "name": "state_event",
                        "in": "formData",
                        "description": "State of the issue"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "The description of the group"
                    },
                    {
                        "name": "assignee_id",
                        "in": "formData",
                        "description": "The ID of a user to assign issue"
                    },
                    {
                        "name": "milestone_id",
                        "in": "formData",
                        "description": "The ID of a milestone to assign issue"
                    },
                    {
                        "name": "labels",
                        "in": "formData",
                        "description": "Comma-separated list of label names"
                    },
                    {
                        "name": "due_date",
                        "in": "formData",
                        "description": "Date time string in the format YEAR-MONTH-DAY"
                    },
                    {
                        "name": "confidential",
                        "in": "formData",
                        "description": "Boolean parameter if the issue should be confidential"
                    },
                    {
                        "name": "created_at",
                        "in": "formData",
                        "description": "Date time when the issue was created. Available only for admins and project owners."
                    }
                ]
            }
        },
        "\/projects\/{id}\/issues\/{issue_id}\/add_spent_time": {
            "post": {
                "summary": "Add Projects  Issues Issue  Add Spent Time",
                "description": "Post projects  issues issue  add spent time",
                "operationId": "PostV3ProjectsIdIssuesIssueIdAddSpentTime",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "issue_id",
                        "in": "path",
                        "description": "The ID of a project issue"
                    },
                    {
                        "name": "duration",
                        "in": "formData",
                        "description": "The duration to be parsed"
                    }
                ]
            }
        },
        "\/projects\/{id}\/issues\/{issue_id}\/award_emoji": {
            "get": {
                "summary": "Get Projects  Issues Issue  Award Emoji",
                "description": "Get projects  issues issue  award emoji",
                "operationId": "GetV3ProjectsIdIssuesIssueIdAwardEmoji",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "issue_id",
                        "in": "path",
                        "description": "The ID of a project issue"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Issues Issue  Award Emoji",
                "description": "Post projects  issues issue  award emoji",
                "operationId": "PostV3ProjectsIdIssuesIssueIdAwardEmoji",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "The name of the group"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "issue_id",
                        "in": "path",
                        "description": "The ID of a project issue"
                    }
                ]
            }
        },
        "\/projects\/{id}\/issues\/{issue_id}\/award_emoji\/{award_id}": {
            "delete": {
                "summary": "Delete Projects  Issues Issue  Award Emoji Award",
                "description": "Delete projects  issues issue  award emoji award",
                "operationId": "DeleteV3ProjectsIdIssuesIssueIdAwardEmojiAwardId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "award_id",
                        "in": "path",
                        "description": "The ID of an award emoji"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "issue_id",
                        "in": "path",
                        "description": "The ID of a project issue"
                    }
                ]
            },
            "get": {
                "summary": "Get Projects  Issues Issue  Award Emoji Award",
                "description": "Get projects  issues issue  award emoji award",
                "operationId": "GetV3ProjectsIdIssuesIssueIdAwardEmojiAwardId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "award_id",
                        "in": "path",
                        "description": "The ID of an award emoji"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "issue_id",
                        "in": "path",
                        "description": "The ID of a project issue"
                    }
                ]
            }
        },
        "\/projects\/{id}\/issues\/{issue_id}\/move": {
            "post": {
                "summary": "Add Projects  Issues Issue  Move",
                "description": "Post projects  issues issue  move",
                "operationId": "PostV3ProjectsIdIssuesIssueIdMove",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "issue_id",
                        "in": "path",
                        "description": "The ID of a project issue"
                    },
                    {
                        "name": "to_project_id",
                        "in": "formData",
                        "description": "The ID of the new project"
                    }
                ]
            }
        },
        "\/projects\/{id}\/issues\/{issue_id}\/notes\/{note_id}\/award_emoji": {
            "get": {
                "summary": "Get Projects  Issues Issue  Notes Note  Award Emoji",
                "description": "Get projects  issues issue  notes note  award emoji",
                "operationId": "GetV3ProjectsIdIssuesIssueIdNotesNoteIdAwardEmoji",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "issue_id",
                        "in": "path",
                        "description": "The ID of a project issue"
                    },
                    {
                        "name": "note_id",
                        "in": "path",
                        "description": ""
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Issues Issue  Notes Note  Award Emoji",
                "description": "Post projects  issues issue  notes note  award emoji",
                "operationId": "PostV3ProjectsIdIssuesIssueIdNotesNoteIdAwardEmoji",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "The name of the group"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "issue_id",
                        "in": "path",
                        "description": "The ID of a project issue"
                    },
                    {
                        "name": "note_id",
                        "in": "path",
                        "description": ""
                    }
                ]
            }
        },
        "\/projects\/{id}\/issues\/{issue_id}\/notes\/{note_id}\/award_emoji\/{award_id}": {
            "delete": {
                "summary": "Delete Projects  Issues Issue  Notes Note  Award Emoji Award",
                "description": "Delete projects  issues issue  notes note  award emoji award",
                "operationId": "DeleteV3ProjectsIdIssuesIssueIdNotesNoteIdAwardEmojiAwardId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "award_id",
                        "in": "path",
                        "description": "The ID of an award emoji"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "issue_id",
                        "in": "path",
                        "description": "The ID of a project issue"
                    },
                    {
                        "name": "note_id",
                        "in": "path",
                        "description": ""
                    }
                ]
            },
            "get": {
                "summary": "Get Projects  Issues Issue  Notes Note  Award Emoji Award",
                "description": "Get projects  issues issue  notes note  award emoji award",
                "operationId": "GetV3ProjectsIdIssuesIssueIdNotesNoteIdAwardEmojiAwardId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "award_id",
                        "in": "path",
                        "description": "The ID of an award emoji"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "issue_id",
                        "in": "path",
                        "description": "The ID of a project issue"
                    },
                    {
                        "name": "note_id",
                        "in": "path",
                        "description": ""
                    }
                ]
            }
        },
        "\/projects\/{id}\/issues\/{issue_id}\/reset_spent_time": {
            "post": {
                "summary": "Add Projects  Issues Issue  Reset Spent Time",
                "description": "Post projects  issues issue  reset spent time",
                "operationId": "PostV3ProjectsIdIssuesIssueIdResetSpentTime",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "issue_id",
                        "in": "path",
                        "description": "The ID of a project issue"
                    }
                ]
            }
        },
        "\/projects\/{id}\/issues\/{issue_id}\/reset_time_estimate": {
            "post": {
                "summary": "Add Projects  Issues Issue  Reset Time Estimate",
                "description": "Post projects  issues issue  reset time estimate",
                "operationId": "PostV3ProjectsIdIssuesIssueIdResetTimeEstimate",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "issue_id",
                        "in": "path",
                        "description": "The ID of a project issue"
                    }
                ]
            }
        },
        "\/projects\/{id}\/issues\/{issue_id}\/time_estimate": {
            "post": {
                "summary": "Add Projects  Issues Issue  Time Estimate",
                "description": "Post projects  issues issue  time estimate",
                "operationId": "PostV3ProjectsIdIssuesIssueIdTimeEstimate",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "issue_id",
                        "in": "path",
                        "description": "The ID of a project issue"
                    },
                    {
                        "name": "duration",
                        "in": "formData",
                        "description": "The duration to be parsed"
                    }
                ]
            }
        },
        "\/projects\/{id}\/issues\/{issue_id}\/time_stats": {
            "get": {
                "summary": "Get Projects  Issues Issue  Time Stats",
                "description": "Get projects  issues issue  time stats",
                "operationId": "GetV3ProjectsIdIssuesIssueIdTimeStats",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "issue_id",
                        "in": "path",
                        "description": "The ID of a project issue"
                    }
                ]
            }
        },
        "\/projects\/{id}\/issues\/{issue_id}\/todo": {
            "post": {
                "summary": "Add Projects  Issues Issue  Todo",
                "description": "Post projects  issues issue  todo",
                "operationId": "PostV3ProjectsIdIssuesIssueIdTodo",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "issue_id",
                        "in": "path",
                        "description": "The ID of a project issue"
                    }
                ]
            }
        },
        "\/projects\/{id}\/issues\/{noteable_id}\/notes": {
            "get": {
                "summary": "Get Projects  Issues Noteable  Notes",
                "description": "Get a list of project +noteable+ notes",
                "operationId": "GetV3ProjectsIdIssuesNoteableIdNotes",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "noteable_id",
                        "in": "path",
                        "description": "The ID of the noteable"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Issues Noteable  Notes",
                "description": "Post projects  issues noteable  notes",
                "operationId": "PostV3ProjectsIdIssuesNoteableIdNotes",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "noteable_id",
                        "in": "path",
                        "description": "The ID of the noteable"
                    },
                    {
                        "name": "body",
                        "in": "formData",
                        "description": "The content of a note"
                    },
                    {
                        "name": "created_at",
                        "in": "formData",
                        "description": "Date time when the issue was created. Available only for admins and project owners."
                    }
                ]
            }
        },
        "\/projects\/{id}\/issues\/{noteable_id}\/notes\/{note_id}": {
            "delete": {
                "summary": "Delete Projects  Issues Noteable  Notes Note",
                "description": "Delete projects  issues noteable  notes note",
                "operationId": "DeleteV3ProjectsIdIssuesNoteableIdNotesNoteId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "noteable_id",
                        "in": "path",
                        "description": "The ID of the noteable"
                    },
                    {
                        "name": "note_id",
                        "in": "path",
                        "description": ""
                    }
                ]
            },
            "get": {
                "summary": "Get Projects  Issues Noteable  Notes Note",
                "description": "Get projects  issues noteable  notes note",
                "operationId": "GetV3ProjectsIdIssuesNoteableIdNotesNoteId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "note_id",
                        "in": "path",
                        "description": ""
                    },
                    {
                        "name": "noteable_id",
                        "in": "path",
                        "description": "The ID of the noteable"
                    }
                ]
            },
            "put": {
                "summary": "Put Projects  Issues Noteable  Notes Note",
                "description": "Put projects  issues noteable  notes note",
                "operationId": "PutV3ProjectsIdIssuesNoteableIdNotesNoteId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "noteable_id",
                        "in": "path",
                        "description": "The ID of the noteable"
                    },
                    {
                        "name": "note_id",
                        "in": "path",
                        "description": ""
                    },
                    {
                        "name": "body",
                        "in": "formData",
                        "description": "The content of a note"
                    }
                ]
            }
        },
        "\/projects\/{id}\/issues\/{subscribable_id}\/subscription": {
            "delete": {
                "summary": "Delete Projects  Issues Subscribable  Subscription",
                "description": "Delete projects  issues subscribable  subscription",
                "operationId": "DeleteV3ProjectsIdIssuesSubscribableIdSubscription",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "subscribable_id",
                        "in": "path",
                        "description": "The ID of a resource"
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Issues Subscribable  Subscription",
                "description": "Post projects  issues subscribable  subscription",
                "operationId": "PostV3ProjectsIdIssuesSubscribableIdSubscription",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "subscribable_id",
                        "in": "path",
                        "description": "The ID of a resource"
                    }
                ]
            }
        },
        "\/projects\/{id}\/keys": {
            "get": {
                "summary": "Get Projects  Keys",
                "description": "Get a specific project's deploy keys",
                "operationId": "GetV3ProjectsIdKeys",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Keys",
                "description": "Add new deploy key to currently authenticated user",
                "operationId": "PostV3ProjectsIdKeys",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "key",
                        "in": "formData",
                        "description": "The new deploy key"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "The name of the deploy key"
                    }
                ]
            }
        },
        "\/projects\/{id}\/keys\/{key_id}": {
            "delete": {
                "summary": "Delete Projects  Keys Key",
                "description": "Delete deploy key for a project",
                "operationId": "DeleteV3ProjectsIdKeysKeyId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "key_id",
                        "in": "path",
                        "description": "The ID of the deploy key"
                    }
                ]
            },
            "get": {
                "summary": "Get Projects  Keys Key",
                "description": "Get projects  keys key",
                "operationId": "GetV3ProjectsIdKeysKeyId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "key_id",
                        "in": "path",
                        "description": "The ID of the deploy key"
                    }
                ]
            }
        },
        "\/projects\/{id}\/keys\/{key_id}\/disable": {
            "delete": {
                "summary": "Delete Projects  Keys Key  Disable",
                "description": "This feature was added in GitLab 8.11",
                "operationId": "DeleteV3ProjectsIdKeysKeyIdDisable",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "key_id",
                        "in": "path",
                        "description": "The ID of the deploy key"
                    }
                ]
            }
        },
        "\/projects\/{id}\/keys\/{key_id}\/enable": {
            "post": {
                "summary": "Add Projects  Keys Key  Enable",
                "description": "This feature was added in GitLab 8.11",
                "operationId": "PostV3ProjectsIdKeysKeyIdEnable",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "key_id",
                        "in": "path",
                        "description": "The ID of the deploy key"
                    }
                ]
            }
        },
        "\/projects\/{id}\/labels": {
            "delete": {
                "summary": "Delete Projects  Labels",
                "description": "Delete an existing label",
                "operationId": "DeleteV3ProjectsIdLabels",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The name of the label to be deleted"
                    }
                ]
            },
            "get": {
                "summary": "Get Projects  Labels",
                "description": "Get all labels of the project",
                "operationId": "GetV3ProjectsIdLabels",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Labels",
                "description": "Post projects  labels",
                "operationId": "PostV3ProjectsIdLabels",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "The name of the group"
                    },
                    {
                        "name": "color",
                        "in": "formData",
                        "description": "The color of the label given in 6-digit hex notation with leading '#' sign (e.g. #FFAABB)"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "The description of the group"
                    },
                    {
                        "name": "priority",
                        "in": "formData",
                        "description": "The priority of the label"
                    }
                ]
            },
            "put": {
                "summary": "Put Projects  Labels",
                "description": "Update an existing label. At least one optional parameter is required.",
                "operationId": "PutV3ProjectsIdLabels",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "The name of the group"
                    },
                    {
                        "name": "new_name",
                        "in": "formData",
                        "description": "The new name of the label"
                    },
                    {
                        "name": "color",
                        "in": "formData",
                        "description": "The color of the label given in 6-digit hex notation with leading '#' sign (e.g. #FFAABB)"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "The description of the group"
                    },
                    {
                        "name": "priority",
                        "in": "formData",
                        "description": "The priority of the label"
                    }
                ]
            }
        },
        "\/projects\/{id}\/labels\/{subscribable_id}\/subscription": {
            "delete": {
                "summary": "Delete Projects  Labels Subscribable  Subscription",
                "description": "Delete projects  labels subscribable  subscription",
                "operationId": "DeleteV3ProjectsIdLabelsSubscribableIdSubscription",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "subscribable_id",
                        "in": "path",
                        "description": "The ID of a resource"
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Labels Subscribable  Subscription",
                "description": "Post projects  labels subscribable  subscription",
                "operationId": "PostV3ProjectsIdLabelsSubscribableIdSubscription",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "subscribable_id",
                        "in": "path",
                        "description": "The ID of a resource"
                    }
                ]
            }
        },
        "\/projects\/{id}\/members": {
            "get": {
                "summary": "Get Projects  Members",
                "description": "Gets a list of group or project members viewable by the authenticated user.",
                "operationId": "GetV3ProjectsIdMembers",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "A query string to search for members"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Members",
                "description": "Adds a member to a group or project.",
                "operationId": "PostV3ProjectsIdMembers",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "user_id",
                        "in": "formData",
                        "description": "The user ID of the new member"
                    },
                    {
                        "name": "access_level",
                        "in": "formData",
                        "description": "A valid access level (defaults: `30`, developer access level)"
                    },
                    {
                        "name": "expires_at",
                        "in": "formData",
                        "description": "Date string in the format YEAR-MONTH-DAY"
                    }
                ]
            }
        },
        "\/projects\/{id}\/members\/{user_id}": {
            "delete": {
                "summary": "Delete Projects  Members User",
                "description": "Removes a user from a group or project.",
                "operationId": "DeleteV3ProjectsIdMembersUserId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The user ID of the access requester"
                    }
                ]
            },
            "get": {
                "summary": "Get Projects  Members User",
                "description": "Gets a member of a group or project.",
                "operationId": "GetV3ProjectsIdMembersUserId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The user ID of the access requester"
                    }
                ]
            },
            "put": {
                "summary": "Put Projects  Members User",
                "description": "Updates a member of a group or project.",
                "operationId": "PutV3ProjectsIdMembersUserId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The user ID of the access requester"
                    },
                    {
                        "name": "access_level",
                        "in": "formData",
                        "description": "A valid access level (defaults: `30`, developer access level)"
                    },
                    {
                        "name": "expires_at",
                        "in": "formData",
                        "description": "Date string in the format YEAR-MONTH-DAY"
                    }
                ]
            }
        },
        "\/projects\/{id}\/merge_request\/{merge_request_id}": {
            "get": {
                "summary": "Get Projects  Merge Request Merge Request",
                "description": "This endpoint is deprecated and will be removed in GitLab 9.0.",
                "operationId": "GetV3ProjectsIdMergeRequestMergeRequestId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    }
                ]
            },
            "put": {
                "summary": "Put Projects  Merge Request Merge Request",
                "description": "Put projects  merge request merge request",
                "operationId": "PutV3ProjectsIdMergeRequestMergeRequestId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "The name of the deploy key"
                    },
                    {
                        "name": "target_branch",
                        "in": "formData",
                        "description": "The target branch"
                    },
                    {
                        "name": "state_event",
                        "in": "formData",
                        "description": "State of the issue"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "The description of the group"
                    },
                    {
                        "name": "assignee_id",
                        "in": "formData",
                        "description": "The ID of a user to assign issue"
                    },
                    {
                        "name": "milestone_id",
                        "in": "formData",
                        "description": "The ID of a milestone to assign issue"
                    },
                    {
                        "name": "labels",
                        "in": "formData",
                        "description": "Comma-separated list of label names"
                    },
                    {
                        "name": "remove_source_branch",
                        "in": "formData",
                        "description": "Remove source branch when merging"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    }
                ]
            }
        },
        "\/projects\/{id}\/merge_request\/{merge_request_id}\/cancel_merge_when_build_succeeds": {
            "post": {
                "summary": "Add Projects  Merge Request Merge Request  Cancel Merge When Build Succeeds",
                "description": "Post projects  merge request merge request  cancel merge when build succeeds",
                "operationId": "PostV3ProjectsIdMergeRequestMergeRequestIdCancelMergeWhenBuildSucceeds",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    }
                ]
            }
        },
        "\/projects\/{id}\/merge_request\/{merge_request_id}\/changes": {
            "get": {
                "summary": "Get Projects  Merge Request Merge Request  Changes",
                "description": "Get projects  merge request merge request  changes",
                "operationId": "GetV3ProjectsIdMergeRequestMergeRequestIdChanges",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    }
                ]
            }
        },
        "\/projects\/{id}\/merge_request\/{merge_request_id}\/closes_issues": {
            "get": {
                "summary": "Get Projects  Merge Request Merge Request  Closes Issues",
                "description": "Get projects  merge request merge request  closes issues",
                "operationId": "GetV3ProjectsIdMergeRequestMergeRequestIdClosesIssues",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    }
                ]
            }
        },
        "\/projects\/{id}\/merge_request\/{merge_request_id}\/comments": {
            "get": {
                "summary": "Get Projects  Merge Request Merge Request  Comments",
                "description": "Get projects  merge request merge request  comments",
                "operationId": "GetV3ProjectsIdMergeRequestMergeRequestIdComments",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Merge Request Merge Request  Comments",
                "description": "Post projects  merge request merge request  comments",
                "operationId": "PostV3ProjectsIdMergeRequestMergeRequestIdComments",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "note",
                        "in": "formData",
                        "description": "The text of the comment"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    }
                ]
            }
        },
        "\/projects\/{id}\/merge_request\/{merge_request_id}\/commits": {
            "get": {
                "summary": "Get Projects  Merge Request Merge Request  Commits",
                "description": "Get projects  merge request merge request  commits",
                "operationId": "GetV3ProjectsIdMergeRequestMergeRequestIdCommits",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    }
                ]
            }
        },
        "\/projects\/{id}\/merge_request\/{merge_request_id}\/merge": {
            "put": {
                "summary": "Put Projects  Merge Request Merge Request  Merge",
                "description": "Put projects  merge request merge request  merge",
                "operationId": "PutV3ProjectsIdMergeRequestMergeRequestIdMerge",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "merge_commit_message",
                        "in": "formData",
                        "description": "Custom merge commit message"
                    },
                    {
                        "name": "should_remove_source_branch",
                        "in": "formData",
                        "description": "When true, the source branch will be deleted if possible"
                    },
                    {
                        "name": "merge_when_build_succeeds",
                        "in": "formData",
                        "description": "When true, this merge request will be merged when the pipeline succeeds"
                    },
                    {
                        "name": "sha",
                        "in": "formData",
                        "description": "When present, must have the HEAD SHA of the source branch"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    }
                ]
            }
        },
        "\/projects\/{id}\/merge_request\/{subscribable_id}\/subscription": {
            "delete": {
                "summary": "Delete Projects  Merge Request Subscribable  Subscription",
                "description": "Delete projects  merge request subscribable  subscription",
                "operationId": "DeleteV3ProjectsIdMergeRequestSubscribableIdSubscription",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "subscribable_id",
                        "in": "path",
                        "description": "The ID of a resource"
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Merge Request Subscribable  Subscription",
                "description": "Post projects  merge request subscribable  subscription",
                "operationId": "PostV3ProjectsIdMergeRequestSubscribableIdSubscription",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "subscribable_id",
                        "in": "path",
                        "description": "The ID of a resource"
                    }
                ]
            }
        },
        "\/projects\/{id}\/merge_requests": {
            "get": {
                "summary": "Get Projects  Merge Requests",
                "description": "Get projects  merge requests",
                "operationId": "GetV3ProjectsIdMergeRequests",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "Return opened, closed, or all issues"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by name or path"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort by asc (ascending) or desc (descending)"
                    },
                    {
                        "name": "iid",
                        "in": "formData",
                        "description": "The IID of the merge requests"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Merge Requests",
                "description": "Post projects  merge requests",
                "operationId": "PostV3ProjectsIdMergeRequests",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "The name of the deploy key"
                    },
                    {
                        "name": "source_branch",
                        "in": "formData",
                        "description": "The source branch"
                    },
                    {
                        "name": "target_branch",
                        "in": "formData",
                        "description": "The target branch"
                    },
                    {
                        "name": "target_project_id",
                        "in": "formData",
                        "description": "The target project of the merge request defaults to the :id of the project"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "The description of the group"
                    },
                    {
                        "name": "assignee_id",
                        "in": "formData",
                        "description": "The ID of a user to assign issue"
                    },
                    {
                        "name": "milestone_id",
                        "in": "formData",
                        "description": "The ID of a milestone to assign issue"
                    },
                    {
                        "name": "labels",
                        "in": "formData",
                        "description": "Comma-separated list of label names"
                    },
                    {
                        "name": "remove_source_branch",
                        "in": "formData",
                        "description": "Remove source branch when merging"
                    }
                ]
            }
        },
        "\/projects\/{id}\/merge_requests\/{merge_request_id}": {
            "delete": {
                "summary": "Delete Projects  Merge Requests Merge Request",
                "description": "Delete projects  merge requests merge request",
                "operationId": "DeleteV3ProjectsIdMergeRequestsMergeRequestId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    }
                ]
            },
            "get": {
                "summary": "Get Projects  Merge Requests Merge Request",
                "description": "Get projects  merge requests merge request",
                "operationId": "GetV3ProjectsIdMergeRequestsMergeRequestId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    }
                ]
            },
            "put": {
                "summary": "Put Projects  Merge Requests Merge Request",
                "description": "Put projects  merge requests merge request",
                "operationId": "PutV3ProjectsIdMergeRequestsMergeRequestId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "The name of the deploy key"
                    },
                    {
                        "name": "target_branch",
                        "in": "formData",
                        "description": "The target branch"
                    },
                    {
                        "name": "state_event",
                        "in": "formData",
                        "description": "State of the issue"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "The description of the group"
                    },
                    {
                        "name": "assignee_id",
                        "in": "formData",
                        "description": "The ID of a user to assign issue"
                    },
                    {
                        "name": "milestone_id",
                        "in": "formData",
                        "description": "The ID of a milestone to assign issue"
                    },
                    {
                        "name": "labels",
                        "in": "formData",
                        "description": "Comma-separated list of label names"
                    },
                    {
                        "name": "remove_source_branch",
                        "in": "formData",
                        "description": "Remove source branch when merging"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    }
                ]
            }
        },
        "\/projects\/{id}\/merge_requests\/{merge_request_id}\/add_spent_time": {
            "post": {
                "summary": "Add Projects  Merge Requests Merge Request  Add Spent Time",
                "description": "Post projects  merge requests merge request  add spent time",
                "operationId": "PostV3ProjectsIdMergeRequestsMergeRequestIdAddSpentTime",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    },
                    {
                        "name": "duration",
                        "in": "formData",
                        "description": "The duration to be parsed"
                    }
                ]
            }
        },
        "\/projects\/{id}\/merge_requests\/{merge_request_id}\/award_emoji": {
            "get": {
                "summary": "Get Projects  Merge Requests Merge Request  Award Emoji",
                "description": "Get projects  merge requests merge request  award emoji",
                "operationId": "GetV3ProjectsIdMergeRequestsMergeRequestIdAwardEmoji",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Merge Requests Merge Request  Award Emoji",
                "description": "Post projects  merge requests merge request  award emoji",
                "operationId": "PostV3ProjectsIdMergeRequestsMergeRequestIdAwardEmoji",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "The name of the group"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    }
                ]
            }
        },
        "\/projects\/{id}\/merge_requests\/{merge_request_id}\/award_emoji\/{award_id}": {
            "delete": {
                "summary": "Delete Projects  Merge Requests Merge Request  Award Emoji Award",
                "description": "Delete projects  merge requests merge request  award emoji award",
                "operationId": "DeleteV3ProjectsIdMergeRequestsMergeRequestIdAwardEmojiAwardId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "award_id",
                        "in": "path",
                        "description": "The ID of an award emoji"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    }
                ]
            },
            "get": {
                "summary": "Get Projects  Merge Requests Merge Request  Award Emoji Award",
                "description": "Get projects  merge requests merge request  award emoji award",
                "operationId": "GetV3ProjectsIdMergeRequestsMergeRequestIdAwardEmojiAwardId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "award_id",
                        "in": "path",
                        "description": "The ID of an award emoji"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    }
                ]
            }
        },
        "\/projects\/{id}\/merge_requests\/{merge_request_id}\/cancel_merge_when_build_succeeds": {
            "post": {
                "summary": "Add Projects  Merge Requests Merge Request  Cancel Merge When Build Succeeds",
                "description": "Post projects  merge requests merge request  cancel merge when build succeeds",
                "operationId": "PostV3ProjectsIdMergeRequestsMergeRequestIdCancelMergeWhenBuildSucceeds",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    }
                ]
            }
        },
        "\/projects\/{id}\/merge_requests\/{merge_request_id}\/changes": {
            "get": {
                "summary": "Get Projects  Merge Requests Merge Request  Changes",
                "description": "Get projects  merge requests merge request  changes",
                "operationId": "GetV3ProjectsIdMergeRequestsMergeRequestIdChanges",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    }
                ]
            }
        },
        "\/projects\/{id}\/merge_requests\/{merge_request_id}\/closes_issues": {
            "get": {
                "summary": "Get Projects  Merge Requests Merge Request  Closes Issues",
                "description": "Get projects  merge requests merge request  closes issues",
                "operationId": "GetV3ProjectsIdMergeRequestsMergeRequestIdClosesIssues",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    }
                ]
            }
        },
        "\/projects\/{id}\/merge_requests\/{merge_request_id}\/comments": {
            "get": {
                "summary": "Get Projects  Merge Requests Merge Request  Comments",
                "description": "Get projects  merge requests merge request  comments",
                "operationId": "GetV3ProjectsIdMergeRequestsMergeRequestIdComments",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Merge Requests Merge Request  Comments",
                "description": "Post projects  merge requests merge request  comments",
                "operationId": "PostV3ProjectsIdMergeRequestsMergeRequestIdComments",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "note",
                        "in": "formData",
                        "description": "The text of the comment"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    }
                ]
            }
        },
        "\/projects\/{id}\/merge_requests\/{merge_request_id}\/commits": {
            "get": {
                "summary": "Get Projects  Merge Requests Merge Request  Commits",
                "description": "Get projects  merge requests merge request  commits",
                "operationId": "GetV3ProjectsIdMergeRequestsMergeRequestIdCommits",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    }
                ]
            }
        },
        "\/projects\/{id}\/merge_requests\/{merge_request_id}\/merge": {
            "put": {
                "summary": "Put Projects  Merge Requests Merge Request  Merge",
                "description": "Put projects  merge requests merge request  merge",
                "operationId": "PutV3ProjectsIdMergeRequestsMergeRequestIdMerge",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "merge_commit_message",
                        "in": "formData",
                        "description": "Custom merge commit message"
                    },
                    {
                        "name": "should_remove_source_branch",
                        "in": "formData",
                        "description": "When true, the source branch will be deleted if possible"
                    },
                    {
                        "name": "merge_when_build_succeeds",
                        "in": "formData",
                        "description": "When true, this merge request will be merged when the pipeline succeeds"
                    },
                    {
                        "name": "sha",
                        "in": "formData",
                        "description": "When present, must have the HEAD SHA of the source branch"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    }
                ]
            }
        },
        "\/projects\/{id}\/merge_requests\/{merge_request_id}\/notes\/{note_id}\/award_emoji": {
            "get": {
                "summary": "Get Projects  Merge Requests Merge Request  Notes Note  Award Emoji",
                "description": "Get projects  merge requests merge request  notes note  award emoji",
                "operationId": "GetV3ProjectsIdMergeRequestsMergeRequestIdNotesNoteIdAwardEmoji",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    },
                    {
                        "name": "note_id",
                        "in": "path",
                        "description": ""
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Merge Requests Merge Request  Notes Note  Award Emoji",
                "description": "Post projects  merge requests merge request  notes note  award emoji",
                "operationId": "PostV3ProjectsIdMergeRequestsMergeRequestIdNotesNoteIdAwardEmoji",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "The name of the group"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    },
                    {
                        "name": "note_id",
                        "in": "path",
                        "description": ""
                    }
                ]
            }
        },
        "\/projects\/{id}\/merge_requests\/{merge_request_id}\/notes\/{note_id}\/award_emoji\/{award_id}": {
            "delete": {
                "summary": "Delete Projects  Merge Requests Merge Request  Notes Note  Award Emoji Award",
                "description": "Delete projects  merge requests merge request  notes note  award emoji award",
                "operationId": "DeleteV3ProjectsIdMergeRequestsMergeRequestIdNotesNoteIdAwardEmojiAwardId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "award_id",
                        "in": "path",
                        "description": "The ID of an award emoji"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    },
                    {
                        "name": "note_id",
                        "in": "path",
                        "description": ""
                    }
                ]
            },
            "get": {
                "summary": "Get Projects  Merge Requests Merge Request  Notes Note  Award Emoji Award",
                "description": "Get projects  merge requests merge request  notes note  award emoji award",
                "operationId": "GetV3ProjectsIdMergeRequestsMergeRequestIdNotesNoteIdAwardEmojiAwardId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "award_id",
                        "in": "path",
                        "description": "The ID of an award emoji"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    },
                    {
                        "name": "note_id",
                        "in": "path",
                        "description": ""
                    }
                ]
            }
        },
        "\/projects\/{id}\/merge_requests\/{merge_request_id}\/reset_spent_time": {
            "post": {
                "summary": "Add Projects  Merge Requests Merge Request  Reset Spent Time",
                "description": "Post projects  merge requests merge request  reset spent time",
                "operationId": "PostV3ProjectsIdMergeRequestsMergeRequestIdResetSpentTime",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    }
                ]
            }
        },
        "\/projects\/{id}\/merge_requests\/{merge_request_id}\/reset_time_estimate": {
            "post": {
                "summary": "Add Projects  Merge Requests Merge Request  Reset Time Estimate",
                "description": "Post projects  merge requests merge request  reset time estimate",
                "operationId": "PostV3ProjectsIdMergeRequestsMergeRequestIdResetTimeEstimate",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    }
                ]
            }
        },
        "\/projects\/{id}\/merge_requests\/{merge_request_id}\/time_estimate": {
            "post": {
                "summary": "Add Projects  Merge Requests Merge Request  Time Estimate",
                "description": "Post projects  merge requests merge request  time estimate",
                "operationId": "PostV3ProjectsIdMergeRequestsMergeRequestIdTimeEstimate",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    },
                    {
                        "name": "duration",
                        "in": "formData",
                        "description": "The duration to be parsed"
                    }
                ]
            }
        },
        "\/projects\/{id}\/merge_requests\/{merge_request_id}\/time_stats": {
            "get": {
                "summary": "Get Projects  Merge Requests Merge Request  Time Stats",
                "description": "Get projects  merge requests merge request  time stats",
                "operationId": "GetV3ProjectsIdMergeRequestsMergeRequestIdTimeStats",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    }
                ]
            }
        },
        "\/projects\/{id}\/merge_requests\/{merge_request_id}\/todo": {
            "post": {
                "summary": "Add Projects  Merge Requests Merge Request  Todo",
                "description": "Post projects  merge requests merge request  todo",
                "operationId": "PostV3ProjectsIdMergeRequestsMergeRequestIdTodo",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    }
                ]
            }
        },
        "\/projects\/{id}\/merge_requests\/{merge_request_id}\/versions": {
            "get": {
                "summary": "Get Projects  Merge Requests Merge Request  Versions",
                "description": "Get projects  merge requests merge request  versions",
                "operationId": "GetV3ProjectsIdMergeRequestsMergeRequestIdVersions",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    }
                ]
            }
        },
        "\/projects\/{id}\/merge_requests\/{merge_request_id}\/versions\/{version_id}": {
            "get": {
                "summary": "Get Projects  Merge Requests Merge Request  Versions Version",
                "description": "Get projects  merge requests merge request  versions version",
                "operationId": "GetV3ProjectsIdMergeRequestsMergeRequestIdVersionsVersionId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "merge_request_id",
                        "in": "path",
                        "description": "The ID of a merge request"
                    },
                    {
                        "name": "version_id",
                        "in": "path",
                        "description": "The ID of a merge request diff version"
                    }
                ]
            }
        },
        "\/projects\/{id}\/merge_requests\/{noteable_id}\/notes": {
            "get": {
                "summary": "Get Projects  Merge Requests Noteable  Notes",
                "description": "Get projects  merge requests noteable  notes",
                "operationId": "GetV3ProjectsIdMergeRequestsNoteableIdNotes",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "noteable_id",
                        "in": "path",
                        "description": "The ID of the noteable"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Merge Requests Noteable  Notes",
                "description": "Post projects  merge requests noteable  notes",
                "operationId": "PostV3ProjectsIdMergeRequestsNoteableIdNotes",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "noteable_id",
                        "in": "path",
                        "description": "The ID of the noteable"
                    },
                    {
                        "name": "body",
                        "in": "formData",
                        "description": "The content of a note"
                    },
                    {
                        "name": "created_at",
                        "in": "formData",
                        "description": "Date time when the issue was created. Available only for admins and project owners."
                    }
                ]
            }
        },
        "\/projects\/{id}\/merge_requests\/{noteable_id}\/notes\/{note_id}": {
            "delete": {
                "summary": "Delete Projects  Merge Requests Noteable  Notes Note",
                "description": "Delete projects  merge requests noteable  notes note",
                "operationId": "DeleteV3ProjectsIdMergeRequestsNoteableIdNotesNoteId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "noteable_id",
                        "in": "path",
                        "description": "The ID of the noteable"
                    },
                    {
                        "name": "note_id",
                        "in": "path",
                        "description": ""
                    }
                ]
            },
            "get": {
                "summary": "Get Projects  Merge Requests Noteable  Notes Note",
                "description": "Get projects  merge requests noteable  notes note",
                "operationId": "GetV3ProjectsIdMergeRequestsNoteableIdNotesNoteId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "note_id",
                        "in": "path",
                        "description": ""
                    },
                    {
                        "name": "noteable_id",
                        "in": "path",
                        "description": "The ID of the noteable"
                    }
                ]
            },
            "put": {
                "summary": "Put Projects  Merge Requests Noteable  Notes Note",
                "description": "Put projects  merge requests noteable  notes note",
                "operationId": "PutV3ProjectsIdMergeRequestsNoteableIdNotesNoteId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "noteable_id",
                        "in": "path",
                        "description": "The ID of the noteable"
                    },
                    {
                        "name": "note_id",
                        "in": "path",
                        "description": ""
                    },
                    {
                        "name": "body",
                        "in": "formData",
                        "description": "The content of a note"
                    }
                ]
            }
        },
        "\/projects\/{id}\/merge_requests\/{subscribable_id}\/subscription": {
            "delete": {
                "summary": "Delete Projects  Merge Requests Subscribable  Subscription",
                "description": "Delete projects  merge requests subscribable  subscription",
                "operationId": "DeleteV3ProjectsIdMergeRequestsSubscribableIdSubscription",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "subscribable_id",
                        "in": "path",
                        "description": "The ID of a resource"
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Merge Requests Subscribable  Subscription",
                "description": "Post projects  merge requests subscribable  subscription",
                "operationId": "PostV3ProjectsIdMergeRequestsSubscribableIdSubscription",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "subscribable_id",
                        "in": "path",
                        "description": "The ID of a resource"
                    }
                ]
            }
        },
        "\/projects\/{id}\/milestones": {
            "get": {
                "summary": "Get Projects  Milestones",
                "description": "Get a list of project milestones",
                "operationId": "GetV3ProjectsIdMilestones",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "Return opened, closed, or all issues"
                    },
                    {
                        "name": "iid",
                        "in": "formData",
                        "description": "The IID of the merge requests"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Milestones",
                "description": "Create a new project milestone",
                "operationId": "PostV3ProjectsIdMilestones",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "The name of the deploy key"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "The description of the group"
                    },
                    {
                        "name": "due_date",
                        "in": "formData",
                        "description": "Date time string in the format YEAR-MONTH-DAY"
                    },
                    {
                        "name": "start_date",
                        "in": "formData",
                        "description": "The start date of the milestone. The ISO 8601 date format (%Y-%m-%d)"
                    }
                ]
            }
        },
        "\/projects\/{id}\/milestones\/{milestone_id}": {
            "get": {
                "summary": "Get Projects  Milestones Milestone",
                "description": "Get projects  milestones milestone",
                "operationId": "GetV3ProjectsIdMilestonesMilestoneId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "milestone_id",
                        "in": "path",
                        "description": "The ID of a project milestone"
                    }
                ]
            },
            "put": {
                "summary": "Put Projects  Milestones Milestone",
                "description": "Update an existing project milestone",
                "operationId": "PutV3ProjectsIdMilestonesMilestoneId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "milestone_id",
                        "in": "path",
                        "description": "The ID of a project milestone"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "The name of the deploy key"
                    },
                    {
                        "name": "state_event",
                        "in": "formData",
                        "description": "State of the issue"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "The description of the group"
                    },
                    {
                        "name": "due_date",
                        "in": "formData",
                        "description": "Date time string in the format YEAR-MONTH-DAY"
                    },
                    {
                        "name": "start_date",
                        "in": "formData",
                        "description": "The start date of the milestone. The ISO 8601 date format (%Y-%m-%d)"
                    }
                ]
            }
        },
        "\/projects\/{id}\/milestones\/{milestone_id}\/issues": {
            "get": {
                "summary": "Get Projects  Milestones Milestone  Issues",
                "description": "Get all issues for a single project milestone",
                "operationId": "GetV3ProjectsIdMilestonesMilestoneIdIssues",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "milestone_id",
                        "in": "path",
                        "description": "The ID of a project milestone"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            }
        },
        "\/projects\/{id}\/notification_settings": {
            "get": {
                "summary": "Get Projects  Notification Settings",
                "description": "This feature was introduced in GitLab 8.12",
                "operationId": "GetV3ProjectsIdNotificationSettings",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            },
            "put": {
                "summary": "Put Projects  Notification Settings",
                "description": "This feature was introduced in GitLab 8.12",
                "operationId": "PutV3ProjectsIdNotificationSettings",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "level",
                        "in": "formData",
                        "description": "The group notification level"
                    },
                    {
                        "name": "new_note",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    },
                    {
                        "name": "new_issue",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    },
                    {
                        "name": "reopen_issue",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    },
                    {
                        "name": "close_issue",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    },
                    {
                        "name": "reassign_issue",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    },
                    {
                        "name": "new_merge_request",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    },
                    {
                        "name": "reopen_merge_request",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    },
                    {
                        "name": "close_merge_request",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    },
                    {
                        "name": "reassign_merge_request",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    },
                    {
                        "name": "merge_merge_request",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    },
                    {
                        "name": "failed_pipeline",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    },
                    {
                        "name": "success_pipeline",
                        "in": "formData",
                        "description": "Enable\/disable this notification"
                    }
                ]
            }
        },
        "\/projects\/{id}\/pipeline": {
            "post": {
                "summary": "Add Projects  Pipeline",
                "description": "This feature was introduced in GitLab 8.14",
                "operationId": "PostV3ProjectsIdPipeline",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "ref",
                        "in": "formData",
                        "description": "Reference"
                    }
                ]
            }
        },
        "\/projects\/{id}\/pipelines": {
            "get": {
                "summary": "Get Projects  Pipelines",
                "description": "This feature was introduced in GitLab 8.11.",
                "operationId": "GetV3ProjectsIdPipelines",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "description": "The scope of builds to show"
                    }
                ]
            }
        },
        "\/projects\/{id}\/pipelines\/{pipeline_id}": {
            "get": {
                "summary": "Get Projects  Pipelines Pipeline",
                "description": "This feature was introduced in GitLab 8.11",
                "operationId": "GetV3ProjectsIdPipelinesPipelineId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "pipeline_id",
                        "in": "path",
                        "description": "The pipeline ID"
                    }
                ]
            }
        },
        "\/projects\/{id}\/pipelines\/{pipeline_id}\/cancel": {
            "post": {
                "summary": "Add Projects  Pipelines Pipeline  Cancel",
                "description": "This feature was introduced in GitLab 8.11.",
                "operationId": "PostV3ProjectsIdPipelinesPipelineIdCancel",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "pipeline_id",
                        "in": "path",
                        "description": "The pipeline ID"
                    }
                ]
            }
        },
        "\/projects\/{id}\/pipelines\/{pipeline_id}\/retry": {
            "post": {
                "summary": "Add Projects  Pipelines Pipeline  Retry",
                "description": "This feature was introduced in GitLab 8.11.",
                "operationId": "PostV3ProjectsIdPipelinesPipelineIdRetry",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "pipeline_id",
                        "in": "path",
                        "description": "The pipeline ID"
                    }
                ]
            }
        },
        "\/projects\/{id}\/repository\/archive": {
            "get": {
                "summary": "Get Projects  Repository Archive",
                "description": "Get an archive of the repository",
                "operationId": "GetV3ProjectsIdRepositoryArchive",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "sha",
                        "in": "query",
                        "description": "The commit sha of the archive to be downloaded"
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "The archive format"
                    }
                ]
            }
        },
        "\/projects\/{id}\/repository\/blobs\/{sha}": {
            "get": {
                "summary": "Get Projects  Repository Blobs Sha",
                "description": "Get projects  repository blobs sha",
                "operationId": "GetV3ProjectsIdRepositoryBlobsSha",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "sha",
                        "in": "path",
                        "description": "The commit, branch name, or tag name"
                    },
                    {
                        "name": "filepath",
                        "in": "query",
                        "description": "The path to the file to display"
                    }
                ]
            }
        },
        "\/projects\/{id}\/repository\/branches": {
            "get": {
                "summary": "Get Projects  Repository Branches",
                "description": "Get a project repository branches",
                "operationId": "GetV3ProjectsIdRepositoryBranches",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Repository Branches",
                "description": "Post projects  repository branches",
                "operationId": "PostV3ProjectsIdRepositoryBranches",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "branch_name",
                        "in": "formData",
                        "description": "The name of the branch"
                    },
                    {
                        "name": "ref",
                        "in": "formData",
                        "description": "Reference"
                    }
                ]
            }
        },
        "\/projects\/{id}\/repository\/branches\/{branch}": {
            "delete": {
                "summary": "Delete Projects  Repository Branches Branch",
                "description": "Delete projects  repository branches branch",
                "operationId": "DeleteV3ProjectsIdRepositoryBranchesBranch",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "branch",
                        "in": "path",
                        "description": "The name of the branch"
                    }
                ]
            },
            "get": {
                "summary": "Get Projects  Repository Branches Branch",
                "description": "Get projects  repository branches branch",
                "operationId": "GetV3ProjectsIdRepositoryBranchesBranch",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "branch",
                        "in": "path",
                        "description": "The name of the branch"
                    }
                ]
            }
        },
        "\/projects\/{id}\/repository\/branches\/{branch}\/protect": {
            "put": {
                "summary": "Put Projects  Repository Branches Branch Protect",
                "description": "Put projects  repository branches branch protect",
                "operationId": "PutV3ProjectsIdRepositoryBranchesBranchProtect",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "branch",
                        "in": "path",
                        "description": "The name of the branch"
                    },
                    {
                        "name": "developers_can_push",
                        "in": "formData",
                        "description": "Flag if developers can push to that branch"
                    },
                    {
                        "name": "developers_can_merge",
                        "in": "formData",
                        "description": "Flag if developers can merge to that branch"
                    }
                ]
            }
        },
        "\/projects\/{id}\/repository\/branches\/{branch}\/unprotect": {
            "put": {
                "summary": "Put Projects  Repository Branches Branch Unprotect",
                "description": "Put projects  repository branches branch unprotect",
                "operationId": "PutV3ProjectsIdRepositoryBranchesBranchUnprotect",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "branch",
                        "in": "path",
                        "description": "The name of the branch"
                    }
                ]
            }
        },
        "\/projects\/{id}\/repository\/commits": {
            "get": {
                "summary": "Get Projects  Repository Commits",
                "description": "Get a project repository commits",
                "operationId": "GetV3ProjectsIdRepositoryCommits",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "ref_name",
                        "in": "query",
                        "description": "The name of a repository branch or tag, if not given the default branch is used"
                    },
                    {
                        "name": "since",
                        "in": "query",
                        "description": "Only commits after or in this date will be returned"
                    },
                    {
                        "name": "until",
                        "in": "query",
                        "description": "Only commits before or in this date will be returned"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    },
                    {
                        "name": "path",
                        "in": "query",
                        "description": "The file path"
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Repository Commits",
                "description": "This feature was introduced in GitLab 8.13",
                "operationId": "PostV3ProjectsIdRepositoryCommits",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "branch_name",
                        "in": "formData",
                        "description": "The name of the branch"
                    },
                    {
                        "name": "commit_message",
                        "in": "formData",
                        "description": "Commit message"
                    },
                    {
                        "name": "actions",
                        "in": "formData",
                        "description": "Actions to perform in commit"
                    },
                    {
                        "name": "author_email",
                        "in": "formData",
                        "description": "Author email for commit"
                    },
                    {
                        "name": "author_name",
                        "in": "formData",
                        "description": "Author name for commit"
                    }
                ]
            }
        },
        "\/projects\/{id}\/repository\/commits\/{sha}": {
            "get": {
                "summary": "Get Projects  Repository Commits Sha",
                "description": "Get projects  repository commits sha",
                "operationId": "GetV3ProjectsIdRepositoryCommitsSha",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "sha",
                        "in": "path",
                        "description": "The commit, branch name, or tag name"
                    }
                ]
            }
        },
        "\/projects\/{id}\/repository\/commits\/{sha}\/blob": {
            "get": {
                "summary": "Get Projects  Repository Commits Sha Blob",
                "description": "Get projects  repository commits sha blob",
                "operationId": "GetV3ProjectsIdRepositoryCommitsShaBlob",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "sha",
                        "in": "path",
                        "description": "The commit, branch name, or tag name"
                    },
                    {
                        "name": "filepath",
                        "in": "query",
                        "description": "The path to the file to display"
                    }
                ]
            }
        },
        "\/projects\/{id}\/repository\/commits\/{sha}\/builds": {
            "get": {
                "summary": "Get Projects  Repository Commits Sha Builds",
                "description": "Get builds for a specific commit of a project",
                "operationId": "GetV3ProjectsIdRepositoryCommitsShaBuilds",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "sha",
                        "in": "path",
                        "description": "The commit, branch name, or tag name"
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "description": "The scope of builds to show"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            }
        },
        "\/projects\/{id}\/repository\/commits\/{sha}\/cherry_pick": {
            "post": {
                "summary": "Add Projects  Repository Commits Sha Cherry Pick",
                "description": "Post projects  repository commits sha cherry pick",
                "operationId": "PostV3ProjectsIdRepositoryCommitsShaCherryPick",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "sha",
                        "in": "path",
                        "description": "The commit, branch name, or tag name"
                    },
                    {
                        "name": "branch",
                        "in": "formData",
                        "description": "The name of the branch"
                    }
                ]
            }
        },
        "\/projects\/{id}\/repository\/commits\/{sha}\/comments": {
            "get": {
                "summary": "Get Projects  Repository Commits Sha Comments",
                "description": "Get projects  repository commits sha comments",
                "operationId": "GetV3ProjectsIdRepositoryCommitsShaComments",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    },
                    {
                        "name": "sha",
                        "in": "path",
                        "description": "The commit, branch name, or tag name"
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Repository Commits Sha Comments",
                "description": "Post projects  repository commits sha comments",
                "operationId": "PostV3ProjectsIdRepositoryCommitsShaComments",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "sha",
                        "in": "path",
                        "description": "The commit, branch name, or tag name"
                    },
                    {
                        "name": "note",
                        "in": "formData",
                        "description": "The text of the comment"
                    },
                    {
                        "name": "path",
                        "in": "formData",
                        "description": "The path of the group"
                    },
                    {
                        "name": "line",
                        "in": "formData",
                        "description": "The line number"
                    },
                    {
                        "name": "line_type",
                        "in": "formData",
                        "description": "The type of the line"
                    }
                ]
            }
        },
        "\/projects\/{id}\/repository\/commits\/{sha}\/diff": {
            "get": {
                "summary": "Get Projects  Repository Commits Sha Diff",
                "description": "Get the diff for a specific commit of a project",
                "operationId": "GetV3ProjectsIdRepositoryCommitsShaDiff",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "sha",
                        "in": "path",
                        "description": "The commit, branch name, or tag name"
                    }
                ]
            }
        },
        "\/projects\/{id}\/repository\/commits\/{sha}\/statuses": {
            "get": {
                "summary": "Get Projects  Repository Commits Sha Statuses",
                "description": "Get projects  repository commits sha statuses",
                "operationId": "GetV3ProjectsIdRepositoryCommitsShaStatuses",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "sha",
                        "in": "path",
                        "description": "The commit, branch name, or tag name"
                    },
                    {
                        "name": "ref",
                        "in": "query",
                        "description": "The ref"
                    },
                    {
                        "name": "stage",
                        "in": "query",
                        "description": "The stage"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The name of the label to be deleted"
                    },
                    {
                        "name": "all",
                        "in": "query",
                        "description": "Show all statuses, default: false"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            }
        },
        "\/projects\/{id}\/repository\/compare": {
            "get": {
                "summary": "Get Projects  Repository Compare",
                "description": "Compare two branches, tags, or commits",
                "operationId": "GetV3ProjectsIdRepositoryCompare",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "The commit, branch name, or tag name to start comparison"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "The commit, branch name, or tag name to stop comparison"
                    }
                ]
            }
        },
        "\/projects\/{id}\/repository\/contributors": {
            "get": {
                "summary": "Get Projects  Repository Contributors",
                "description": "Get projects  repository contributors",
                "operationId": "GetV3ProjectsIdRepositoryContributors",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/repository\/files": {
            "delete": {
                "summary": "Delete Projects  Repository Files",
                "description": "Delete an existing file in repository",
                "operationId": "DeleteV3ProjectsIdRepositoryFiles",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "file_path",
                        "in": "query",
                        "description": "The path to new file. Ex. lib\/class.rb"
                    },
                    {
                        "name": "branch_name",
                        "in": "query",
                        "description": "The name of branch"
                    },
                    {
                        "name": "commit_message",
                        "in": "query",
                        "description": "Commit Message"
                    },
                    {
                        "name": "author_email",
                        "in": "query",
                        "description": "The email of the author"
                    },
                    {
                        "name": "author_name",
                        "in": "query",
                        "description": "The name of the author"
                    }
                ]
            },
            "get": {
                "summary": "Get Projects  Repository Files",
                "description": "Get projects  repository files",
                "operationId": "GetV3ProjectsIdRepositoryFiles",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "file_path",
                        "in": "query",
                        "description": "The path to new file. Ex. lib\/class.rb"
                    },
                    {
                        "name": "ref",
                        "in": "query",
                        "description": "The ref"
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Repository Files",
                "description": "Post projects  repository files",
                "operationId": "PostV3ProjectsIdRepositoryFiles",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "file_path",
                        "in": "formData",
                        "description": "The path to new file. Ex. lib\/class.rb"
                    },
                    {
                        "name": "branch_name",
                        "in": "formData",
                        "description": "The name of the branch"
                    },
                    {
                        "name": "commit_message",
                        "in": "formData",
                        "description": "Commit message"
                    },
                    {
                        "name": "author_email",
                        "in": "formData",
                        "description": "Author email for commit"
                    },
                    {
                        "name": "author_name",
                        "in": "formData",
                        "description": "Author name for commit"
                    },
                    {
                        "name": "content",
                        "in": "formData",
                        "description": "Content of .gitlab-ci.yml"
                    },
                    {
                        "name": "encoding",
                        "in": "formData",
                        "description": "File encoding"
                    }
                ]
            },
            "put": {
                "summary": "Put Projects  Repository Files",
                "description": "Update existing file in repository",
                "operationId": "PutV3ProjectsIdRepositoryFiles",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "file_path",
                        "in": "formData",
                        "description": "The path to new file. Ex. lib\/class.rb"
                    },
                    {
                        "name": "branch_name",
                        "in": "formData",
                        "description": "The name of the branch"
                    },
                    {
                        "name": "commit_message",
                        "in": "formData",
                        "description": "Commit message"
                    },
                    {
                        "name": "author_email",
                        "in": "formData",
                        "description": "Author email for commit"
                    },
                    {
                        "name": "author_name",
                        "in": "formData",
                        "description": "Author name for commit"
                    },
                    {
                        "name": "content",
                        "in": "formData",
                        "description": "Content of .gitlab-ci.yml"
                    },
                    {
                        "name": "encoding",
                        "in": "formData",
                        "description": "File encoding"
                    }
                ]
            }
        },
        "\/projects\/{id}\/repository\/merged_branches": {
            "delete": {
                "summary": "Delete Projects  Repository Merged Branches",
                "description": "Delete projects  repository merged branches",
                "operationId": "DeleteV3ProjectsIdRepositoryMergedBranches",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/repository\/raw_blobs\/{sha}": {
            "get": {
                "summary": "Get Projects  Repository Raw Blobs Sha",
                "description": "Get projects  repository raw blobs sha",
                "operationId": "GetV3ProjectsIdRepositoryRawBlobsSha",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "sha",
                        "in": "path",
                        "description": "The commit, branch name, or tag name"
                    }
                ]
            }
        },
        "\/projects\/{id}\/repository\/tags": {
            "get": {
                "summary": "Get Projects  Repository Tags",
                "description": "Get a project repository tags",
                "operationId": "GetV3ProjectsIdRepositoryTags",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Repository Tags",
                "description": "Post projects  repository tags",
                "operationId": "PostV3ProjectsIdRepositoryTags",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "tag_name",
                        "in": "formData",
                        "description": "The name of the tag"
                    },
                    {
                        "name": "ref",
                        "in": "formData",
                        "description": "Reference"
                    },
                    {
                        "name": "message",
                        "in": "formData",
                        "description": "Specifying a message creates an annotated tag"
                    },
                    {
                        "name": "release_description",
                        "in": "formData",
                        "description": "Specifying release notes stored in the GitLab database"
                    }
                ]
            }
        },
        "\/projects\/{id}\/repository\/tags\/{tag_name}": {
            "delete": {
                "summary": "Delete Projects  Repository Tags Tag Name",
                "description": "Delete projects  repository tags tag name",
                "operationId": "DeleteV3ProjectsIdRepositoryTagsTagName",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "tag_name",
                        "in": "path",
                        "description": "The name of the tag"
                    }
                ]
            },
            "get": {
                "summary": "Get Projects  Repository Tags Tag Name",
                "description": "Get projects  repository tags tag name",
                "operationId": "GetV3ProjectsIdRepositoryTagsTagName",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "tag_name",
                        "in": "path",
                        "description": "The name of the tag"
                    }
                ]
            }
        },
        "\/projects\/{id}\/repository\/tags\/{tag_name}\/release": {
            "post": {
                "summary": "Add Projects  Repository Tags Tag Name Release",
                "description": "Post projects  repository tags tag name release",
                "operationId": "PostV3ProjectsIdRepositoryTagsTagNameRelease",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "tag_name",
                        "in": "path",
                        "description": "The name of the tag"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "The description of the group"
                    }
                ]
            },
            "put": {
                "summary": "Put Projects  Repository Tags Tag Name Release",
                "description": "Put projects  repository tags tag name release",
                "operationId": "PutV3ProjectsIdRepositoryTagsTagNameRelease",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "tag_name",
                        "in": "path",
                        "description": "The name of the tag"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "The description of the group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/repository\/tree": {
            "get": {
                "summary": "Get Projects  Repository Tree",
                "description": "Get a project repository tree",
                "operationId": "GetV3ProjectsIdRepositoryTree",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "ref_name",
                        "in": "query",
                        "description": "The name of a repository branch or tag, if not given the default branch is used"
                    },
                    {
                        "name": "path",
                        "in": "query",
                        "description": "The file path"
                    },
                    {
                        "name": "recursive",
                        "in": "query",
                        "description": "Used to get a recursive tree"
                    }
                ]
            }
        },
        "\/projects\/{id}\/runners": {
            "get": {
                "summary": "Get Projects  Runners",
                "description": "Get runners available for project",
                "operationId": "GetV3ProjectsIdRunners",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "description": "The scope of builds to show"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Runners",
                "description": "Enable a runner for a project",
                "operationId": "PostV3ProjectsIdRunners",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "runner_id",
                        "in": "formData",
                        "description": "The ID of the runner"
                    }
                ]
            }
        },
        "\/projects\/{id}\/runners\/{runner_id}": {
            "delete": {
                "summary": "Delete Projects  Runners Runner",
                "description": "Delete projects  runners runner",
                "operationId": "DeleteV3ProjectsIdRunnersRunnerId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "runner_id",
                        "in": "path",
                        "description": "The ID of the runner"
                    }
                ]
            }
        },
        "\/projects\/{id}\/services\/asana": {
            "put": {
                "summary": "Put Projects  Services Asana",
                "description": "Set asana service for project",
                "operationId": "PutV3ProjectsIdServicesAsana",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "api_key",
                        "in": "formData",
                        "description": "User API token"
                    },
                    {
                        "name": "restrict_to_branch",
                        "in": "formData",
                        "description": "Comma-separated list of branches which will be automatically inspected. Leave blank to include all branches"
                    },
                    {
                        "name": "push_events",
                        "in": "formData",
                        "description": "Trigger hook on push events"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/services\/assembla": {
            "put": {
                "summary": "Put Projects  Services Assembla",
                "description": "Set assembla service for project",
                "operationId": "PutV3ProjectsIdServicesAssembla",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "The token used to validate payloads"
                    },
                    {
                        "name": "subdomain",
                        "in": "formData",
                        "description": "Subdomain setting"
                    },
                    {
                        "name": "push_events",
                        "in": "formData",
                        "description": "Trigger hook on push events"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/services\/bamboo": {
            "put": {
                "summary": "Put Projects  Services Bamboo",
                "description": "Set bamboo service for project",
                "operationId": "PutV3ProjectsIdServicesBamboo",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "bamboo_url",
                        "in": "formData",
                        "description": "Bamboo root URL like https:\/\/bamboo.example.com"
                    },
                    {
                        "name": "build_key",
                        "in": "formData",
                        "description": "Bamboo build plan key like"
                    },
                    {
                        "name": "username",
                        "in": "formData",
                        "description": "A user with API access, if applicable"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "Passord of the user"
                    },
                    {
                        "name": "push_events",
                        "in": "formData",
                        "description": "Trigger hook on push events"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/services\/bugzilla": {
            "put": {
                "summary": "Put Projects  Services Bugzilla",
                "description": "Set bugzilla service for project",
                "operationId": "PutV3ProjectsIdServicesBugzilla",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "new_issue_url",
                        "in": "formData",
                        "description": "New issue URL"
                    },
                    {
                        "name": "issues_url",
                        "in": "formData",
                        "description": "Issues URL"
                    },
                    {
                        "name": "project_url",
                        "in": "formData",
                        "description": "Project URL"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "The description of the group"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "The name of the deploy key"
                    },
                    {
                        "name": "push_events",
                        "in": "formData",
                        "description": "Trigger hook on push events"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/services\/buildkite": {
            "put": {
                "summary": "Put Projects  Services Buildkite",
                "description": "Set buildkite service for project",
                "operationId": "PutV3ProjectsIdServicesBuildkite",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "The token used to validate payloads"
                    },
                    {
                        "name": "project_url",
                        "in": "formData",
                        "description": "Project URL"
                    },
                    {
                        "name": "enable_ssl_verification",
                        "in": "formData",
                        "description": "Do SSL verification when triggering the hook"
                    },
                    {
                        "name": "push_events",
                        "in": "formData",
                        "description": "Trigger hook on push events"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/services\/builds-email": {
            "put": {
                "summary": "Put Projects  Services Builds Email",
                "description": "Set builds-email service for project",
                "operationId": "PutV3ProjectsIdServicesBuildsEmail",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "recipients",
                        "in": "formData",
                        "description": "Comma-separated list of recipient email addresses"
                    },
                    {
                        "name": "add_pusher",
                        "in": "formData",
                        "description": "Add pusher to recipients list"
                    },
                    {
                        "name": "notify_only_broken_builds",
                        "in": "formData",
                        "description": "Notify only broken builds"
                    },
                    {
                        "name": "build_events",
                        "in": "formData",
                        "description": "Trigger hook on build events"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/services\/campfire": {
            "put": {
                "summary": "Put Projects  Services Campfire",
                "description": "Set campfire service for project",
                "operationId": "PutV3ProjectsIdServicesCampfire",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "The token used to validate payloads"
                    },
                    {
                        "name": "subdomain",
                        "in": "formData",
                        "description": "Subdomain setting"
                    },
                    {
                        "name": "room",
                        "in": "formData",
                        "description": "Campfire room"
                    },
                    {
                        "name": "push_events",
                        "in": "formData",
                        "description": "Trigger hook on push events"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/services\/custom-issue-tracker": {
            "put": {
                "summary": "Put Projects  Services Custom Issue Tracker",
                "description": "Set custom-issue-tracker service for project",
                "operationId": "PutV3ProjectsIdServicesCustomIssueTracker",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "new_issue_url",
                        "in": "formData",
                        "description": "New issue URL"
                    },
                    {
                        "name": "issues_url",
                        "in": "formData",
                        "description": "Issues URL"
                    },
                    {
                        "name": "project_url",
                        "in": "formData",
                        "description": "Project URL"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "The description of the group"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "The name of the deploy key"
                    },
                    {
                        "name": "push_events",
                        "in": "formData",
                        "description": "Trigger hook on push events"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/services\/drone-ci": {
            "put": {
                "summary": "Put Projects  Services Drone Ci",
                "description": "Set drone-ci service for project",
                "operationId": "PutV3ProjectsIdServicesDroneCi",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "The token used to validate payloads"
                    },
                    {
                        "name": "drone_url",
                        "in": "formData",
                        "description": "Drone CI URL"
                    },
                    {
                        "name": "enable_ssl_verification",
                        "in": "formData",
                        "description": "Do SSL verification when triggering the hook"
                    },
                    {
                        "name": "push_events",
                        "in": "formData",
                        "description": "Trigger hook on push events"
                    },
                    {
                        "name": "merge_request_events",
                        "in": "formData",
                        "description": "Event will be triggered when a merge request is created\/updated\/merged"
                    },
                    {
                        "name": "tag_push_events",
                        "in": "formData",
                        "description": "Trigger hook on tag push events"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/services\/emails-on-push": {
            "put": {
                "summary": "Put Projects  Services Emails On Push",
                "description": "Set emails-on-push service for project",
                "operationId": "PutV3ProjectsIdServicesEmailsOnPush",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "recipients",
                        "in": "formData",
                        "description": "Comma-separated list of recipient email addresses"
                    },
                    {
                        "name": "disable_diffs",
                        "in": "formData",
                        "description": "Disable code diffs"
                    },
                    {
                        "name": "send_from_committer_email",
                        "in": "formData",
                        "description": "Send from committer"
                    },
                    {
                        "name": "push_events",
                        "in": "formData",
                        "description": "Trigger hook on push events"
                    },
                    {
                        "name": "tag_push_events",
                        "in": "formData",
                        "description": "Trigger hook on tag push events"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/services\/external-wiki": {
            "put": {
                "summary": "Put Projects  Services External Wiki",
                "description": "Set external-wiki service for project",
                "operationId": "PutV3ProjectsIdServicesExternalWiki",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "external_wiki_url",
                        "in": "formData",
                        "description": "The URL of the external Wiki"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/services\/flowdock": {
            "put": {
                "summary": "Put Projects  Services Flowdock",
                "description": "Set flowdock service for project",
                "operationId": "PutV3ProjectsIdServicesFlowdock",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "The token used to validate payloads"
                    },
                    {
                        "name": "push_events",
                        "in": "formData",
                        "description": "Trigger hook on push events"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/services\/gemnasium": {
            "put": {
                "summary": "Put Projects  Services Gemnasium",
                "description": "Set gemnasium service for project",
                "operationId": "PutV3ProjectsIdServicesGemnasium",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "api_key",
                        "in": "formData",
                        "description": "User API token"
                    },
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "The token used to validate payloads"
                    },
                    {
                        "name": "push_events",
                        "in": "formData",
                        "description": "Trigger hook on push events"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/services\/hipchat": {
            "put": {
                "summary": "Put Projects  Services Hipchat",
                "description": "Set hipchat service for project",
                "operationId": "PutV3ProjectsIdServicesHipchat",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "The token used to validate payloads"
                    },
                    {
                        "name": "room",
                        "in": "formData",
                        "description": "Campfire room"
                    },
                    {
                        "name": "color",
                        "in": "formData",
                        "description": "The color of the label given in 6-digit hex notation with leading '#' sign (e.g. #FFAABB)"
                    },
                    {
                        "name": "notify",
                        "in": "formData",
                        "description": "Enable notifications"
                    },
                    {
                        "name": "api_version",
                        "in": "formData",
                        "description": "Leave blank for default (v2)"
                    },
                    {
                        "name": "server",
                        "in": "formData",
                        "description": "Leave blank for default. https:\/\/hipchat.example.com"
                    },
                    {
                        "name": "push_events",
                        "in": "formData",
                        "description": "Trigger hook on push events"
                    },
                    {
                        "name": "issue_events",
                        "in": "formData",
                        "description": "Event will be triggered when an issue is created\/updated\/closed"
                    },
                    {
                        "name": "confidential_issue_events",
                        "in": "formData",
                        "description": "Event will be triggered when a confidential issue is created\/updated\/closed"
                    },
                    {
                        "name": "merge_request_events",
                        "in": "formData",
                        "description": "Event will be triggered when a merge request is created\/updated\/merged"
                    },
                    {
                        "name": "note_events",
                        "in": "formData",
                        "description": "Trigger hook on note(comment) events"
                    },
                    {
                        "name": "tag_push_events",
                        "in": "formData",
                        "description": "Trigger hook on tag push events"
                    },
                    {
                        "name": "build_events",
                        "in": "formData",
                        "description": "Trigger hook on build events"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/services\/irker": {
            "put": {
                "summary": "Put Projects  Services Irker",
                "description": "Set irker service for project",
                "operationId": "PutV3ProjectsIdServicesIrker",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "recipients",
                        "in": "formData",
                        "description": "Comma-separated list of recipient email addresses"
                    },
                    {
                        "name": "default_irc_uri",
                        "in": "formData",
                        "description": "Default: irc:\/\/irc.network.net:6697"
                    },
                    {
                        "name": "server_host",
                        "in": "formData",
                        "description": "Server host. Default localhost"
                    },
                    {
                        "name": "server_port",
                        "in": "formData",
                        "description": "Server port. Default 6659"
                    },
                    {
                        "name": "colorize_messages",
                        "in": "formData",
                        "description": "Colorize messages"
                    },
                    {
                        "name": "push_events",
                        "in": "formData",
                        "description": "Trigger hook on push events"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/services\/jira": {
            "put": {
                "summary": "Put Projects  Services Jira",
                "description": "Set jira service for project",
                "operationId": "PutV3ProjectsIdServicesJira",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "url",
                        "in": "formData",
                        "description": "The URL to send the request to"
                    },
                    {
                        "name": "project_key",
                        "in": "formData",
                        "description": "The short identifier for your JIRA project, all uppercase, e.g., PROJ"
                    },
                    {
                        "name": "username",
                        "in": "formData",
                        "description": "A user with API access, if applicable"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "Passord of the user"
                    },
                    {
                        "name": "jira_issue_transition_id",
                        "in": "formData",
                        "description": "The ID of a transition that moves issues to a closed state. You can find this number under the JIRA workflow administration (**Administration > Issues > Workflows**) by selecting **View** under **Operations** of the desired workflow of your project. The ID of each state can be found inside the parenthesis of each transition name under the **Transitions (id)** column ([see screenshot][trans]). By default, this ID is set to `2`"
                    },
                    {
                        "name": "commit_events",
                        "in": "formData",
                        "description": "Event will be triggered when a commit is created\/updated"
                    },
                    {
                        "name": "merge_request_events",
                        "in": "formData",
                        "description": "Event will be triggered when a merge request is created\/updated\/merged"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/services\/kubernetes": {
            "put": {
                "summary": "Put Projects  Services Kubernetes",
                "description": "Set kubernetes service for project",
                "operationId": "PutV3ProjectsIdServicesKubernetes",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "namespace",
                        "in": "formData",
                        "description": "The ID or name of the namespace that the project will be forked into"
                    },
                    {
                        "name": "api_url",
                        "in": "formData",
                        "description": "The URL to the Kubernetes cluster API, e.g., https:\/\/kubernetes.example.com"
                    },
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "The token used to validate payloads"
                    },
                    {
                        "name": "ca_pem",
                        "in": "formData",
                        "description": "A custom certificate authority bundle to verify the Kubernetes cluster with (PEM format)"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/services\/mattermost": {
            "put": {
                "summary": "Put Projects  Services Mattermost",
                "description": "Set mattermost service for project",
                "operationId": "PutV3ProjectsIdServicesMattermost",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "webhook",
                        "in": "formData",
                        "description": "The Mattermost webhook. e.g. http:\/\/mattermost_host\/hooks\/..."
                    },
                    {
                        "name": "push_events",
                        "in": "formData",
                        "description": "Trigger hook on push events"
                    },
                    {
                        "name": "issue_events",
                        "in": "formData",
                        "description": "Event will be triggered when an issue is created\/updated\/closed"
                    },
                    {
                        "name": "confidential_issue_events",
                        "in": "formData",
                        "description": "Event will be triggered when a confidential issue is created\/updated\/closed"
                    },
                    {
                        "name": "merge_request_events",
                        "in": "formData",
                        "description": "Event will be triggered when a merge request is created\/updated\/merged"
                    },
                    {
                        "name": "note_events",
                        "in": "formData",
                        "description": "Trigger hook on note(comment) events"
                    },
                    {
                        "name": "tag_push_events",
                        "in": "formData",
                        "description": "Trigger hook on tag push events"
                    },
                    {
                        "name": "build_events",
                        "in": "formData",
                        "description": "Trigger hook on build events"
                    },
                    {
                        "name": "pipeline_events",
                        "in": "formData",
                        "description": "Trigger hook on pipeline events"
                    },
                    {
                        "name": "wiki_page_events",
                        "in": "formData",
                        "description": "Trigger hook on wiki events"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/services\/mattermost-slash-commands": {
            "put": {
                "summary": "Put Projects  Services Mattermost Slash Commands",
                "description": "Set mattermost-slash-commands service for project",
                "operationId": "PutV3ProjectsIdServicesMattermostSlashCommands",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "The token used to validate payloads"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/services\/mattermost_slash_commands\/trigger": {
            "post": {
                "summary": "Add Projects  Services Mattermost Slash Commands Trigger",
                "description": "Post projects  services mattermost slash commands trigger",
                "operationId": "PostV3ProjectsIdServicesMattermostSlashCommandsTrigger",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "The token used to validate payloads"
                    }
                ]
            }
        },
        "\/projects\/{id}\/services\/pipelines-email": {
            "put": {
                "summary": "Put Projects  Services Pipelines Email",
                "description": "Set pipelines-email service for project",
                "operationId": "PutV3ProjectsIdServicesPipelinesEmail",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "recipients",
                        "in": "formData",
                        "description": "Comma-separated list of recipient email addresses"
                    },
                    {
                        "name": "notify_only_broken_builds",
                        "in": "formData",
                        "description": "Notify only broken builds"
                    },
                    {
                        "name": "pipeline_events",
                        "in": "formData",
                        "description": "Trigger hook on pipeline events"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/services\/pivotaltracker": {
            "put": {
                "summary": "Put Projects  Services Pivotaltracker",
                "description": "Set pivotaltracker service for project",
                "operationId": "PutV3ProjectsIdServicesPivotaltracker",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "The token used to validate payloads"
                    },
                    {
                        "name": "restrict_to_branch",
                        "in": "formData",
                        "description": "Comma-separated list of branches which will be automatically inspected. Leave blank to include all branches"
                    },
                    {
                        "name": "push_events",
                        "in": "formData",
                        "description": "Trigger hook on push events"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/services\/pushover": {
            "put": {
                "summary": "Put Projects  Services Pushover",
                "description": "Set pushover service for project",
                "operationId": "PutV3ProjectsIdServicesPushover",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "api_key",
                        "in": "formData",
                        "description": "User API token"
                    },
                    {
                        "name": "user_key",
                        "in": "formData",
                        "description": "The user key"
                    },
                    {
                        "name": "priority",
                        "in": "formData",
                        "description": "The priority of the label"
                    },
                    {
                        "name": "device",
                        "in": "formData",
                        "description": "Leave blank for all active devices"
                    },
                    {
                        "name": "sound",
                        "in": "formData",
                        "description": "The sound of the notification"
                    },
                    {
                        "name": "push_events",
                        "in": "formData",
                        "description": "Trigger hook on push events"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/services\/redmine": {
            "put": {
                "summary": "Put Projects  Services Redmine",
                "description": "Set redmine service for project",
                "operationId": "PutV3ProjectsIdServicesRedmine",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "new_issue_url",
                        "in": "formData",
                        "description": "New issue URL"
                    },
                    {
                        "name": "project_url",
                        "in": "formData",
                        "description": "Project URL"
                    },
                    {
                        "name": "issues_url",
                        "in": "formData",
                        "description": "Issues URL"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "The description of the group"
                    },
                    {
                        "name": "push_events",
                        "in": "formData",
                        "description": "Trigger hook on push events"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/services\/slack": {
            "put": {
                "summary": "Put Projects  Services Slack",
                "description": "Set slack service for project",
                "operationId": "PutV3ProjectsIdServicesSlack",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "webhook",
                        "in": "formData",
                        "description": "The Mattermost webhook. e.g. http:\/\/mattermost_host\/hooks\/..."
                    },
                    {
                        "name": "new_issue_url",
                        "in": "formData",
                        "description": "New issue URL"
                    },
                    {
                        "name": "channel",
                        "in": "formData",
                        "description": "The channel name"
                    },
                    {
                        "name": "push_events",
                        "in": "formData",
                        "description": "Trigger hook on push events"
                    },
                    {
                        "name": "issue_events",
                        "in": "formData",
                        "description": "Event will be triggered when an issue is created\/updated\/closed"
                    },
                    {
                        "name": "confidential_issue_events",
                        "in": "formData",
                        "description": "Event will be triggered when a confidential issue is created\/updated\/closed"
                    },
                    {
                        "name": "merge_request_events",
                        "in": "formData",
                        "description": "Event will be triggered when a merge request is created\/updated\/merged"
                    },
                    {
                        "name": "note_events",
                        "in": "formData",
                        "description": "Trigger hook on note(comment) events"
                    },
                    {
                        "name": "tag_push_events",
                        "in": "formData",
                        "description": "Trigger hook on tag push events"
                    },
                    {
                        "name": "build_events",
                        "in": "formData",
                        "description": "Trigger hook on build events"
                    },
                    {
                        "name": "pipeline_events",
                        "in": "formData",
                        "description": "Trigger hook on pipeline events"
                    },
                    {
                        "name": "wiki_page_events",
                        "in": "formData",
                        "description": "Trigger hook on wiki events"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/services\/slack-slash-commands": {
            "put": {
                "summary": "Put Projects  Services Slack Slash Commands",
                "description": "Set slack-slash-commands service for project",
                "operationId": "PutV3ProjectsIdServicesSlackSlashCommands",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "The token used to validate payloads"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/services\/slack_slash_commands\/trigger": {
            "post": {
                "summary": "Add Projects  Services Slack Slash Commands Trigger",
                "description": "Post projects  services slack slash commands trigger",
                "operationId": "PostV3ProjectsIdServicesSlackSlashCommandsTrigger",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "The token used to validate payloads"
                    }
                ]
            }
        },
        "\/projects\/{id}\/services\/teamcity": {
            "put": {
                "summary": "Put Projects  Services Teamcity",
                "description": "Set teamcity service for project",
                "operationId": "PutV3ProjectsIdServicesTeamcity",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "teamcity_url",
                        "in": "formData",
                        "description": "TeamCity root URL like https:\/\/teamcity.example.com"
                    },
                    {
                        "name": "build_type",
                        "in": "formData",
                        "description": "Build configuration ID"
                    },
                    {
                        "name": "username",
                        "in": "formData",
                        "description": "A user with API access, if applicable"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "Passord of the user"
                    },
                    {
                        "name": "push_events",
                        "in": "formData",
                        "description": "Trigger hook on push events"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/services\/{service_slug}": {
            "delete": {
                "summary": "Delete Projects  Services Service Slug",
                "description": "Delete projects  services service slug",
                "operationId": "DeleteV3ProjectsIdServicesServiceSlug",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "service_slug",
                        "in": "path",
                        "description": "The name of the service"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            },
            "get": {
                "summary": "Get Projects  Services Service Slug",
                "description": "Get the service settings for project",
                "operationId": "GetV3ProjectsIdServicesServiceSlug",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "service_slug",
                        "in": "path",
                        "description": "The name of the service"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/share": {
            "post": {
                "summary": "Add Projects  Share",
                "description": "Share the project with a group",
                "operationId": "PostV3ProjectsIdShare",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "group_id",
                        "in": "formData",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "group_access",
                        "in": "formData",
                        "description": "The group access level"
                    },
                    {
                        "name": "expires_at",
                        "in": "formData",
                        "description": "Date string in the format YEAR-MONTH-DAY"
                    }
                ]
            }
        },
        "\/projects\/{id}\/share\/{group_id}": {
            "delete": {
                "summary": "Delete Projects  Share Group",
                "description": "Delete projects  share group",
                "operationId": "DeleteV3ProjectsIdShareGroupId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "group_id",
                        "in": "path",
                        "description": "The ID of the group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/snippets": {
            "get": {
                "summary": "Get Projects  Snippets",
                "description": "Get all project snippets",
                "operationId": "GetV3ProjectsIdSnippets",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Snippets",
                "description": "Create a new project snippet",
                "operationId": "PostV3ProjectsIdSnippets",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "The name of the deploy key"
                    },
                    {
                        "name": "file_name",
                        "in": "formData",
                        "description": "The file name of the snippet"
                    },
                    {
                        "name": "code",
                        "in": "formData",
                        "description": "The content of the snippet"
                    },
                    {
                        "name": "visibility_level",
                        "in": "formData",
                        "description": "The visibility level of the group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/snippets\/{noteable_id}\/notes": {
            "get": {
                "summary": "Get Projects  Snippets Noteable  Notes",
                "description": "Get a list of project +noteable+ notes",
                "operationId": "GetV3ProjectsIdSnippetsNoteableIdNotes",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "noteable_id",
                        "in": "path",
                        "description": "The ID of the noteable"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Snippets Noteable  Notes",
                "description": "Post projects  snippets noteable  notes",
                "operationId": "PostV3ProjectsIdSnippetsNoteableIdNotes",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "noteable_id",
                        "in": "path",
                        "description": "The ID of the noteable"
                    },
                    {
                        "name": "body",
                        "in": "formData",
                        "description": "The content of a note"
                    },
                    {
                        "name": "created_at",
                        "in": "formData",
                        "description": "Date time when the issue was created. Available only for admins and project owners."
                    }
                ]
            }
        },
        "\/projects\/{id}\/snippets\/{noteable_id}\/notes\/{note_id}": {
            "delete": {
                "summary": "Delete Projects  Snippets Noteable  Notes Note",
                "description": "Delete projects  snippets noteable  notes note",
                "operationId": "DeleteV3ProjectsIdSnippetsNoteableIdNotesNoteId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "noteable_id",
                        "in": "path",
                        "description": "The ID of the noteable"
                    },
                    {
                        "name": "note_id",
                        "in": "path",
                        "description": ""
                    }
                ]
            },
            "get": {
                "summary": "Get Projects  Snippets Noteable  Notes Note",
                "description": "Get projects  snippets noteable  notes note",
                "operationId": "GetV3ProjectsIdSnippetsNoteableIdNotesNoteId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "note_id",
                        "in": "path",
                        "description": ""
                    },
                    {
                        "name": "noteable_id",
                        "in": "path",
                        "description": "The ID of the noteable"
                    }
                ]
            },
            "put": {
                "summary": "Put Projects  Snippets Noteable  Notes Note",
                "description": "Put projects  snippets noteable  notes note",
                "operationId": "PutV3ProjectsIdSnippetsNoteableIdNotesNoteId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "noteable_id",
                        "in": "path",
                        "description": "The ID of the noteable"
                    },
                    {
                        "name": "note_id",
                        "in": "path",
                        "description": ""
                    },
                    {
                        "name": "body",
                        "in": "formData",
                        "description": "The content of a note"
                    }
                ]
            }
        },
        "\/projects\/{id}\/snippets\/{snippet_id}": {
            "delete": {
                "summary": "Delete Projects  Snippets Snippet",
                "description": "Delete projects  snippets snippet",
                "operationId": "DeleteV3ProjectsIdSnippetsSnippetId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "snippet_id",
                        "in": "path",
                        "description": "The ID of a project snippet"
                    }
                ]
            },
            "get": {
                "summary": "Get Projects  Snippets Snippet",
                "description": "Get projects  snippets snippet",
                "operationId": "GetV3ProjectsIdSnippetsSnippetId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "snippet_id",
                        "in": "path",
                        "description": "The ID of a project snippet"
                    }
                ]
            },
            "put": {
                "summary": "Put Projects  Snippets Snippet",
                "description": "Update an existing project snippet",
                "operationId": "PutV3ProjectsIdSnippetsSnippetId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "snippet_id",
                        "in": "path",
                        "description": "The ID of a project snippet"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "The name of the deploy key"
                    },
                    {
                        "name": "file_name",
                        "in": "formData",
                        "description": "The file name of the snippet"
                    },
                    {
                        "name": "code",
                        "in": "formData",
                        "description": "The content of the snippet"
                    },
                    {
                        "name": "visibility_level",
                        "in": "formData",
                        "description": "The visibility level of the group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/snippets\/{snippet_id}\/award_emoji": {
            "get": {
                "summary": "Get Projects  Snippets Snippet  Award Emoji",
                "description": "Get projects  snippets snippet  award emoji",
                "operationId": "GetV3ProjectsIdSnippetsSnippetIdAwardEmoji",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "snippet_id",
                        "in": "path",
                        "description": "The ID of a project snippet"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Snippets Snippet  Award Emoji",
                "description": "Post projects  snippets snippet  award emoji",
                "operationId": "PostV3ProjectsIdSnippetsSnippetIdAwardEmoji",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "The name of the group"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "snippet_id",
                        "in": "path",
                        "description": "The ID of a project snippet"
                    }
                ]
            }
        },
        "\/projects\/{id}\/snippets\/{snippet_id}\/award_emoji\/{award_id}": {
            "delete": {
                "summary": "Delete Projects  Snippets Snippet  Award Emoji Award",
                "description": "Delete projects  snippets snippet  award emoji award",
                "operationId": "DeleteV3ProjectsIdSnippetsSnippetIdAwardEmojiAwardId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "award_id",
                        "in": "path",
                        "description": "The ID of an award emoji"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "snippet_id",
                        "in": "path",
                        "description": "The ID of a project snippet"
                    }
                ]
            },
            "get": {
                "summary": "Get Projects  Snippets Snippet  Award Emoji Award",
                "description": "Get projects  snippets snippet  award emoji award",
                "operationId": "GetV3ProjectsIdSnippetsSnippetIdAwardEmojiAwardId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "award_id",
                        "in": "path",
                        "description": "The ID of an award emoji"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "snippet_id",
                        "in": "path",
                        "description": "The ID of a project snippet"
                    }
                ]
            }
        },
        "\/projects\/{id}\/snippets\/{snippet_id}\/notes\/{note_id}\/award_emoji": {
            "get": {
                "summary": "Get Projects  Snippets Snippet  Notes Note  Award Emoji",
                "description": "Get projects  snippets snippet  notes note  award emoji",
                "operationId": "GetV3ProjectsIdSnippetsSnippetIdNotesNoteIdAwardEmoji",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "snippet_id",
                        "in": "path",
                        "description": "The ID of a project snippet"
                    },
                    {
                        "name": "note_id",
                        "in": "path",
                        "description": ""
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Snippets Snippet  Notes Note  Award Emoji",
                "description": "Post projects  snippets snippet  notes note  award emoji",
                "operationId": "PostV3ProjectsIdSnippetsSnippetIdNotesNoteIdAwardEmoji",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "The name of the group"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "snippet_id",
                        "in": "path",
                        "description": "The ID of a project snippet"
                    },
                    {
                        "name": "note_id",
                        "in": "path",
                        "description": ""
                    }
                ]
            }
        },
        "\/projects\/{id}\/snippets\/{snippet_id}\/notes\/{note_id}\/award_emoji\/{award_id}": {
            "delete": {
                "summary": "Delete Projects  Snippets Snippet  Notes Note  Award Emoji Award",
                "description": "Delete projects  snippets snippet  notes note  award emoji award",
                "operationId": "DeleteV3ProjectsIdSnippetsSnippetIdNotesNoteIdAwardEmojiAwardId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "award_id",
                        "in": "path",
                        "description": "The ID of an award emoji"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "snippet_id",
                        "in": "path",
                        "description": "The ID of a project snippet"
                    },
                    {
                        "name": "note_id",
                        "in": "path",
                        "description": ""
                    }
                ]
            },
            "get": {
                "summary": "Get Projects  Snippets Snippet  Notes Note  Award Emoji Award",
                "description": "Get projects  snippets snippet  notes note  award emoji award",
                "operationId": "GetV3ProjectsIdSnippetsSnippetIdNotesNoteIdAwardEmojiAwardId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "award_id",
                        "in": "path",
                        "description": "The ID of an award emoji"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "snippet_id",
                        "in": "path",
                        "description": "The ID of a project snippet"
                    },
                    {
                        "name": "note_id",
                        "in": "path",
                        "description": ""
                    }
                ]
            }
        },
        "\/projects\/{id}\/snippets\/{snippet_id}\/raw": {
            "get": {
                "summary": "Get Projects  Snippets Snippet  Raw",
                "description": "Get projects  snippets snippet  raw",
                "operationId": "GetV3ProjectsIdSnippetsSnippetIdRaw",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "snippet_id",
                        "in": "path",
                        "description": "The ID of a project snippet"
                    }
                ]
            }
        },
        "\/projects\/{id}\/star": {
            "delete": {
                "summary": "Delete Projects  Star",
                "description": "Delete projects  star",
                "operationId": "DeleteV3ProjectsIdStar",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Star",
                "description": "Post projects  star",
                "operationId": "PostV3ProjectsIdStar",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/statuses\/{sha}": {
            "post": {
                "summary": "Add Projects  Statuses Sha",
                "description": "Post projects  statuses sha",
                "operationId": "PostV3ProjectsIdStatusesSha",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "sha",
                        "in": "path",
                        "description": "The commit, branch name, or tag name"
                    },
                    {
                        "name": "state",
                        "in": "formData",
                        "description": "The state of the status"
                    },
                    {
                        "name": "ref",
                        "in": "formData",
                        "description": "Reference"
                    },
                    {
                        "name": "target_url",
                        "in": "formData",
                        "description": "The target URL to associate with this status"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "The description of the group"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "The name of the group"
                    },
                    {
                        "name": "context",
                        "in": "formData",
                        "description": "A string label to differentiate this status from the status of other systems. Default: \"default\""
                    }
                ]
            }
        },
        "\/projects\/{id}\/triggers": {
            "get": {
                "summary": "Get Projects  Triggers",
                "description": "Get projects  triggers",
                "operationId": "GetV3ProjectsIdTriggers",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Triggers",
                "description": "Post projects  triggers",
                "operationId": "PostV3ProjectsIdTriggers",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/triggers\/{token}": {
            "delete": {
                "summary": "Delete Projects  Triggers Token",
                "description": "Delete projects  triggers token",
                "operationId": "DeleteV3ProjectsIdTriggersToken",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "token",
                        "in": "path",
                        "description": "The unique token of trigger"
                    }
                ]
            },
            "get": {
                "summary": "Get Projects  Triggers Token",
                "description": "Get specific trigger of a project",
                "operationId": "GetV3ProjectsIdTriggersToken",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "token",
                        "in": "path",
                        "description": "The unique token of trigger"
                    }
                ]
            }
        },
        "\/projects\/{id}\/unarchive": {
            "post": {
                "summary": "Add Projects  Unarchive",
                "description": "Post projects  unarchive",
                "operationId": "PostV3ProjectsIdUnarchive",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/projects\/{id}\/uploads": {
            "post": {
                "summary": "Add Projects  Uploads",
                "description": "Post projects  uploads",
                "operationId": "PostV3ProjectsIdUploads",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The file to be uploaded"
                    }
                ]
            }
        },
        "\/projects\/{id}\/users": {
            "get": {
                "summary": "Get Projects  Users",
                "description": "Get the users list of a project",
                "operationId": "GetV3ProjectsIdUsers",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search for a specific group"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            }
        },
        "\/projects\/{id}\/variables": {
            "get": {
                "summary": "Get Projects  Variables",
                "description": "Get projects  variables",
                "operationId": "GetV3ProjectsIdVariables",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            },
            "post": {
                "summary": "Add Projects  Variables",
                "description": "Create a new variable in a project",
                "operationId": "PostV3ProjectsIdVariables",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "key",
                        "in": "formData",
                        "description": "The new deploy key"
                    },
                    {
                        "name": "value",
                        "in": "formData",
                        "description": "The value of the variable"
                    }
                ]
            }
        },
        "\/projects\/{id}\/variables\/{key}": {
            "delete": {
                "summary": "Delete Projects  Variables Key",
                "description": "Delete an existing variable from a project",
                "operationId": "DeleteV3ProjectsIdVariablesKey",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "description": "The key of the variable"
                    }
                ]
            },
            "get": {
                "summary": "Get Projects  Variables Key",
                "description": "Get a specific variable from a project",
                "operationId": "GetV3ProjectsIdVariablesKey",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "description": "The key of the variable"
                    }
                ]
            },
            "put": {
                "summary": "Put Projects  Variables Key",
                "description": "Update an existing variable from a project",
                "operationId": "PutV3ProjectsIdVariablesKey",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "description": "The key of the variable"
                    },
                    {
                        "name": "value",
                        "in": "formData",
                        "description": "The value of the variable"
                    }
                ]
            }
        },
        "\/runners": {
            "get": {
                "summary": "Get Runners",
                "description": "Get runners available for user",
                "operationId": "GetV3Runners",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "scope",
                        "in": "query",
                        "description": "The scope of builds to show"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            }
        },
        "\/runners\/all": {
            "get": {
                "summary": "Get Runners All",
                "description": "Get all runners - shared and specific",
                "operationId": "GetV3RunnersAll",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "scope",
                        "in": "query",
                        "description": "The scope of builds to show"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            }
        },
        "\/runners\/{id}": {
            "delete": {
                "summary": "Delete Runners",
                "description": "Remove a runner",
                "operationId": "DeleteV3RunnersId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            },
            "get": {
                "summary": "Get Runners",
                "description": "Get runner's details",
                "operationId": "GetV3RunnersId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            },
            "put": {
                "summary": "Put Runners",
                "description": "Update runner's details",
                "operationId": "PutV3RunnersId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "The description of the group"
                    },
                    {
                        "name": "active",
                        "in": "formData",
                        "description": "The state of a runner"
                    },
                    {
                        "name": "tag_list",
                        "in": "formData",
                        "description": "The list of tags for a runner"
                    },
                    {
                        "name": "run_untagged",
                        "in": "formData",
                        "description": "Flag indicating the runner can execute untagged jobs"
                    },
                    {
                        "name": "locked",
                        "in": "formData",
                        "description": "Flag indicating the runner is locked"
                    }
                ]
            }
        },
        "\/session": {
            "post": {
                "summary": "Add Session",
                "description": "Login to get token",
                "operationId": "PostV3Session",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "login",
                        "in": "formData",
                        "description": "The username"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "The email of the user"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "Passord of the user"
                    }
                ]
            }
        },
        "\/sidekiq\/compound_metrics": {
            "get": {
                "summary": "Get Sekiq Compound Metrics",
                "description": "Get the Sidekiq Compound metrics. Includes queue, process, and job statistics",
                "operationId": "GetV3SidekiqCompoundMetrics",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/sidekiq\/job_stats": {
            "get": {
                "summary": "Get Sekiq Job Stats",
                "description": "Get the Sidekiq job statistics",
                "operationId": "GetV3SidekiqJobStats",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/sidekiq\/process_metrics": {
            "get": {
                "summary": "Get Sekiq Process Metrics",
                "description": "Get the Sidekiq process metrics",
                "operationId": "GetV3SidekiqProcessMetrics",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/sidekiq\/queue_metrics": {
            "get": {
                "summary": "Get Sekiq Queue Metrics",
                "description": "Get the Sidekiq queue metrics",
                "operationId": "GetV3SidekiqQueueMetrics",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/snippets": {
            "get": {
                "summary": "Get Snippets",
                "description": "This feature was introduced in GitLab 8.15.",
                "operationId": "GetV3Snippets",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            },
            "post": {
                "summary": "Add Snippets",
                "description": "This feature was introduced in GitLab 8.15.",
                "operationId": "PostV3Snippets",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "The name of the deploy key"
                    },
                    {
                        "name": "file_name",
                        "in": "formData",
                        "description": "The file name of the snippet"
                    },
                    {
                        "name": "content",
                        "in": "formData",
                        "description": "Content of .gitlab-ci.yml"
                    },
                    {
                        "name": "visibility_level",
                        "in": "formData",
                        "description": "The visibility level of the group"
                    }
                ]
            }
        },
        "\/snippets\/public": {
            "get": {
                "summary": "Get Snippets Public",
                "description": "This feature was introduced in GitLab 8.15.",
                "operationId": "GetV3SnippetsPublic",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            }
        },
        "\/snippets\/{id}": {
            "delete": {
                "summary": "Delete Snippets",
                "description": "This feature was introduced in GitLab 8.15.",
                "operationId": "DeleteV3SnippetsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            },
            "get": {
                "summary": "Get Snippets",
                "description": "This feature was introduced in GitLab 8.15.",
                "operationId": "GetV3SnippetsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            },
            "put": {
                "summary": "Put Snippets",
                "description": "This feature was introduced in GitLab 8.15.",
                "operationId": "PutV3SnippetsId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "The name of the deploy key"
                    },
                    {
                        "name": "file_name",
                        "in": "formData",
                        "description": "The file name of the snippet"
                    },
                    {
                        "name": "content",
                        "in": "formData",
                        "description": "Content of .gitlab-ci.yml"
                    },
                    {
                        "name": "visibility_level",
                        "in": "formData",
                        "description": "The visibility level of the group"
                    }
                ]
            }
        },
        "\/snippets\/{id}\/raw": {
            "get": {
                "summary": "Get Snippets  Raw",
                "description": "This feature was introduced in GitLab 8.15.",
                "operationId": "GetV3SnippetsIdRaw",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/templates\/dockerfiles": {
            "get": {
                "summary": "Get Templates Dockerfiles",
                "description": "This feature was introduced in GitLab 8.15.",
                "operationId": "GetV3TemplatesDockerfiles",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/templates\/dockerfiles\/{name}": {
            "get": {
                "summary": "Get Templates Dockerfiles Name",
                "description": "This feature was introduced in GitLab 8.15.",
                "operationId": "GetV3TemplatesDockerfilesName",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the template"
                    }
                ]
            }
        },
        "\/templates\/gitignores": {
            "get": {
                "summary": "Get Templates Gitignores",
                "description": "This feature was introduced in GitLab 8.8.",
                "operationId": "GetV3TemplatesGitignores",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/templates\/gitignores\/{name}": {
            "get": {
                "summary": "Get Templates Gitignores Name",
                "description": "This feature was introduced in GitLab 8.8.",
                "operationId": "GetV3TemplatesGitignoresName",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the template"
                    }
                ]
            }
        },
        "\/templates\/gitlab_ci_ymls": {
            "get": {
                "summary": "Get Templates Gitlab Ci Ymls",
                "description": "This feature was introduced in GitLab 8.9.",
                "operationId": "GetV3TemplatesGitlabCiYmls",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/templates\/gitlab_ci_ymls\/{name}": {
            "get": {
                "summary": "Get Templates Gitlab Ci Ymls Name",
                "description": "This feature was introduced in GitLab 8.9.",
                "operationId": "GetV3TemplatesGitlabCiYmlsName",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the template"
                    }
                ]
            }
        },
        "\/templates\/licenses": {
            "get": {
                "summary": "Get Templates Licenses",
                "description": "This feature was introduced in GitLab 8.7.",
                "operationId": "GetV3TemplatesLicenses",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "popular",
                        "in": "query",
                        "description": "If passed, returns only popular licenses"
                    }
                ]
            }
        },
        "\/templates\/licenses\/{name}": {
            "get": {
                "summary": "Get Templates Licenses Name",
                "description": "This feature was introduced in GitLab 8.7.",
                "operationId": "GetV3TemplatesLicensesName",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the template"
                    }
                ]
            }
        },
        "\/todos": {
            "delete": {
                "summary": "Delete Todos",
                "description": "Mark all todos as done",
                "operationId": "DeleteV3Todos",
                "deprecated": 0,
                "parameters": []
            },
            "get": {
                "summary": "Get Todos",
                "description": "Get a todo list",
                "operationId": "GetV3Todos",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            }
        },
        "\/todos\/{id}": {
            "delete": {
                "summary": "Delete Todos",
                "description": "Mark a todo as done",
                "operationId": "DeleteV3TodosId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/user": {
            "get": {
                "summary": "Get User",
                "description": "Get the currently authenticated user",
                "operationId": "GetV3User",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/user\/emails": {
            "get": {
                "summary": "Get User Emails",
                "description": "Get the currently authenticated user's email addresses",
                "operationId": "GetV3UserEmails",
                "deprecated": 0,
                "parameters": []
            },
            "post": {
                "summary": "Add User Emails",
                "description": "Add new email address to the currently authenticated user",
                "operationId": "PostV3UserEmails",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "The email of the user"
                    }
                ]
            }
        },
        "\/user\/emails\/{email_id}": {
            "delete": {
                "summary": "Delete User Emails Email",
                "description": "Delete an email address from the currently authenticated user",
                "operationId": "DeleteV3UserEmailsEmailId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "email_id",
                        "in": "path",
                        "description": "The ID of the email"
                    }
                ]
            },
            "get": {
                "summary": "Get User Emails Email",
                "description": "Get a single email address owned by the currently authenticated user",
                "operationId": "GetV3UserEmailsEmailId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "email_id",
                        "in": "path",
                        "description": "The ID of the email"
                    }
                ]
            }
        },
        "\/user\/keys": {
            "get": {
                "summary": "Get User Keys",
                "description": "Get the currently authenticated user's SSH keys",
                "operationId": "GetV3UserKeys",
                "deprecated": 0,
                "parameters": []
            },
            "post": {
                "summary": "Add User Keys",
                "description": "Add a new SSH key to the currently authenticated user",
                "operationId": "PostV3UserKeys",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "key",
                        "in": "formData",
                        "description": "The new deploy key"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "The name of the deploy key"
                    }
                ]
            }
        },
        "\/user\/keys\/{key_id}": {
            "delete": {
                "summary": "Delete User Keys Key",
                "description": "Delete an SSH key from the currently authenticated user",
                "operationId": "DeleteV3UserKeysKeyId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "key_id",
                        "in": "path",
                        "description": "The ID of the deploy key"
                    }
                ]
            },
            "get": {
                "summary": "Get User Keys Key",
                "description": "Get a single key owned by currently authenticated user",
                "operationId": "GetV3UserKeysKeyId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "key_id",
                        "in": "path",
                        "description": "The ID of the deploy key"
                    }
                ]
            }
        },
        "\/users": {
            "get": {
                "summary": "Get Users",
                "description": "Get the list of users",
                "operationId": "GetV3Users",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "Get a single user with a specific username"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search for a specific group"
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "Filters only active users"
                    },
                    {
                        "name": "external",
                        "in": "query",
                        "description": "Filters only external users"
                    },
                    {
                        "name": "blocked",
                        "in": "query",
                        "description": "Filters only blocked users"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            },
            "post": {
                "summary": "Add Users",
                "description": "Create a user. Available only for admins.",
                "operationId": "PostV3Users",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "The email of the user"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "Passord of the user"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "The name of the group"
                    },
                    {
                        "name": "username",
                        "in": "formData",
                        "description": "A user with API access, if applicable"
                    },
                    {
                        "name": "skype",
                        "in": "formData",
                        "description": "The Skype username"
                    },
                    {
                        "name": "linkedin",
                        "in": "formData",
                        "description": "The LinkedIn username"
                    },
                    {
                        "name": "twitter",
                        "in": "formData",
                        "description": "The Twitter username"
                    },
                    {
                        "name": "website_url",
                        "in": "formData",
                        "description": "The website of the user"
                    },
                    {
                        "name": "organization",
                        "in": "formData",
                        "description": "The organization of the user"
                    },
                    {
                        "name": "projects_limit",
                        "in": "formData",
                        "description": "The number of projects a user can create"
                    },
                    {
                        "name": "extern_uid",
                        "in": "formData",
                        "description": "The external authentication provider UID"
                    },
                    {
                        "name": "provider",
                        "in": "formData",
                        "description": "The external provider"
                    },
                    {
                        "name": "bio",
                        "in": "formData",
                        "description": "The biography of the user"
                    },
                    {
                        "name": "location",
                        "in": "formData",
                        "description": "The location of the user"
                    },
                    {
                        "name": "admin",
                        "in": "formData",
                        "description": "Flag indicating the user is an administrator"
                    },
                    {
                        "name": "can_create_group",
                        "in": "formData",
                        "description": "Flag indicating the user can create groups"
                    },
                    {
                        "name": "confirm",
                        "in": "formData",
                        "description": "Flag indicating the account needs to be confirmed"
                    },
                    {
                        "name": "external",
                        "in": "formData",
                        "description": "Flag indicating the user is an external user"
                    }
                ]
            }
        },
        "\/users\/{id}": {
            "delete": {
                "summary": "Delete Users",
                "description": "Delete a user. Available only for admins.",
                "operationId": "DeleteV3UsersId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            },
            "get": {
                "summary": "Get Users",
                "description": "Get a single user",
                "operationId": "GetV3UsersId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            },
            "put": {
                "summary": "Put Users",
                "description": "Update a user. Available only for admins.",
                "operationId": "PutV3UsersId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "The email of the user"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "Passord of the user"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "The name of the group"
                    },
                    {
                        "name": "username",
                        "in": "formData",
                        "description": "A user with API access, if applicable"
                    },
                    {
                        "name": "skype",
                        "in": "formData",
                        "description": "The Skype username"
                    },
                    {
                        "name": "linkedin",
                        "in": "formData",
                        "description": "The LinkedIn username"
                    },
                    {
                        "name": "twitter",
                        "in": "formData",
                        "description": "The Twitter username"
                    },
                    {
                        "name": "website_url",
                        "in": "formData",
                        "description": "The website of the user"
                    },
                    {
                        "name": "organization",
                        "in": "formData",
                        "description": "The organization of the user"
                    },
                    {
                        "name": "projects_limit",
                        "in": "formData",
                        "description": "The number of projects a user can create"
                    },
                    {
                        "name": "extern_uid",
                        "in": "formData",
                        "description": "The external authentication provider UID"
                    },
                    {
                        "name": "provider",
                        "in": "formData",
                        "description": "The external provider"
                    },
                    {
                        "name": "bio",
                        "in": "formData",
                        "description": "The biography of the user"
                    },
                    {
                        "name": "location",
                        "in": "formData",
                        "description": "The location of the user"
                    },
                    {
                        "name": "admin",
                        "in": "formData",
                        "description": "Flag indicating the user is an administrator"
                    },
                    {
                        "name": "can_create_group",
                        "in": "formData",
                        "description": "Flag indicating the user can create groups"
                    },
                    {
                        "name": "confirm",
                        "in": "formData",
                        "description": "Flag indicating the account needs to be confirmed"
                    },
                    {
                        "name": "external",
                        "in": "formData",
                        "description": "Flag indicating the user is an external user"
                    }
                ]
            }
        },
        "\/users\/{id}\/block": {
            "put": {
                "summary": "Put Users  Block",
                "description": "Block a user. Available only for admins.",
                "operationId": "PutV3UsersIdBlock",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/users\/{id}\/emails": {
            "get": {
                "summary": "Get Users  Emails",
                "description": "Get the emails addresses of a specified user. Available only for admins.",
                "operationId": "GetV3UsersIdEmails",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            },
            "post": {
                "summary": "Add Users  Emails",
                "description": "Add an email address to a specified user. Available only for admins.",
                "operationId": "PostV3UsersIdEmails",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "The email of the user"
                    }
                ]
            }
        },
        "\/users\/{id}\/emails\/{email_id}": {
            "delete": {
                "summary": "Delete Users  Emails Email",
                "description": "Delete an email address of a specified user. Available only for admins.",
                "operationId": "DeleteV3UsersIdEmailsEmailId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "email_id",
                        "in": "path",
                        "description": "The ID of the email"
                    }
                ]
            }
        },
        "\/users\/{id}\/events": {
            "get": {
                "summary": "Get Users  Events",
                "description": "This feature was introduced in GitLab 8.13.",
                "operationId": "GetV3UsersIdEvents",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page"
                    }
                ]
            }
        },
        "\/users\/{id}\/keys": {
            "get": {
                "summary": "Get Users  Keys",
                "description": "Get the SSH keys of a specified user. Available only for admins.",
                "operationId": "GetV3UsersIdKeys",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            },
            "post": {
                "summary": "Add Users  Keys",
                "description": "Add an SSH key to a specified user. Available only for admins.",
                "operationId": "PostV3UsersIdKeys",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "key",
                        "in": "formData",
                        "description": "The new deploy key"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "The name of the deploy key"
                    }
                ]
            }
        },
        "\/users\/{id}\/keys\/{key_id}": {
            "delete": {
                "summary": "Delete Users  Keys Key",
                "description": "Delete an existing SSH key from a specified user. Available only for admins.",
                "operationId": "DeleteV3UsersIdKeysKeyId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    },
                    {
                        "name": "key_id",
                        "in": "path",
                        "description": "The ID of the deploy key"
                    }
                ]
            }
        },
        "\/users\/{id}\/unblock": {
            "put": {
                "summary": "Put Users  Unblock",
                "description": "Unblock a user. Available only for admins.",
                "operationId": "PutV3UsersIdUnblock",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of a group"
                    }
                ]
            }
        },
        "\/version": {
            "get": {
                "summary": "Get Version",
                "description": "This feature was introduced in GitLab 8.13.",
                "operationId": "GetV3Version",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/v3\/application\/settings": {
            "get": {
                "summary": "Get the current application settings",
                "description": "Get the current application settings",
                "operationId": "GetV3ApplicationSettings",
                "deprecated": 0,
                "parameters": []
            },
            "put": {
                "summary": "Modify application settings",
                "description": "Modify application settings",
                "operationId": "PutV3ApplicationSettings",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "default_branch_protection",
                        "in": "formData",
                        "description": "Determine if developers can push to master"
                    },
                    {
                        "name": "default_project_visibility",
                        "in": "formData",
                        "description": "The default project visibility"
                    },
                    {
                        "name": "default_snippet_visibility",
                        "in": "formData",
                        "description": "The default snippet visibility"
                    },
                    {
                        "name": "default_group_visibility",
                        "in": "formData",
                        "description": "The default group visibility"
                    },
                    {
                        "name": "restricted_visibility_levels",
                        "in": "formData",
                        "description": "Selected levels cannot be used by non-admin users for projects or snippets. If the public level is restricted, user profiles are only visible to logged in users."
                    },
                    {
                        "name": "import_sources",
                        "in": "formData",
                        "description": "Enabled sources for code import during project creation. OmniAuth must be configured for GitHub, Bitbucket, and GitLab.com"
                    },
                    {
                        "name": "disabled_oauth_sign_in_sources",
                        "in": "formData",
                        "description": "Disable certain OAuth sign-in sources"
                    },
                    {
                        "name": "enabled_git_access_protocol",
                        "in": "formData",
                        "description": "Allow only the selected protocols to be used for Git access."
                    },
                    {
                        "name": "gravatar_enabled",
                        "in": "formData",
                        "description": "Flag indicating if the Gravatar service is enabled"
                    },
                    {
                        "name": "default_projects_limit",
                        "in": "formData",
                        "description": "The maximum number of personal projects"
                    },
                    {
                        "name": "max_attachment_size",
                        "in": "formData",
                        "description": "Maximum attachment size in MB"
                    },
                    {
                        "name": "session_expire_delay",
                        "in": "formData",
                        "description": "Session duration in minutes. GitLab restart is required to apply changes."
                    },
                    {
                        "name": "user_oauth_applications",
                        "in": "formData",
                        "description": "Allow users to register any application to use GitLab as an OAuth provider"
                    },
                    {
                        "name": "user_default_external",
                        "in": "formData",
                        "description": "Newly registered users will by default be external"
                    },
                    {
                        "name": "signup_enabled",
                        "in": "formData",
                        "description": "Flag indicating if sign up is enabled"
                    },
                    {
                        "name": "send_user_confirmation_email",
                        "in": "formData",
                        "description": "Send confirmation email on sign-up"
                    },
                    {
                        "name": "domain_whitelist",
                        "in": "formData",
                        "description": "ONLY users with e-mail addresses that match these domain(s) will be able to sign-up. Wildcards allowed. Use separate lines for multiple entries. Ex: domain.com, *.domain.com"
                    },
                    {
                        "name": "domain_blacklist_enabled",
                        "in": "formData",
                        "description": "Enable domain blacklist for sign ups"
                    },
                    {
                        "name": "domain_blacklist",
                        "in": "formData",
                        "description": "Users with e-mail addresses that match these domain(s) will NOT be able to sign-up. Wildcards allowed. Use separate lines for multiple entries. Ex: domain.com, *.domain.com"
                    },
                    {
                        "name": "after_sign_up_text",
                        "in": "formData",
                        "description": "Text shown after sign up"
                    },
                    {
                        "name": "signin_enabled",
                        "in": "formData",
                        "description": "Flag indicating if sign in is enabled"
                    },
                    {
                        "name": "require_two_factor_authentication",
                        "in": "formData",
                        "description": "Require all users to setup Two-factor authentication"
                    },
                    {
                        "name": "two_factor_grace_period",
                        "in": "formData",
                        "description": "Amount of time (in hours) that users are allowed to skip forced configuration of two-factor authentication"
                    },
                    {
                        "name": "home_page_url",
                        "in": "formData",
                        "description": "We will redirect non-logged in users to this page"
                    },
                    {
                        "name": "after_sign_out_path",
                        "in": "formData",
                        "description": "We will redirect users to this page after they sign out"
                    },
                    {
                        "name": "sign_in_text",
                        "in": "formData",
                        "description": "The sign in text of the GitLab application"
                    },
                    {
                        "name": "help_page_text",
                        "in": "formData",
                        "description": "Custom text displayed on the help page"
                    },
                    {
                        "name": "shared_runners_enabled",
                        "in": "formData",
                        "description": "Enable shared runners for new projects"
                    },
                    {
                        "name": "shared_runners_text",
                        "in": "formData",
                        "description": "Shared runners text "
                    },
                    {
                        "name": "max_artifacts_size",
                        "in": "formData",
                        "description": "Set the maximum file size each build's artifacts can have"
                    },
                    {
                        "name": "container_registry_token_expire_delay",
                        "in": "formData",
                        "description": "Authorization token duration (minutes)"
                    },
                    {
                        "name": "metrics_enabled",
                        "in": "formData",
                        "description": "Enable the InfluxDB metrics"
                    },
                    {
                        "name": "metrics_host",
                        "in": "formData",
                        "description": "The InfluxDB host"
                    },
                    {
                        "name": "metrics_port",
                        "in": "formData",
                        "description": "The UDP port to use for connecting to InfluxDB"
                    },
                    {
                        "name": "metrics_pool_size",
                        "in": "formData",
                        "description": "The amount of InfluxDB connections to open"
                    },
                    {
                        "name": "metrics_timeout",
                        "in": "formData",
                        "description": "The amount of seconds after which an InfluxDB connection will time out"
                    },
                    {
                        "name": "metrics_method_call_threshold",
                        "in": "formData",
                        "description": "A method call is only tracked when it takes longer to complete than the given amount of milliseconds."
                    },
                    {
                        "name": "metrics_sample_interval",
                        "in": "formData",
                        "description": "The sampling interval in seconds"
                    },
                    {
                        "name": "metrics_packet_size",
                        "in": "formData",
                        "description": "The amount of points to store in a single UDP packet"
                    },
                    {
                        "name": "sidekiq_throttling_enabled",
                        "in": "formData",
                        "description": "Enable Sidekiq Job Throttling"
                    },
                    {
                        "name": "sidekiq_throttling_queus",
                        "in": "formData",
                        "description": "Choose which queues you wish to throttle"
                    },
                    {
                        "name": "sidekiq_throttling_factor",
                        "in": "formData",
                        "description": "The factor by which the queues should be throttled. A value between 0.0 and 1.0, exclusive."
                    },
                    {
                        "name": "recaptcha_enabled",
                        "in": "formData",
                        "description": "Helps prevent bots from creating accounts"
                    },
                    {
                        "name": "recaptcha_site_key",
                        "in": "formData",
                        "description": "Generate site key at http:\/\/www.google.com\/recaptcha"
                    },
                    {
                        "name": "recaptcha_private_key",
                        "in": "formData",
                        "description": "Generate private key at http:\/\/www.google.com\/recaptcha"
                    },
                    {
                        "name": "akismet_enabled",
                        "in": "formData",
                        "description": "Helps prevent bots from creating issues"
                    },
                    {
                        "name": "akismet_api_key",
                        "in": "formData",
                        "description": "Generate API key at http:\/\/www.akismet.com"
                    },
                    {
                        "name": "admin_notification_email",
                        "in": "formData",
                        "description": "Abuse reports will be sent to this address if it is set. Abuse reports are always available in the admin area."
                    },
                    {
                        "name": "sentry_enabled",
                        "in": "formData",
                        "description": "Sentry is an error reporting and logging tool which is currently not shipped with GitLab, get it here: https:\/\/getsentry.com"
                    },
                    {
                        "name": "sentry_dsn",
                        "in": "formData",
                        "description": "Sentry Data Source Name"
                    },
                    {
                        "name": "repository_storage",
                        "in": "formData",
                        "description": "Storage paths for new projects"
                    },
                    {
                        "name": "repository_checks_enabled",
                        "in": "formData",
                        "description": "GitLab will periodically run 'git fsck' in all project and wiki repositories to look for silent disk corruption issues."
                    },
                    {
                        "name": "koding_enabled",
                        "in": "formData",
                        "description": "Enable Koding"
                    },
                    {
                        "name": "koding_url",
                        "in": "formData",
                        "description": "The Koding team URL"
                    },
                    {
                        "name": "plantuml_enabled",
                        "in": "formData",
                        "description": "Enable PlantUML"
                    },
                    {
                        "name": "plantuml_url",
                        "in": "formData",
                        "description": "The PlantUML server URL"
                    },
                    {
                        "name": "version_check_enabled",
                        "in": "formData",
                        "description": "Let GitLab inform you when an update is available."
                    },
                    {
                        "name": "email_author_in_body",
                        "in": "formData",
                        "description": "Some email servers do not support overriding the email sender name. Enable this option to include the name of the author of the issue, merge request or comment in the email body instead."
                    },
                    {
                        "name": "html_emails_enabled",
                        "in": "formData",
                        "description": "By default GitLab sends emails in HTML and plain text formats so mail clients can choose what format to use. Disable this option if you only want to send emails in plain text format."
                    },
                    {
                        "name": "housekeeping_enabled",
                        "in": "formData",
                        "description": "Enable automatic repository housekeeping (git repack, git gc)"
                    },
                    {
                        "name": "housekeeping_bitmaps_enabled",
                        "in": "formData",
                        "description": "Creating pack file bitmaps makes housekeeping take a little longer but bitmaps should accelerate 'git clone' performance."
                    },
                    {
                        "name": "housekeeping_incremental_repack_period",
                        "in": "formData",
                        "description": "Number of Git pushes after which an incremental 'git repack' is run."
                    },
                    {
                        "name": "housekeeping_full_repack_period",
                        "in": "formData",
                        "description": "Number of Git pushes after which a full 'git repack' is run."
                    },
                    {
                        "name": "housekeeping_gc_period",
                        "in": "formData",
                        "description": "Number of Git pushes after which 'git gc' is run."
                    }
                ]
            }
        },
        "\/v3\/ci\/lint": {
            "post": {
                "summary": "Validation of .gitlab-ci.yml content",
                "description": "Validation of .gitlab-ci.yml content",
                "operationId": "PostV3CiLint",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "content",
                        "in": "formData",
                        "description": "Content of .gitlab-ci.yml"
                    }
                ]
            }
        },
        "\/v3\/deploy_keys": {
            "get": {
                "summary": "",
                "description": "",
                "operationId": "GetV3DeployKeys",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/v3\/dockerfiles": {
            "get": {
                "summary": "Get the list of the available template",
                "description": "This feature was introduced in GitLab 8.15. This endpoint is deprecated and will be removed in GitLab 9.0.",
                "operationId": "GetV3Dockerfiles",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/v3\/dockerfiles\/{name}": {
            "get": {
                "summary": "Get the text for a specific template present in local filesystem",
                "description": "This feature was introduced in GitLab 8.15. This endpoint is deprecated and will be removed in GitLab 9.0.",
                "operationId": "GetV3DockerfilesName",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the template"
                    }
                ]
            }
        },
        "\/v3\/gitignores": {
            "get": {
                "summary": "Get the list of the available template",
                "description": "This feature was introduced in GitLab 8.8. This endpoint is deprecated and will be removed in GitLab 9.0.",
                "operationId": "GetV3Gitignores",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/v3\/gitignores\/{name}": {
            "get": {
                "summary": "Get the text for a specific template present in local filesystem",
                "description": "This feature was introduced in GitLab 8.8. This endpoint is deprecated and will be removed in GitLab 9.0.",
                "operationId": "GetV3GitignoresName",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the template"
                    }
                ]
            }
        },
        "\/v3\/gitlab_ci_ymls": {
            "get": {
                "summary": "Get the list of the available template",
                "description": "This feature was introduced in GitLab 8.9. This endpoint is deprecated and will be removed in GitLab 9.0.",
                "operationId": "GetV3GitlabCiYmls",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/v3\/gitlab_ci_ymls\/{name}": {
            "get": {
                "summary": "Get the text for a specific template present in local filesystem",
                "description": "This feature was introduced in GitLab 8.9. This endpoint is deprecated and will be removed in GitLab 9.0.",
                "operationId": "GetV3GitlabCiYmlsName",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the template"
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "AccessRequester": {
                "type": "object",
                "properties": {
                    "avatar_url": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    },
                    "requested_at": {
                        "description": "",
                        "type": "get"
                    },
                    "state": {
                        "description": "",
                        "type": "get"
                    },
                    "username": {
                        "description": "",
                        "type": "get"
                    },
                    "web_url": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "ApplicationSetting": {
                "type": "object",
                "properties": {
                    "after_sign_out_path": {
                        "description": "",
                        "type": "get"
                    },
                    "after_sign_up_text": {
                        "description": "",
                        "type": "get"
                    },
                    "container_registry_token_expire_delay": {
                        "description": "",
                        "type": "get"
                    },
                    "created_at": {
                        "description": "",
                        "type": "get"
                    },
                    "default_branch_protection": {
                        "description": "",
                        "type": "get"
                    },
                    "default_group_visibility": {
                        "description": "",
                        "type": "get"
                    },
                    "default_project_visibility": {
                        "description": "",
                        "type": "get"
                    },
                    "default_projects_limit": {
                        "description": "",
                        "type": "get"
                    },
                    "default_snippet_visibility": {
                        "description": "",
                        "type": "get"
                    },
                    "domain_blacklist": {
                        "description": "",
                        "type": "get"
                    },
                    "domain_blacklist_enabled": {
                        "description": "",
                        "type": "get"
                    },
                    "domain_whitelist": {
                        "description": "",
                        "type": "get"
                    },
                    "gravatar_enabled": {
                        "description": "",
                        "type": "get"
                    },
                    "home_page_url": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "koding_enabled": {
                        "description": "",
                        "type": "get"
                    },
                    "koding_url": {
                        "description": "",
                        "type": "get"
                    },
                    "max_attachment_size": {
                        "description": "",
                        "type": "get"
                    },
                    "plantuml_enabled": {
                        "description": "",
                        "type": "get"
                    },
                    "plantuml_url": {
                        "description": "",
                        "type": "get"
                    },
                    "repository_storage": {
                        "description": "",
                        "type": "get"
                    },
                    "repository_storages": {
                        "description": "",
                        "type": "get"
                    },
                    "restricted_visibility_levels": {
                        "description": "",
                        "type": "get"
                    },
                    "session_expire_delay": {
                        "description": "",
                        "type": "get"
                    },
                    "sign_in_text": {
                        "description": "",
                        "type": "get"
                    },
                    "signin_enabled": {
                        "description": "",
                        "type": "get"
                    },
                    "signup_enabled": {
                        "description": "",
                        "type": "get"
                    },
                    "updated_at": {
                        "description": "",
                        "type": "get"
                    },
                    "user_oauth_applications": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "AwardEmoji": {
                "type": "object",
                "properties": {
                    "awardable_id": {
                        "description": "",
                        "type": "get"
                    },
                    "awardable_type": {
                        "description": "",
                        "type": "get"
                    },
                    "created_at": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    },
                    "updated_at": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "BasicProjectDetails": {
                "type": "object",
                "properties": {
                    "http_url_to_repo": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    },
                    "name_with_namespace": {
                        "description": "",
                        "type": "get"
                    },
                    "path": {
                        "description": "",
                        "type": "get"
                    },
                    "path_with_namespace": {
                        "description": "",
                        "type": "get"
                    },
                    "web_url": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "Board": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "Build": {
                "type": "object",
                "properties": {
                    "coverage": {
                        "description": "",
                        "type": "get"
                    },
                    "created_at": {
                        "description": "",
                        "type": "get"
                    },
                    "finished_at": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    },
                    "ref": {
                        "description": "",
                        "type": "get"
                    },
                    "stage": {
                        "description": "",
                        "type": "get"
                    },
                    "started_at": {
                        "description": "",
                        "type": "get"
                    },
                    "status": {
                        "description": "",
                        "type": "get"
                    },
                    "tag": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "BuildArtifactFile": {
                "type": "object",
                "properties": {
                    "filename": {
                        "description": "",
                        "type": "get"
                    },
                    "size": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "CommitNote": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "description": "",
                        "type": "get"
                    },
                    "line": {
                        "description": "",
                        "type": "get"
                    },
                    "line_type": {
                        "description": "",
                        "type": "get"
                    },
                    "note": {
                        "description": "",
                        "type": "get"
                    },
                    "path": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "CommitStatus": {
                "type": "object",
                "properties": {
                    "allow_failure": {
                        "description": "",
                        "type": "get"
                    },
                    "created_at": {
                        "description": "",
                        "type": "get"
                    },
                    "description": {
                        "description": "",
                        "type": "get"
                    },
                    "finished_at": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    },
                    "ref": {
                        "description": "",
                        "type": "get"
                    },
                    "sha": {
                        "description": "",
                        "type": "get"
                    },
                    "started_at": {
                        "description": "",
                        "type": "get"
                    },
                    "status": {
                        "description": "",
                        "type": "get"
                    },
                    "target_url": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "Compare": {
                "type": "object",
                "properties": {
                    "compare_same_ref": {
                        "description": "",
                        "type": "get"
                    },
                    "compare_timeout": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "Contributor": {
                "type": "object",
                "properties": {
                    "additions": {
                        "description": "",
                        "type": "get"
                    },
                    "commits": {
                        "description": "",
                        "type": "get"
                    },
                    "deletions": {
                        "description": "",
                        "type": "get"
                    },
                    "email": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "Deployment": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "iid": {
                        "description": "",
                        "type": "get"
                    },
                    "ref": {
                        "description": "",
                        "type": "get"
                    },
                    "sha": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "Email": {
                "type": "object",
                "properties": {
                    "email": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "Environment": {
                "type": "object",
                "properties": {
                    "external_url": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    },
                    "slug": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "EnvironmentBasic": {
                "type": "object",
                "properties": {
                    "external_url": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    },
                    "slug": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "Event": {
                "type": "object",
                "properties": {
                    "action_name": {
                        "description": "",
                        "type": "get"
                    },
                    "author_id": {
                        "description": "",
                        "type": "get"
                    },
                    "author_username": {
                        "description": "",
                        "type": "get"
                    },
                    "created_at": {
                        "description": "",
                        "type": "get"
                    },
                    "data": {
                        "description": "",
                        "type": "get"
                    },
                    "project_id": {
                        "description": "",
                        "type": "get"
                    },
                    "target_id": {
                        "description": "",
                        "type": "get"
                    },
                    "target_title": {
                        "description": "",
                        "type": "get"
                    },
                    "target_type": {
                        "description": "",
                        "type": "get"
                    },
                    "title": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "GlobalNotificationSetting": {
                "type": "object",
                "properties": {
                    "events": {
                        "description": "",
                        "type": "get"
                    },
                    "level": {
                        "description": "",
                        "type": "get"
                    },
                    "notification_email": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "Group": {
                "type": "object",
                "properties": {
                    "avatar_url": {
                        "description": "",
                        "type": "get"
                    },
                    "description": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "lfs_enabled": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    },
                    "path": {
                        "description": "",
                        "type": "get"
                    },
                    "request_access_enabled": {
                        "description": "",
                        "type": "get"
                    },
                    "statistics": {
                        "description": "",
                        "type": "get"
                    },
                    "visibility_level": {
                        "description": "",
                        "type": "get"
                    },
                    "web_url": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "GroupDetail": {
                "type": "object",
                "properties": {
                    "avatar_url": {
                        "description": "",
                        "type": "get"
                    },
                    "description": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "lfs_enabled": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    },
                    "path": {
                        "description": "",
                        "type": "get"
                    },
                    "request_access_enabled": {
                        "description": "",
                        "type": "get"
                    },
                    "statistics": {
                        "description": "",
                        "type": "get"
                    },
                    "visibility_level": {
                        "description": "",
                        "type": "get"
                    },
                    "web_url": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "Hook": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "description": "",
                        "type": "get"
                    },
                    "enable_ssl_verification": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "push_events": {
                        "description": "",
                        "type": "get"
                    },
                    "tag_push_events": {
                        "description": "",
                        "type": "get"
                    },
                    "url": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "Identity": {
                "type": "object",
                "properties": {
                    "extern_uid": {
                        "description": "",
                        "type": "get"
                    },
                    "provider": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "Issue": {
                "type": "object",
                "properties": {
                    "confidential": {
                        "description": "",
                        "type": "get"
                    },
                    "created_at": {
                        "description": "",
                        "type": "get"
                    },
                    "description": {
                        "description": "",
                        "type": "get"
                    },
                    "downvotes": {
                        "description": "",
                        "type": "get"
                    },
                    "due_date": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "iid": {
                        "description": "",
                        "type": "get"
                    },
                    "labels": {
                        "description": "",
                        "type": "get"
                    },
                    "project_id": {
                        "description": "",
                        "type": "get"
                    },
                    "state": {
                        "description": "",
                        "type": "get"
                    },
                    "subscribed": {
                        "description": "",
                        "type": "get"
                    },
                    "title": {
                        "description": "",
                        "type": "get"
                    },
                    "updated_at": {
                        "description": "",
                        "type": "get"
                    },
                    "upvotes": {
                        "description": "",
                        "type": "get"
                    },
                    "user_notes_count": {
                        "description": "",
                        "type": "get"
                    },
                    "web_url": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "Label": {
                "type": "object",
                "properties": {
                    "closed_issues_count": {
                        "description": "",
                        "type": "get"
                    },
                    "color": {
                        "description": "",
                        "type": "get"
                    },
                    "description": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    },
                    "open_issues_count": {
                        "description": "",
                        "type": "get"
                    },
                    "open_merge_requests_count": {
                        "description": "",
                        "type": "get"
                    },
                    "priority": {
                        "description": "",
                        "type": "get"
                    },
                    "subscribed": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "LabelBasic": {
                "type": "object",
                "properties": {
                    "color": {
                        "description": "",
                        "type": "get"
                    },
                    "description": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "List": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "position": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "MRNote": {
                "type": "object",
                "properties": {
                    "note": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "Member": {
                "type": "object",
                "properties": {
                    "access_level": {
                        "description": "",
                        "type": "get"
                    },
                    "avatar_url": {
                        "description": "",
                        "type": "get"
                    },
                    "expires_at": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    },
                    "state": {
                        "description": "",
                        "type": "get"
                    },
                    "username": {
                        "description": "",
                        "type": "get"
                    },
                    "web_url": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "MergeRequest": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "description": "",
                        "type": "get"
                    },
                    "description": {
                        "description": "",
                        "type": "get"
                    },
                    "downvotes": {
                        "description": "",
                        "type": "get"
                    },
                    "force_remove_source_branch": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "iid": {
                        "description": "",
                        "type": "get"
                    },
                    "labels": {
                        "description": "",
                        "type": "get"
                    },
                    "merge_commit_sha": {
                        "description": "",
                        "type": "get"
                    },
                    "merge_status": {
                        "description": "",
                        "type": "get"
                    },
                    "merge_when_build_succeeds": {
                        "description": "",
                        "type": "get"
                    },
                    "project_id": {
                        "description": "",
                        "type": "get"
                    },
                    "sha": {
                        "description": "",
                        "type": "get"
                    },
                    "should_remove_source_branch": {
                        "description": "",
                        "type": "get"
                    },
                    "source_branch": {
                        "description": "",
                        "type": "get"
                    },
                    "source_project_id": {
                        "description": "",
                        "type": "get"
                    },
                    "state": {
                        "description": "",
                        "type": "get"
                    },
                    "subscribed": {
                        "description": "",
                        "type": "get"
                    },
                    "target_branch": {
                        "description": "",
                        "type": "get"
                    },
                    "target_project_id": {
                        "description": "",
                        "type": "get"
                    },
                    "title": {
                        "description": "",
                        "type": "get"
                    },
                    "updated_at": {
                        "description": "",
                        "type": "get"
                    },
                    "upvotes": {
                        "description": "",
                        "type": "get"
                    },
                    "user_notes_count": {
                        "description": "",
                        "type": "get"
                    },
                    "web_url": {
                        "description": "",
                        "type": "get"
                    },
                    "work_in_progress": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "MergeRequestChanges": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "description": "",
                        "type": "get"
                    },
                    "description": {
                        "description": "",
                        "type": "get"
                    },
                    "downvotes": {
                        "description": "",
                        "type": "get"
                    },
                    "force_remove_source_branch": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "iid": {
                        "description": "",
                        "type": "get"
                    },
                    "labels": {
                        "description": "",
                        "type": "get"
                    },
                    "merge_commit_sha": {
                        "description": "",
                        "type": "get"
                    },
                    "merge_status": {
                        "description": "",
                        "type": "get"
                    },
                    "merge_when_build_succeeds": {
                        "description": "",
                        "type": "get"
                    },
                    "project_id": {
                        "description": "",
                        "type": "get"
                    },
                    "sha": {
                        "description": "",
                        "type": "get"
                    },
                    "should_remove_source_branch": {
                        "description": "",
                        "type": "get"
                    },
                    "source_branch": {
                        "description": "",
                        "type": "get"
                    },
                    "source_project_id": {
                        "description": "",
                        "type": "get"
                    },
                    "state": {
                        "description": "",
                        "type": "get"
                    },
                    "subscribed": {
                        "description": "",
                        "type": "get"
                    },
                    "target_branch": {
                        "description": "",
                        "type": "get"
                    },
                    "target_project_id": {
                        "description": "",
                        "type": "get"
                    },
                    "title": {
                        "description": "",
                        "type": "get"
                    },
                    "updated_at": {
                        "description": "",
                        "type": "get"
                    },
                    "upvotes": {
                        "description": "",
                        "type": "get"
                    },
                    "user_notes_count": {
                        "description": "",
                        "type": "get"
                    },
                    "web_url": {
                        "description": "",
                        "type": "get"
                    },
                    "work_in_progress": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "MergeRequestDiff": {
                "type": "object",
                "properties": {
                    "base_commit_sha": {
                        "description": "",
                        "type": "get"
                    },
                    "created_at": {
                        "description": "",
                        "type": "get"
                    },
                    "head_commit_sha": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "merge_request_id": {
                        "description": "",
                        "type": "get"
                    },
                    "real_size": {
                        "description": "",
                        "type": "get"
                    },
                    "start_commit_sha": {
                        "description": "",
                        "type": "get"
                    },
                    "state": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "MergeRequestDiffFull": {
                "type": "object",
                "properties": {
                    "base_commit_sha": {
                        "description": "",
                        "type": "get"
                    },
                    "created_at": {
                        "description": "",
                        "type": "get"
                    },
                    "head_commit_sha": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "merge_request_id": {
                        "description": "",
                        "type": "get"
                    },
                    "real_size": {
                        "description": "",
                        "type": "get"
                    },
                    "start_commit_sha": {
                        "description": "",
                        "type": "get"
                    },
                    "state": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "Milestone": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "description": "",
                        "type": "get"
                    },
                    "description": {
                        "description": "",
                        "type": "get"
                    },
                    "due_date": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "iid": {
                        "description": "",
                        "type": "get"
                    },
                    "project_id": {
                        "description": "",
                        "type": "get"
                    },
                    "start_date": {
                        "description": "",
                        "type": "get"
                    },
                    "state": {
                        "description": "",
                        "type": "get"
                    },
                    "title": {
                        "description": "",
                        "type": "get"
                    },
                    "updated_at": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "Namespace": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "kind": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    },
                    "path": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "Note": {
                "type": "object",
                "properties": {
                    "attachment": {
                        "description": "",
                        "type": "get"
                    },
                    "body": {
                        "description": "",
                        "type": "get"
                    },
                    "created_at": {
                        "description": "",
                        "type": "get"
                    },
                    "downvote?": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "noteable_id": {
                        "description": "",
                        "type": "get"
                    },
                    "noteable_type": {
                        "description": "",
                        "type": "get"
                    },
                    "system": {
                        "description": "",
                        "type": "get"
                    },
                    "updated_at": {
                        "description": "",
                        "type": "get"
                    },
                    "upvote?": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "NotificationSetting": {
                "type": "object",
                "properties": {
                    "events": {
                        "description": "",
                        "type": "get"
                    },
                    "level": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "PersonalSnippet": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "description": "",
                        "type": "get"
                    },
                    "file_name": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "raw_url": {
                        "description": "",
                        "type": "get"
                    },
                    "title": {
                        "description": "",
                        "type": "get"
                    },
                    "updated_at": {
                        "description": "",
                        "type": "get"
                    },
                    "web_url": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "Pipeline": {
                "type": "object",
                "properties": {
                    "before_sha": {
                        "description": "",
                        "type": "get"
                    },
                    "committed_at": {
                        "description": "",
                        "type": "get"
                    },
                    "coverage": {
                        "description": "",
                        "type": "get"
                    },
                    "created_at": {
                        "description": "",
                        "type": "get"
                    },
                    "duration": {
                        "description": "",
                        "type": "get"
                    },
                    "finished_at": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "ref": {
                        "description": "",
                        "type": "get"
                    },
                    "sha": {
                        "description": "",
                        "type": "get"
                    },
                    "started_at": {
                        "description": "",
                        "type": "get"
                    },
                    "status": {
                        "description": "",
                        "type": "get"
                    },
                    "tag": {
                        "description": "",
                        "type": "get"
                    },
                    "updated_at": {
                        "description": "",
                        "type": "get"
                    },
                    "yaml_errors": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "PipelineBasic": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "ref": {
                        "description": "",
                        "type": "get"
                    },
                    "sha": {
                        "description": "",
                        "type": "get"
                    },
                    "status": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "Project": {
                "type": "object",
                "properties": {
                    "archived": {
                        "description": "",
                        "type": "get"
                    },
                    "avatar_url": {
                        "description": "",
                        "type": "get"
                    },
                    "builds_enabled": {
                        "description": "",
                        "type": "get"
                    },
                    "container_registry_enabled": {
                        "description": "",
                        "type": "get"
                    },
                    "created_at": {
                        "description": "",
                        "type": "get"
                    },
                    "creator_id": {
                        "description": "",
                        "type": "get"
                    },
                    "default_branch": {
                        "description": "",
                        "type": "get"
                    },
                    "description": {
                        "description": "",
                        "type": "get"
                    },
                    "forks_count": {
                        "description": "",
                        "type": "get"
                    },
                    "http_url_to_repo": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "issues_enabled": {
                        "description": "",
                        "type": "get"
                    },
                    "last_activity_at": {
                        "description": "",
                        "type": "get"
                    },
                    "lfs_enabled": {
                        "description": "",
                        "type": "get"
                    },
                    "merge_requests_enabled": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    },
                    "name_with_namespace": {
                        "description": "",
                        "type": "get"
                    },
                    "only_allow_merge_if_all_discussions_are_resolved": {
                        "description": "",
                        "type": "get"
                    },
                    "only_allow_merge_if_build_succeeds": {
                        "description": "",
                        "type": "get"
                    },
                    "open_issues_count": {
                        "description": "",
                        "type": "get"
                    },
                    "path": {
                        "description": "",
                        "type": "get"
                    },
                    "path_with_namespace": {
                        "description": "",
                        "type": "get"
                    },
                    "public": {
                        "description": "",
                        "type": "get"
                    },
                    "public_builds": {
                        "description": "",
                        "type": "get"
                    },
                    "request_access_enabled": {
                        "description": "",
                        "type": "get"
                    },
                    "runners_token": {
                        "description": "",
                        "type": "get"
                    },
                    "shared_runners_enabled": {
                        "description": "",
                        "type": "get"
                    },
                    "shared_with_groups": {
                        "description": "",
                        "type": "get"
                    },
                    "snippets_enabled": {
                        "description": "",
                        "type": "get"
                    },
                    "ssh_url_to_repo": {
                        "description": "",
                        "type": "get"
                    },
                    "star_count": {
                        "description": "",
                        "type": "get"
                    },
                    "tag_list": {
                        "description": "",
                        "type": "get"
                    },
                    "visibility_level": {
                        "description": "",
                        "type": "get"
                    },
                    "web_url": {
                        "description": "",
                        "type": "get"
                    },
                    "wiki_enabled": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "ProjectGroupLink": {
                "type": "object",
                "properties": {
                    "expires_at": {
                        "description": "",
                        "type": "get"
                    },
                    "group_access": {
                        "description": "",
                        "type": "get"
                    },
                    "group_id": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "project_id": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "ProjectHook": {
                "type": "object",
                "properties": {
                    "build_events": {
                        "description": "",
                        "type": "get"
                    },
                    "created_at": {
                        "description": "",
                        "type": "get"
                    },
                    "enable_ssl_verification": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "issues_events": {
                        "description": "",
                        "type": "get"
                    },
                    "merge_requests_events": {
                        "description": "",
                        "type": "get"
                    },
                    "note_events": {
                        "description": "",
                        "type": "get"
                    },
                    "pipeline_events": {
                        "description": "",
                        "type": "get"
                    },
                    "project_id": {
                        "description": "",
                        "type": "get"
                    },
                    "push_events": {
                        "description": "",
                        "type": "get"
                    },
                    "tag_push_events": {
                        "description": "",
                        "type": "get"
                    },
                    "url": {
                        "description": "",
                        "type": "get"
                    },
                    "wiki_page_events": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "ProjectService": {
                "type": "object",
                "properties": {
                    "active": {
                        "description": "",
                        "type": "get"
                    },
                    "build_events": {
                        "description": "",
                        "type": "get"
                    },
                    "created_at": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "issues_events": {
                        "description": "",
                        "type": "get"
                    },
                    "merge_requests_events": {
                        "description": "",
                        "type": "get"
                    },
                    "note_events": {
                        "description": "",
                        "type": "get"
                    },
                    "pipeline_events": {
                        "description": "",
                        "type": "get"
                    },
                    "properties": {
                        "description": "",
                        "type": "get"
                    },
                    "push_events": {
                        "description": "",
                        "type": "get"
                    },
                    "tag_push_events": {
                        "description": "",
                        "type": "get"
                    },
                    "title": {
                        "description": "",
                        "type": "get"
                    },
                    "updated_at": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "ProjectSnippet": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "description": "",
                        "type": "get"
                    },
                    "expires_at": {
                        "description": "",
                        "type": "get"
                    },
                    "file_name": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "title": {
                        "description": "",
                        "type": "get"
                    },
                    "updated_at": {
                        "description": "",
                        "type": "get"
                    },
                    "web_url": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "ProjectStatistics": {
                "type": "object",
                "properties": {
                    "build_artifacts_size": {
                        "description": "",
                        "type": "get"
                    },
                    "commit_count": {
                        "description": "",
                        "type": "get"
                    },
                    "lfs_objects_size": {
                        "description": "",
                        "type": "get"
                    },
                    "repository_size": {
                        "description": "",
                        "type": "get"
                    },
                    "storage_size": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "ProjectWithAccess": {
                "type": "object",
                "properties": {
                    "archived": {
                        "description": "",
                        "type": "get"
                    },
                    "avatar_url": {
                        "description": "",
                        "type": "get"
                    },
                    "builds_enabled": {
                        "description": "",
                        "type": "get"
                    },
                    "container_registry_enabled": {
                        "description": "",
                        "type": "get"
                    },
                    "created_at": {
                        "description": "",
                        "type": "get"
                    },
                    "creator_id": {
                        "description": "",
                        "type": "get"
                    },
                    "default_branch": {
                        "description": "",
                        "type": "get"
                    },
                    "description": {
                        "description": "",
                        "type": "get"
                    },
                    "forks_count": {
                        "description": "",
                        "type": "get"
                    },
                    "http_url_to_repo": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "issues_enabled": {
                        "description": "",
                        "type": "get"
                    },
                    "last_activity_at": {
                        "description": "",
                        "type": "get"
                    },
                    "lfs_enabled": {
                        "description": "",
                        "type": "get"
                    },
                    "merge_requests_enabled": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    },
                    "name_with_namespace": {
                        "description": "",
                        "type": "get"
                    },
                    "only_allow_merge_if_all_discussions_are_resolved": {
                        "description": "",
                        "type": "get"
                    },
                    "only_allow_merge_if_build_succeeds": {
                        "description": "",
                        "type": "get"
                    },
                    "open_issues_count": {
                        "description": "",
                        "type": "get"
                    },
                    "path": {
                        "description": "",
                        "type": "get"
                    },
                    "path_with_namespace": {
                        "description": "",
                        "type": "get"
                    },
                    "permissions": {
                        "description": "",
                        "type": "get"
                    },
                    "public": {
                        "description": "",
                        "type": "get"
                    },
                    "public_builds": {
                        "description": "",
                        "type": "get"
                    },
                    "request_access_enabled": {
                        "description": "",
                        "type": "get"
                    },
                    "runners_token": {
                        "description": "",
                        "type": "get"
                    },
                    "shared_runners_enabled": {
                        "description": "",
                        "type": "get"
                    },
                    "shared_with_groups": {
                        "description": "",
                        "type": "get"
                    },
                    "snippets_enabled": {
                        "description": "",
                        "type": "get"
                    },
                    "ssh_url_to_repo": {
                        "description": "",
                        "type": "get"
                    },
                    "star_count": {
                        "description": "",
                        "type": "get"
                    },
                    "tag_list": {
                        "description": "",
                        "type": "get"
                    },
                    "visibility_level": {
                        "description": "",
                        "type": "get"
                    },
                    "web_url": {
                        "description": "",
                        "type": "get"
                    },
                    "wiki_enabled": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "Release": {
                "type": "object",
                "properties": {
                    "description": {
                        "description": "",
                        "type": "get"
                    },
                    "tag_name": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "RepoBranch": {
                "type": "object",
                "properties": {
                    "commit": {
                        "description": "",
                        "type": "get"
                    },
                    "developers_can_merge": {
                        "description": "",
                        "type": "get"
                    },
                    "developers_can_push": {
                        "description": "",
                        "type": "get"
                    },
                    "merged": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    },
                    "protected": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "RepoCommit": {
                "type": "object",
                "properties": {
                    "author_email": {
                        "description": "",
                        "type": "get"
                    },
                    "author_name": {
                        "description": "",
                        "type": "get"
                    },
                    "committer_email": {
                        "description": "",
                        "type": "get"
                    },
                    "committer_name": {
                        "description": "",
                        "type": "get"
                    },
                    "created_at": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "message": {
                        "description": "",
                        "type": "get"
                    },
                    "short_id": {
                        "description": "",
                        "type": "get"
                    },
                    "title": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "RepoCommitDetail": {
                "type": "object",
                "properties": {
                    "author_email": {
                        "description": "",
                        "type": "get"
                    },
                    "author_name": {
                        "description": "",
                        "type": "get"
                    },
                    "authored_date": {
                        "description": "",
                        "type": "get"
                    },
                    "committed_date": {
                        "description": "",
                        "type": "get"
                    },
                    "committer_email": {
                        "description": "",
                        "type": "get"
                    },
                    "committer_name": {
                        "description": "",
                        "type": "get"
                    },
                    "created_at": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "message": {
                        "description": "",
                        "type": "get"
                    },
                    "parent_ids": {
                        "description": "",
                        "type": "get"
                    },
                    "short_id": {
                        "description": "",
                        "type": "get"
                    },
                    "status": {
                        "description": "",
                        "type": "get"
                    },
                    "title": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "RepoCommitStats": {
                "type": "object",
                "properties": {
                    "additions": {
                        "description": "",
                        "type": "get"
                    },
                    "deletions": {
                        "description": "",
                        "type": "get"
                    },
                    "total": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "RepoDiff": {
                "type": "object",
                "properties": {
                    "a_mode": {
                        "description": "",
                        "type": "get"
                    },
                    "b_mode": {
                        "description": "",
                        "type": "get"
                    },
                    "deleted_file": {
                        "description": "",
                        "type": "get"
                    },
                    "diff": {
                        "description": "",
                        "type": "get"
                    },
                    "new_file": {
                        "description": "",
                        "type": "get"
                    },
                    "new_path": {
                        "description": "",
                        "type": "get"
                    },
                    "old_path": {
                        "description": "",
                        "type": "get"
                    },
                    "renamed_file": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "RepoLicense": {
                "type": "object",
                "properties": {
                    "conditions": {
                        "description": "",
                        "type": "get"
                    },
                    "content": {
                        "description": "",
                        "type": "get"
                    },
                    "description": {
                        "description": "",
                        "type": "get"
                    },
                    "html_url": {
                        "description": "",
                        "type": "get"
                    },
                    "key": {
                        "description": "",
                        "type": "get"
                    },
                    "limitations": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    },
                    "nickname": {
                        "description": "",
                        "type": "get"
                    },
                    "permissions": {
                        "description": "",
                        "type": "get"
                    },
                    "popular": {
                        "description": "",
                        "type": "get"
                    },
                    "source_url": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "RepoTag": {
                "type": "object",
                "properties": {
                    "commit": {
                        "description": "",
                        "type": "get"
                    },
                    "message": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "RepoTreeObject": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "mode": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    },
                    "path": {
                        "description": "",
                        "type": "get"
                    },
                    "type": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "Runner": {
                "type": "object",
                "properties": {
                    "active": {
                        "description": "",
                        "type": "get"
                    },
                    "description": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "is_shared": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "RunnerDetails": {
                "type": "object",
                "properties": {
                    "active": {
                        "description": "",
                        "type": "get"
                    },
                    "architecture": {
                        "description": "",
                        "type": "get"
                    },
                    "contacted_at": {
                        "description": "",
                        "type": "get"
                    },
                    "description": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "is_shared": {
                        "description": "",
                        "type": "get"
                    },
                    "locked": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    },
                    "platform": {
                        "description": "",
                        "type": "get"
                    },
                    "revision": {
                        "description": "",
                        "type": "get"
                    },
                    "run_untagged": {
                        "description": "",
                        "type": "get"
                    },
                    "tag_list": {
                        "description": "",
                        "type": "get"
                    },
                    "token": {
                        "description": "",
                        "type": "get"
                    },
                    "version": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "SSHKey": {
                "type": "object",
                "properties": {
                    "can_push": {
                        "description": "",
                        "type": "get"
                    },
                    "created_at": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "key": {
                        "description": "",
                        "type": "get"
                    },
                    "title": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "SSHKeyWithUser": {
                "type": "object",
                "properties": {
                    "can_push": {
                        "description": "",
                        "type": "get"
                    },
                    "created_at": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "key": {
                        "description": "",
                        "type": "get"
                    },
                    "title": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "Template": {
                "type": "object",
                "properties": {
                    "content": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "TemplatesList": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "Todo": {
                "type": "object",
                "properties": {
                    "action_name": {
                        "description": "",
                        "type": "get"
                    },
                    "body": {
                        "description": "",
                        "type": "get"
                    },
                    "created_at": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "state": {
                        "description": "",
                        "type": "get"
                    },
                    "target": {
                        "description": "",
                        "type": "get"
                    },
                    "target_type": {
                        "description": "",
                        "type": "get"
                    },
                    "target_url": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "Trigger": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "description": "",
                        "type": "get"
                    },
                    "deleted_at": {
                        "description": "",
                        "type": "get"
                    },
                    "last_used": {
                        "description": "",
                        "type": "get"
                    },
                    "token": {
                        "description": "",
                        "type": "get"
                    },
                    "updated_at": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "TriggerRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "variables": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "User": {
                "type": "object",
                "properties": {
                    "avatar_url": {
                        "description": "",
                        "type": "get"
                    },
                    "bio": {
                        "description": "",
                        "type": "get"
                    },
                    "created_at": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "is_admin": {
                        "description": "",
                        "type": "get"
                    },
                    "linkedin": {
                        "description": "",
                        "type": "get"
                    },
                    "location": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    },
                    "organization": {
                        "description": "",
                        "type": "get"
                    },
                    "skype": {
                        "description": "",
                        "type": "get"
                    },
                    "state": {
                        "description": "",
                        "type": "get"
                    },
                    "twitter": {
                        "description": "",
                        "type": "get"
                    },
                    "username": {
                        "description": "",
                        "type": "get"
                    },
                    "web_url": {
                        "description": "",
                        "type": "get"
                    },
                    "website_url": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "UserBasic": {
                "type": "object",
                "properties": {
                    "avatar_url": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    },
                    "state": {
                        "description": "",
                        "type": "get"
                    },
                    "username": {
                        "description": "",
                        "type": "get"
                    },
                    "web_url": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "UserPublic": {
                "type": "object",
                "properties": {
                    "avatar_url": {
                        "description": "",
                        "type": "get"
                    },
                    "bio": {
                        "description": "",
                        "type": "get"
                    },
                    "can_create_group": {
                        "description": "",
                        "type": "get"
                    },
                    "can_create_project": {
                        "description": "",
                        "type": "get"
                    },
                    "color_scheme_id": {
                        "description": "",
                        "type": "get"
                    },
                    "confirmed_at": {
                        "description": "",
                        "type": "get"
                    },
                    "created_at": {
                        "description": "",
                        "type": "get"
                    },
                    "current_sign_in_at": {
                        "description": "",
                        "type": "get"
                    },
                    "email": {
                        "description": "",
                        "type": "get"
                    },
                    "external": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "is_admin": {
                        "description": "",
                        "type": "get"
                    },
                    "last_sign_in_at": {
                        "description": "",
                        "type": "get"
                    },
                    "linkedin": {
                        "description": "",
                        "type": "get"
                    },
                    "location": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    },
                    "organization": {
                        "description": "",
                        "type": "get"
                    },
                    "projects_limit": {
                        "description": "",
                        "type": "get"
                    },
                    "skype": {
                        "description": "",
                        "type": "get"
                    },
                    "state": {
                        "description": "",
                        "type": "get"
                    },
                    "theme_id": {
                        "description": "",
                        "type": "get"
                    },
                    "twitter": {
                        "description": "",
                        "type": "get"
                    },
                    "two_factor_enabled": {
                        "description": "",
                        "type": "get"
                    },
                    "username": {
                        "description": "",
                        "type": "get"
                    },
                    "web_url": {
                        "description": "",
                        "type": "get"
                    },
                    "website_url": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "UserWithPrivateToken": {
                "type": "object",
                "properties": {
                    "avatar_url": {
                        "description": "",
                        "type": "get"
                    },
                    "bio": {
                        "description": "",
                        "type": "get"
                    },
                    "can_create_group": {
                        "description": "",
                        "type": "get"
                    },
                    "can_create_project": {
                        "description": "",
                        "type": "get"
                    },
                    "color_scheme_id": {
                        "description": "",
                        "type": "get"
                    },
                    "confirmed_at": {
                        "description": "",
                        "type": "get"
                    },
                    "created_at": {
                        "description": "",
                        "type": "get"
                    },
                    "current_sign_in_at": {
                        "description": "",
                        "type": "get"
                    },
                    "email": {
                        "description": "",
                        "type": "get"
                    },
                    "external": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "is_admin": {
                        "description": "",
                        "type": "get"
                    },
                    "last_sign_in_at": {
                        "description": "",
                        "type": "get"
                    },
                    "linkedin": {
                        "description": "",
                        "type": "get"
                    },
                    "location": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    },
                    "organization": {
                        "description": "",
                        "type": "get"
                    },
                    "private_token": {
                        "description": "",
                        "type": "get"
                    },
                    "projects_limit": {
                        "description": "",
                        "type": "get"
                    },
                    "skype": {
                        "description": "",
                        "type": "get"
                    },
                    "state": {
                        "description": "",
                        "type": "get"
                    },
                    "theme_id": {
                        "description": "",
                        "type": "get"
                    },
                    "twitter": {
                        "description": "",
                        "type": "get"
                    },
                    "two_factor_enabled": {
                        "description": "",
                        "type": "get"
                    },
                    "username": {
                        "description": "",
                        "type": "get"
                    },
                    "web_url": {
                        "description": "",
                        "type": "get"
                    },
                    "website_url": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "Variable": {
                "type": "object",
                "properties": {
                    "key": {
                        "description": "",
                        "type": "get"
                    },
                    "value": {
                        "description": "",
                        "type": "get"
                    }
                }
            }
        }
    }
}